!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.8	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
drawLine	axis/index.html	/^	function drawLine(v0, v1, color){$/;"	f
update_geometry	dynamic_mesh/index.html	/^	function update_geometry(){$/;"	f
animate	editor/canvas_interactive_voxelpainter.html	/^			function animate() {$/;"	f
init	editor/canvas_interactive_voxelpainter.html	/^			function init() {$/;"	f
onDocumentKeyDown	editor/canvas_interactive_voxelpainter.html	/^			function onDocumentKeyDown( event ) {$/;"	f
onDocumentKeyUp	editor/canvas_interactive_voxelpainter.html	/^			function onDocumentKeyUp( event ) {$/;"	f
onDocumentMouseDown	editor/canvas_interactive_voxelpainter.html	/^			function onDocumentMouseDown( event ) {$/;"	f
onDocumentMouseMove	editor/canvas_interactive_voxelpainter.html	/^			function onDocumentMouseMove( event ) {$/;"	f
onWindowResize	editor/canvas_interactive_voxelpainter.html	/^			function onWindowResize() {$/;"	f
render	editor/canvas_interactive_voxelpainter.html	/^			function render() {$/;"	f
save	editor/canvas_interactive_voxelpainter.html	/^			function save() {$/;"	f
replaceAll	editor/classExpand.js	/^String.prototype.replaceAll = function (org, dest){  $/;"	r
b	editor/color.js	/^	var b = 255 * threeJsColor.b;$/;"	r
g	editor/color.js	/^	var g = 255 * threeJsColor.g;$/;"	r
r	editor/color.js	/^	var r = 255 * threeJsColor.r;$/;"	r
s	editor/color.js	/^	var s = '#' + zero2(r.toString(16)) + zero2(g.toString(16)) + zero2(b.toString(16));$/;"	r
threeJsColor_to_sharpColor	editor/color.js	/^function threeJsColor_to_sharpColor(threeJsColor){$/;"	r
0	editor/editor.js	/^			geometry.vertices.push( new THREE.Vector3( size, 0, i));$/;"	r
0	editor/editor.js	/^			geometry.vertices.push( new THREE.Vector3(-size, 0, i));$/;"	r
0	editor/editor.js	/^			geometry.vertices.push( new THREE.Vector3(i, 0,  size));$/;"	r
0	editor/editor.js	/^			geometry.vertices.push( new THREE.Vector3(i, 0, -size));$/;"	r
1	editor/editor.js	/^		g_camera = new THREE.PerspectiveCamera(45, window.innerWidth \/ window.innerHeight, 1, 10000);$/;"	r
10000	editor/editor.js	/^		g_mouse2d = new THREE.Vector3(0, 10000, 0.5);$/;"	r
CUBE_WIDTH	editor/editor.js	/^		cubeGeo = new THREE.CubeGeometry(CUBE_WIDTH, CUBE_WIDTH, CUBE_WIDTH);$/;"	r
CUBE_WIDTH	editor/editor.js	/^		rollOverGeo = new THREE.CubeGeometry(CUBE_WIDTH, CUBE_WIDTH, CUBE_WIDTH);$/;"	r
addHTML	editor/editor.js	/^			var addHTML = key + ' : ' + val + '<br>';$/;"	r
addToJSON	editor/editor.js	/^	function addToJSON(voxelPosition){$/;"	r
ambientLight	editor/editor.js	/^		var ambientLight = new THREE.AmbientLight(0x606060);$/;"	r
animate	editor/editor.js	/^	function animate() {$/;"	r
b255	editor/editor.js	/^					var b255 = color_threejs.b * 255;$/;"	r
break	editor/editor.js	/^					break;$/;"	r
break	editor/editor.js	/^				g_isMouseCenterPressed = true; break;$/;"	r
break	editor/editor.js	/^				g_isMouseLeftPressed = true; break;$/;"	r
break	editor/editor.js	/^				g_isMouseRightPressed = true; break;$/;"	r
color_key	editor/editor.js	/^			var color_key = color_keys[i];$/;"	r
color_keys	editor/editor.js	/^		var color_keys = Object.keys(g_cubeJSON.cubes);$/;"	r
color_sharp	editor/editor.js	/^					var color_sharp = '#' + zero2(r255.toString(16)) + zero2(g255.toString(16)) + zero2(b255.toString(16));$/;"	r
color_sharp	editor/editor.js	/^		var color_sharp = threeJsColor_to_sharpColor(g_cubeMaterial.color);$/;"	r
color_threejs	editor/editor.js	/^					var color_threejs = g_selectedMaterial.color;$/;"	r
container	editor/editor.js	/^		container = document.getElementById('container');$/;"	r
container	editor/editor.js	/^	var container, stats;$/;"	r
cos_g_phi	editor/editor.js	/^		var cos_g_phi   = Math.cos(THREE.Math.degToRad(g_phi));$/;"	r
cos_g_theta	editor/editor.js	/^		var cos_g_theta = Math.cos(THREE.Math.degToRad(g_theta));$/;"	r
cubeGeo	editor/editor.js	/^		cubeGeo = new THREE.CubeGeometry(CUBE_WIDTH, CUBE_WIDTH, CUBE_WIDTH);$/;"	r
cubeGeo	editor/editor.js	/^	var cubeGeo;$/;"	r
cubeNum	editor/editor.js	/^		var cubeNum = cubeNumObject.children("span").html() \/ 1;$/;"	r
cubeNumObject	editor/editor.js	/^		var cubeNumObject = $("#cube_num");$/;"	r
cubePosition	editor/editor.js	/^		var cubePosition = {};$/;"	r
cubePositions	editor/editor.js	/^			cubePositions = [];$/;"	r
cubePositions	editor/editor.js	/^		var cubePositions = g_cubeJSON.cubes[color_sharp];$/;"	r
debugHash	editor/editor.js	/^	var debugHash = new Array();$/;"	r
debugInfo	editor/editor.js	/^		var debugInfo = document.getElementById('ui_debug');$/;"	r
directionalLight	editor/editor.js	/^		var directionalLight = new THREE.DirectionalLight(0xffffff);$/;"	r
g255	editor/editor.js	/^					var g255 = color_threejs.g * 255;$/;"	r
g_camera	editor/editor.js	/^		g_camera = new THREE.PerspectiveCamera(45, window.innerWidth \/ window.innerHeight, 1, 10000);$/;"	r
g_cubeMaterial	editor/editor.js	/^					g_cubeMaterial = g_selectedMaterial;$/;"	r
g_cubeMaterial	editor/editor.js	/^		g_cubeMaterial = getCubeMaterial(0xfeb74c);$/;"	r
g_isMouseCenterPressed	editor/editor.js	/^				g_isMouseCenterPressed = true; break;$/;"	r
g_isMouseLeftPressed	editor/editor.js	/^				g_isMouseLeftPressed = true; break;$/;"	r
g_isMouseRightPressed	editor/editor.js	/^				g_isMouseRightPressed = true; break;$/;"	r
g_mouse2d	editor/editor.js	/^		g_mouse2d = new THREE.Vector3(0, 10000, 0.5);$/;"	r
g_oldPageX	editor/editor.js	/^			g_oldPageX = event.pageX;$/;"	r
g_oldPageY	editor/editor.js	/^			g_oldPageY = event.pageY;$/;"	r
g_phi	editor/editor.js	/^			g_phi = degreeInRange(g_phi);$/;"	r
g_renderer	editor/editor.js	/^		g_renderer = new THREE.WebGLRenderer({antialias: true, preserveDrawingBuffer: true});$/;"	r
g_rollOverMesh	editor/editor.js	/^		g_rollOverMesh = new THREE.Mesh(rollOverGeo, rollOverMaterial);$/;"	r
g_rollOverMeshMirror	editor/editor.js	/^		g_rollOverMeshMirror = new THREE.Mesh(rollOverGeo, rollOverMaterial);$/;"	r
g_selectedMaterial	editor/editor.js	/^					g_selectedMaterial = intersector.object.material;$/;"	r
g_theta	editor/editor.js	/^			g_theta = degreeInRange(g_theta);$/;"	r
g_theta	editor/editor.js	/^			g_theta = thetaInRange(g_theta);$/;"	r
geometry	editor/editor.js	/^		var geometry = new THREE.Geometry();$/;"	r
getRealIntersector	editor/editor.js	/^	function getRealIntersector(intersects){$/;"	r
hash2html	editor/editor.js	/^	\/\/function hash2html(){$/;"	r
hash2html	editor/editor.js	/^	function hash2html(hash){$/;"	r
html	editor/editor.js	/^		var html = '';$/;"	r
html_json	editor/editor.js	/^		var html_json = JSON.stringify(g_cubeJSON, null, 2);$/;"	r
html_json_str	editor/editor.js	/^		html_json_str = html_json.toString();$/;"	r
html_json_str	editor/editor.js	/^		html_json_str = html_json_str.replaceAll("{", "<br>{")		$/;"	r
html_variables	editor/editor.js	/^		var html_variables = hash2html(debugHash);$/;"	r
i	editor/editor.js	/^	var i, intersector;$/;"	r
incrementCubeNum	editor/editor.js	/^	function incrementCubeNum(increment_value){$/;"	r
init	editor/editor.js	/^	function init() {$/;"	r
intersectY	editor/editor.js	/^				var intersectY = intersector.point.y | 0; \/\/整数$/;"	r
intersector	editor/editor.js	/^					intersector = getRealIntersector(intersects);$/;"	r
intersector	editor/editor.js	/^				intersector = getRealIntersector(intersects);$/;"	r
intersector	editor/editor.js	/^			intersector = getRealIntersector(intersects);$/;"	r
intersector	editor/editor.js	/^			intersector = intersects[i];$/;"	r
intersects	editor/editor.js	/^		var intersects = raycaster.intersectObjects(scene.children);$/;"	r
isSamePosition	editor/editor.js	/^	function isSamePosition(v0, v1){$/;"	r
line	editor/editor.js	/^		var line = new THREE.Line(geometry, material);$/;"	r
material	editor/editor.js	/^		g_rollOverMesh.material = new THREE.MeshBasicMaterial({color: 0x00ff00, opacity: 0.5, transparent: true});$/;"	r
material	editor/editor.js	/^		var material = new THREE.LineBasicMaterial({color: 0x000000, opacity: 0.2});$/;"	r
matrixAutoUpdate	editor/editor.js	/^						voxel.matrixAutoUpdate = false;$/;"	r
matrixAutoUpdate	editor/editor.js	/^					voxel.matrixAutoUpdate = false;$/;"	r
mirrorPosition	editor/editor.js	/^						var mirrorPosition = voxelPosition.clone();$/;"	r
mouse3D	editor/editor.js	/^	var mouse3D, raycaster,$/;"	r
normalMatrix	editor/editor.js	/^	var normalMatrix = new THREE.Matrix3();$/;"	r
null	editor/editor.js	/^		var html_json = JSON.stringify(g_cubeJSON, null, 2);$/;"	r
onDocumentKeyDown	editor/editor.js	/^		document.addEventListener('keydown'  , onDocumentKeyDown,   false);$/;"	r
onDocumentKeyUp	editor/editor.js	/^		document.addEventListener('keyup'    , onDocumentKeyUp,     false);$/;"	r
onDocumentMouseDown	editor/editor.js	/^		document.addEventListener('mousedown', onDocumentMouseDown, false);$/;"	r
onDocumentMouseDown	editor/editor.js	/^	function onDocumentMouseDown(event){$/;"	r
onDocumentMouseMove	editor/editor.js	/^		document.addEventListener('mousemove', onDocumentMouseMove, false);$/;"	r
onDocumentMouseUp	editor/editor.js	/^		document.addEventListener('mouseup'  , onDocumentMouseUp,   false);$/;"	r
onWindowResize	editor/editor.js	/^		window.addEventListener('resize'     , onWindowResize,      false);$/;"	r
opacity	editor/editor.js	/^		g_rollOverMesh.material = new THREE.MeshBasicMaterial({color: 0x00ff00, opacity: 0.5, transparent: true});$/;"	r
opacity	editor/editor.js	/^		rollOverMaterial = new THREE.MeshBasicMaterial({ color: g_selectedColor, opacity: 0.5, transparent: true });$/;"	r
opacity	editor/editor.js	/^		var material = new THREE.LineBasicMaterial({color: 0x000000, opacity: 0.2});$/;"	r
paddingWidth	editor/editor.js	/^		var paddingWidth = 10;$/;"	r
plane	editor/editor.js	/^		plane = new THREE.Mesh(new THREE.PlaneGeometry(1000, 1000), new THREE.MeshBasicMaterial());$/;"	r
position	editor/editor.js	/^					g_rollOverMeshMirror.position = voxelPositionMirror;$/;"	r
position	editor/editor.js	/^				g_rollOverMesh.position = voxelPosition;$/;"	r
position	editor/editor.js	/^				var position = position_array[j];$/;"	r
position	editor/editor.js	/^		debugInfo.style.position = 'absolute';$/;"	r
position_array	editor/editor.js	/^			var position_array = g_cubeJSON.cubes[color_key];$/;"	r
preserveDrawingBuffer	editor/editor.js	/^		g_renderer = new THREE.WebGLRenderer({antialias: true, preserveDrawingBuffer: true});$/;"	r
projector	editor/editor.js	/^		projector = new THREE.Projector();$/;"	r
projector	editor/editor.js	/^	var projector, plane, cube;$/;"	r
r255	editor/editor.js	/^					var r255 = color_threejs.r * 255;$/;"	r
raycaster	editor/editor.js	/^		raycaster = projector.pickingRay(g_mouse2d.clone(), g_camera);$/;"	r
removeFromJSON	editor/editor.js	/^	function removeFromJSON(voxelPosition){$/;"	r
render	editor/editor.js	/^	function render() {$/;"	r
rollOverGeo	editor/editor.js	/^		rollOverGeo = new THREE.CubeGeometry(CUBE_WIDTH, CUBE_WIDTH, CUBE_WIDTH);$/;"	r
rollOverMaterial	editor/editor.js	/^		rollOverMaterial = new THREE.MeshBasicMaterial({ color: g_selectedColor, opacity: 0.5, transparent: true });$/;"	r
rollOverMaterial	editor/editor.js	/^	var rollOverMaterial;$/;"	r
rollOveredFace	editor/editor.js	/^	rollOveredFace = false;$/;"	r
rotateSpeed	editor/editor.js	/^			var rotateSpeed = 2;$/;"	r
scene	editor/editor.js	/^		scene = new THREE.Scene();$/;"	r
scene	editor/editor.js	/^	var scene, g_renderer;$/;"	r
setVoxelPosition	editor/editor.js	/^	function setVoxelPosition(intersector){$/;"	r
sin_g_phi	editor/editor.js	/^		var sin_g_phi   = Math.sin(THREE.Math.degToRad(g_phi));$/;"	r
sin_g_theta	editor/editor.js	/^		var sin_g_theta = Math.sin(THREE.Math.degToRad(g_theta));$/;"	r
size	editor/editor.js	/^		var size = 500, step = 50;$/;"	r
stats	editor/editor.js	/^		stats = new Stats();$/;"	r
tmpVec	editor/editor.js	/^	var tmpVec = new THREE.Vector3();$/;"	r
transparent	editor/editor.js	/^		g_rollOverMesh.material = new THREE.MeshBasicMaterial({color: 0x00ff00, opacity: 0.5, transparent: true});$/;"	r
transparent	editor/editor.js	/^		rollOverMaterial = new THREE.MeshBasicMaterial({ color: g_selectedColor, opacity: 0.5, transparent: true });$/;"	r
type	editor/editor.js	/^		line.type = THREE.LinePieces;$/;"	r
ui_debug_variables	editor/editor.js	/^	var ui_debug_variables = $("#ui_debug_variables");$/;"	r
updateDebugInfo	editor/editor.js	/^	function updateDebugInfo(){$/;"	r
updateJSON	editor/editor.js	/^	function updateJSON(){$/;"	r
updateOnDemo	editor/editor.js	/^	function updateOnDemo(){$/;"	r
val	editor/editor.js	/^				val = val.toFixed(2);$/;"	r
val	editor/editor.js	/^			var val = hash[key];$/;"	r
visible	editor/editor.js	/^		g_rollOverMeshMirror.visible = false;$/;"	r
visible	editor/editor.js	/^		plane.visible = false;$/;"	r
voxel	editor/editor.js	/^						var voxel = new THREE.Mesh(cubeGeo, g_cubeMaterial);$/;"	r
voxel	editor/editor.js	/^					var voxel = new THREE.Mesh(cubeGeo, g_cubeMaterial);$/;"	r
voxelPosition	editor/editor.js	/^						voxelPosition = intersector.object.position;$/;"	r
voxelPosition	editor/editor.js	/^	var voxelPosition = new THREE.Vector3();$/;"	r
voxelPositionMirror	editor/editor.js	/^					var voxelPositionMirror = voxelPosition.clone();$/;"	r
w	editor/editor.js	/^			var w = CUBE_WIDTH;$/;"	r
x	editor/editor.js	/^			voxelPosition.x = Math.floor(voxelPosition.x \/ w) * w + w\/2;$/;"	r
x	editor/editor.js	/^		cubePosition.x = voxelPosition.x;$/;"	r
x	editor/editor.js	/^		g_camera.position.x = g_cameraR * sin_g_theta * cos_g_phi;$/;"	r
x	editor/editor.js	/^		plane.rotation.x = -Math.PI\/2;$/;"	r
y	editor/editor.js	/^			voxelPosition.y = Math.floor(voxelPosition.y \/ w) * w + w\/2;$/;"	r
y	editor/editor.js	/^		cubePosition.y = voxelPosition.y;$/;"	r
y	editor/editor.js	/^		g_camera.position.y = 800;$/;"	r
y	editor/editor.js	/^		g_camera.position.y = g_cameraR * cos_g_theta;$/;"	r
z	editor/editor.js	/^			voxelPosition.z = Math.floor(voxelPosition.z \/ w) * w + w\/2;$/;"	r
z	editor/editor.js	/^		cubePosition.z = voxelPosition.z;$/;"	r
z	editor/editor.js	/^		g_camera.position.z = g_cameraR * sin_g_theta * sin_g_phi;$/;"	r
Y	editor/event.js	/^\/\/X, Y = -1~1$/;"	r
aspect	editor/event.js	/^	g_camera.aspect = window.innerWidth \/ window.innerHeight;$/;"	r
break	editor/event.js	/^			break;$/;"	r
break	editor/event.js	/^			g_isMouseCenterPressed = false; break;$/;"	r
break	editor/event.js	/^			g_isMouseLeftPressed = false; break;$/;"	r
break	editor/event.js	/^			g_isMouseRightPressed = false; break;$/;"	r
break	editor/event.js	/^		case 16: g_isShiftDown = false; break;$/;"	r
break	editor/event.js	/^		case 16: g_isShiftDown = true; break;$/;"	r
break	editor/event.js	/^		case 17: g_isCtrlDown = false; p('ctrl up'); break;$/;"	r
break	editor/event.js	/^		case 17: g_isCtrlDown = true; break;$/;"	r
diffX	editor/event.js	/^		var diffX = event.pageX - g_oldPageX;$/;"	r
diffY	editor/event.js	/^		var diffY = event.pageY - g_oldPageY;$/;"	r
g_isMouseCenterPressed	editor/event.js	/^			g_isMouseCenterPressed = false; break;$/;"	r
g_isMouseLeftPressed	editor/event.js	/^			g_isMouseLeftPressed = false; break;$/;"	r
g_isMouseRightPressed	editor/event.js	/^			g_isMouseRightPressed = false; break;$/;"	r
g_oldPageX	editor/event.js	/^		g_oldPageX = event.pageX;$/;"	r
g_oldPageY	editor/event.js	/^		g_oldPageY = event.pageY;$/;"	r
g_pressedArrowKey	editor/event.js	/^			g_pressedArrowKey = event.keyCode;$/;"	r
g_pressedArrowKey	editor/event.js	/^			g_pressedArrowKey = false;$/;"	r
onDocumentKeyDown	editor/event.js	/^function onDocumentKeyDown( event ) {$/;"	r
onDocumentKeyUp	editor/event.js	/^function onDocumentKeyUp( event ) {$/;"	r
onDocumentMouseMove	editor/event.js	/^function onDocumentMouseMove( event ) {$/;"	r
onDocumentMouseUp	editor/event.js	/^function onDocumentMouseUp( event ) {$/;"	r
onWindowResize	editor/event.js	/^function onWindowResize() {$/;"	r
toggleToolVisible	editor/event.js	/^function toggleToolVisible(){$/;"	r
x	editor/event.js	/^	g_mouse2d.x = ( event.clientX \/ window.innerWidth ) * 2 - 1;$/;"	r
y	editor/event.js	/^	g_mouse2d.y = - ( event.clientY \/ window.innerHeight ) * 2 + 1;$/;"	r
g_camera	editor/global.js	/^var g_camera;$/;"	r
g_cameraR	editor/global.js	/^var g_cameraR = 1500;$/;"	r
g_cubeJSON	editor/global.js	/^var g_cubeJSON = $/;"	r
g_cubeMaterial	editor/global.js	/^var g_cubeMaterial;$/;"	r
g_isCtrlDown	editor/global.js	/^var g_isCtrlDown = false;$/;"	r
g_isDemo	editor/global.js	/^var g_isDemo = false;$/;"	r
g_isMirror	editor/global.js	/^var g_isMirror = false;$/;"	r
g_isMouseCenterPressed	editor/global.js	/^var g_isMouseCenterPressed;$/;"	r
g_isMouseLeftPressed	editor/global.js	/^var g_isMouseLeftPressed;$/;"	r
g_isMouseRightPressed	editor/global.js	/^var g_isMouseRightPressed;$/;"	r
g_isShiftDown	editor/global.js	/^var g_isShiftDown = false;$/;"	r
g_mouse2D	editor/global.js	/^var g_mouse2D;$/;"	r
g_oldPageX	editor/global.js	/^var g_oldPageX = 0;$/;"	r
g_oldPageY	editor/global.js	/^var g_oldPageY = 0;$/;"	r
g_phi	editor/global.js	/^var g_phi = 75;$/;"	r
g_pressedArrowKey	editor/global.js	/^var g_pressedArrowKey;$/;"	r
g_renderer	editor/global.js	/^var g_renderer;$/;"	r
g_rollOverMesh	editor/global.js	/^var g_rollOverMesh;$/;"	r
g_rollOverMeshMirror	editor/global.js	/^var g_rollOverMeshMirror;$/;"	r
g_selectedColor	editor/global.js	/^var g_selectedColor = 0x00ff00;$/;"	r
g_selectedMaterial	editor/global.js	/^var g_selectedMaterial = getCubeMaterial(g_selectedColor);$/;"	r
g_theta	editor/global.js	/^var g_theta = 60;$/;"	r
toggleDemo	editor/index.html	/^function toggleDemo(){$/;"	f
toggleMirror	editor/index.html	/^function toggleMirror(){$/;"	f
delta	editor/mouse_wheel.js	/^                delta = -event.detail\/3;$/;"	r
delta	editor/mouse_wheel.js	/^                delta = event.wheelDelta\/120;$/;"	r
delta	editor/mouse_wheel.js	/^        var delta = 0;$/;"	r
event	editor/mouse_wheel.js	/^                event = window.event;$/;"	r
magnifySpeed	editor/mouse_wheel.js	/^        var magnifySpeed = 30;$/;"	r
mouseWheelHandler	editor/mouse_wheel.js	/^function mouseWheelHandler(delta) {$/;"	r
onMouseWheel	editor/mouse_wheel.js	/^function onMouseWheel(event){$/;"	r
returnValue	editor/mouse_wheel.js	/^	event.returnValue = false;$/;"	r
saveJSONLocally	editor/save.js	/^function saveJSONLocally(){$/;"	r
box	editor/simpleColorPicker/jquery.simple-color-picker.js	/^        var box = $('<div id="' + prefix + $/;"	r
breakLine	editor/simpleColorPicker/jquery.simple-color-picker.js	/^                breakLine = '';$/;"	r
breakLine	editor/simpleColorPicker/jquery.simple-color-picker.js	/^                breakLine = 'clear: both; ';$/;"	r
breakLine	editor/simpleColorPicker/jquery.simple-color-picker.js	/^            var breakLine = '';$/;"	r
colors	editor/simpleColorPicker/jquery.simple-color-picker.js	/^        colors: ['#000000', '#444444', '#666666', '#999999', '#cccccc', '#eeeeee', '#f3f3f3', '#ffffff'$/;"	r
colorsMarkup	editor/simpleColorPicker/jquery.simple-color-picker.js	/^        var colorsMarkup = '';$/;"	r
colorsPerLine	editor/simpleColorPicker/jquery.simple-color-picker.js	/^        colorsPerLine: 8,$/;"	r
defaults	editor/simpleColorPicker/jquery.simple-color-picker.js	/^    var defaults = {$/;"	r
else	editor/simpleColorPicker/jquery.simple-color-picker.js	/^            else$/;"	r
g_selectedColor	editor/simpleColorPicker/jquery.simple-color-picker.js	/^            g_selectedColor = sharpTo0x(selected_color);$/;"	r
g_selectedMaterial	editor/simpleColorPicker/jquery.simple-color-picker.js	/^            g_selectedMaterial = getCubeMaterial(g_selectedColor);$/;"	r
hideBox	editor/simpleColorPicker/jquery.simple-color-picker.js	/^        function hideBox(box) {$/;"	r
hideEffect	editor/simpleColorPicker/jquery.simple-color-picker.js	/^        hideEffect: '',$/;"	r
item	editor/simpleColorPicker/jquery.simple-color-picker.js	/^            var item = opts.colors[i];$/;"	r
left	editor/simpleColorPicker/jquery.simple-color-picker.js	/^          var left = pos.left + txt.outerWidth() - box.outerWidth();$/;"	r
onChangeColor	editor/simpleColorPicker/jquery.simple-color-picker.js	/^        onChangeColor: false$/;"	r
opts	editor/simpleColorPicker/jquery.simple-color-picker.js	/^    var opts = $.extend(defaults, options);$/;"	r
pos	editor/simpleColorPicker/jquery.simple-color-picker.js	/^          var pos = txt.offset();$/;"	r
positionAndShowBox	editor/simpleColorPicker/jquery.simple-color-picker.js	/^        var positionAndShowBox = function(box) {$/;"	r
prefix	editor/simpleColorPicker/jquery.simple-color-picker.js	/^        var prefix = txt.attr('id').replace(\/-\/g, '') + '_';$/;"	r
selected_color	editor/simpleColorPicker/jquery.simple-color-picker.js	/^            var selected_color = opts.colors[this.id.substr(this.id.indexOf('-') + 1)];$/;"	r
showBox	editor/simpleColorPicker/jquery.simple-color-picker.js	/^        function showBox(box) {$/;"	r
showEffect	editor/simpleColorPicker/jquery.simple-color-picker.js	/^        showEffect: '',$/;"	r
simpleColorPicker	editor/simpleColorPicker/jquery.simple-color-picker.js	/^$.fn.simpleColorPicker = function(options) {$/;"	r
top	editor/simpleColorPicker/jquery.simple-color-picker.js	/^          box.css({ left: left, top: (pos.top + txt.outerHeight()) });$/;"	r
txt	editor/simpleColorPicker/jquery.simple-color-picker.js	/^        var txt = $(this);$/;"	r
submitJSON	editor/submit.js	/^function submitJSON(){$/;"	r
0	editor/util_draw.js	/^	var lineX = getLine(orig, new THREE.Vector3(lineLength, 0, 0), 0xff0000);$/;"	r
0	editor/util_draw.js	/^	var lineZ = getLine(orig, new THREE.Vector3(0, 0, lineLength), 0x0000ff);$/;"	r
0	editor/util_draw.js	/^	var orig = new THREE.Vector3(0, 0, 0);$/;"	r
ambient	editor/util_draw.js	/^	mat.ambient = mat.color;$/;"	r
ambient	editor/util_draw.js	/^	var mat = new THREE.MeshLambertMaterial( { color: color, ambient: 0x00ff80, $/;"	r
changeColorOfCube	editor/util_draw.js	/^function changeColorOfCube(color_0x){$/;"	r
getAxis	editor/util_draw.js	/^function getAxis(){$/;"	r
getCubeMaterial	editor/util_draw.js	/^function getCubeMaterial(color){$/;"	r
lineLength	editor/util_draw.js	/^	var lineLength = 500;$/;"	r
lineLength	editor/util_draw.js	/^	var lineY = getLine(orig, new THREE.Vector3(0, lineLength, 0), 0x00ff00);$/;"	r
lineX	editor/util_draw.js	/^	var lineX = getLine(orig, new THREE.Vector3(lineLength, 0, 0), 0xff0000);$/;"	r
lineY	editor/util_draw.js	/^	var lineY = getLine(orig, new THREE.Vector3(0, lineLength, 0), 0x00ff00);$/;"	r
lineZ	editor/util_draw.js	/^	var lineZ = getLine(orig, new THREE.Vector3(0, 0, lineLength), 0x0000ff);$/;"	r
mat	editor/util_draw.js	/^	var mat = new THREE.MeshLambertMaterial( { color: color, ambient: 0x00ff80, $/;"	r
material	editor/util_draw.js	/^	var material = new THREE.MeshBasicMaterial( { color: color_0x, opacity: 0.5, transparent: true } );$/;"	r
material	editor/util_draw.js	/^    g_rollOverMesh.material = material;$/;"	r
material	editor/util_draw.js	/^    g_rollOverMeshMirror.material = material;$/;"	r
num0x_to_sharp_string	editor/util_draw.js	/^function num0x_to_sharp_string(val){$/;"	r
opacity	editor/util_draw.js	/^	var material = new THREE.MeshBasicMaterial( { color: color_0x, opacity: 0.5, transparent: true } );$/;"	r
orig	editor/util_draw.js	/^	var orig = new THREE.Vector3(0, 0, 0);$/;"	r
parent	editor/util_draw.js	/^	var parent = new THREE.Object3D();$/;"	r
shading	editor/util_draw.js	/^			shading: THREE.FlatShading, map: THREE.ImageUtils.loadTexture( "square-outline-textured.png" ) } );$/;"	r
sharpTo0x	editor/util_draw.js	/^function sharpTo0x(sharp_color){$/;"	r
str	editor/util_draw.js	/^	str = '000000' + str;$/;"	r
str	editor/util_draw.js	/^	str = str.substr(-6);$/;"	r
str	editor/util_draw.js	/^	var str = val.toString(16);$/;"	r
textGeometry	editor/util_draw.js	/^	var textGeometry = new THREE.TextGeometry ( "front", { } );$/;"	r
textMaterial	editor/util_draw.js	/^	var textMaterial = new THREE.MeshBasicMaterial({color: 0x000000});$/;"	r
textMesh	editor/util_draw.js	/^	var textMesh = new THREE.Mesh(textGeometry, textMaterial);$/;"	r
transparent	editor/util_draw.js	/^	var material = new THREE.MeshBasicMaterial( { color: color_0x, opacity: 0.5, transparent: true } );$/;"	r
x	editor/util_draw.js	/^	textMesh.rotation.x = -Math.PI\/2;$/;"	r
z	editor/util_draw.js	/^	textMesh.position.z = lineLength;$/;"	r
z	editor/util_draw.js	/^	textMesh.scale.z = 0.1;$/;"	r
degreeInRange	editor/util_math.js	/^function degreeInRange(degree){$/;"	r
theta	editor/util_math.js	/^		theta = 179;$/;"	r
theta	editor/util_math.js	/^		theta = 1;$/;"	r
thetaInRange	editor/util_math.js	/^function thetaInRange(theta){$/;"	r
multiply_string	editor/util_string.js	/^function multiply_string(str, num){$/;"	r
return_string	editor/util_string.js	/^	var return_string = '';$/;"	r
v	editor/util_string.js	/^	v = '' + v;$/;"	r
v	editor/util_string.js	/^	v = '00000000' + v;$/;"	r
zero2	editor/util_string.js	/^function zero2(s){$/;"	r
zero4	editor/util_string.js	/^function zero4(){$/;"	r
zero8	editor/util_string.js	/^function zero8(){$/;"	r
zeroPadding	editor/util_string.js	/^function zeroPadding(v, len){$/;"	r
animate	editor/webgl_interactive_voxelpainter.html	/^			function animate() {$/;"	f
getRealIntersector	editor/webgl_interactive_voxelpainter.html	/^			function getRealIntersector( intersects ) {$/;"	f
init	editor/webgl_interactive_voxelpainter.html	/^			function init() {$/;"	f
onDocumentKeyDown	editor/webgl_interactive_voxelpainter.html	/^			function onDocumentKeyDown( event ) {$/;"	f
onDocumentKeyUp	editor/webgl_interactive_voxelpainter.html	/^			function onDocumentKeyUp( event ) {$/;"	f
onDocumentMouseDown	editor/webgl_interactive_voxelpainter.html	/^			function onDocumentMouseDown( event ) {$/;"	f
onDocumentMouseMove	editor/webgl_interactive_voxelpainter.html	/^			function onDocumentMouseMove( event ) {$/;"	f
onWindowResize	editor/webgl_interactive_voxelpainter.html	/^			function onWindowResize() {$/;"	f
render	editor/webgl_interactive_voxelpainter.html	/^			function render() {$/;"	f
setVoxelPosition	editor/webgl_interactive_voxelpainter.html	/^			function setVoxelPosition( intersector ) {$/;"	f
0	external_lib/perlin_noise/perlin-noise-classical.js	/^                                 [1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1], $/;"	r
1	external_lib/perlin_noise/perlin-noise-classical.js	/^                                 [0,1,1],[0,-1,1],[0,1,-1],[0,-1,-1]]; $/;"	r
1	external_lib/perlin_noise/perlin-noise-classical.js	/^  this.grad3 = [[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0], $/;"	r
ClassicalNoise	external_lib/perlin_noise/perlin-noise-classical.js	/^var ClassicalNoise = function(r) { \/\/ Classic Perlin noise in 3D, for comparison $/;"	r
X	external_lib/perlin_noise/perlin-noise-classical.js	/^  X = X & 255; $/;"	r
X	external_lib/perlin_noise/perlin-noise-classical.js	/^  var X = Math.floor(x); $/;"	r
Y	external_lib/perlin_noise/perlin-noise-classical.js	/^  Y = Y & 255; $/;"	r
Y	external_lib/perlin_noise/perlin-noise-classical.js	/^  var Y = Math.floor(y); $/;"	r
Z	external_lib/perlin_noise/perlin-noise-classical.js	/^  Z = Z & 255;$/;"	r
Z	external_lib/perlin_noise/perlin-noise-classical.js	/^  var Z = Math.floor(z); $/;"	r
b	external_lib/perlin_noise/perlin-noise-classical.js	/^ClassicalNoise.prototype.mix = function(a, b, t) { $/;"	r
dot	external_lib/perlin_noise/perlin-noise-classical.js	/^ClassicalNoise.prototype.dot = function(g, x, y, z) { $/;"	r
fade	external_lib/perlin_noise/perlin-noise-classical.js	/^ClassicalNoise.prototype.fade = function(t) { $/;"	r
gi000	external_lib/perlin_noise/perlin-noise-classical.js	/^  var gi000 = this.perm[X+this.perm[Y+this.perm[Z]]] % 12; $/;"	r
gi001	external_lib/perlin_noise/perlin-noise-classical.js	/^  var gi001 = this.perm[X+this.perm[Y+this.perm[Z+1]]] % 12; $/;"	r
gi010	external_lib/perlin_noise/perlin-noise-classical.js	/^  var gi010 = this.perm[X+this.perm[Y+1+this.perm[Z]]] % 12; $/;"	r
gi011	external_lib/perlin_noise/perlin-noise-classical.js	/^  var gi011 = this.perm[X+this.perm[Y+1+this.perm[Z+1]]] % 12; $/;"	r
gi100	external_lib/perlin_noise/perlin-noise-classical.js	/^  var gi100 = this.perm[X+1+this.perm[Y+this.perm[Z]]] % 12; $/;"	r
gi101	external_lib/perlin_noise/perlin-noise-classical.js	/^  var gi101 = this.perm[X+1+this.perm[Y+this.perm[Z+1]]] % 12; $/;"	r
gi110	external_lib/perlin_noise/perlin-noise-classical.js	/^  var gi110 = this.perm[X+1+this.perm[Y+1+this.perm[Z]]] % 12; $/;"	r
gi111	external_lib/perlin_noise/perlin-noise-classical.js	/^  var gi111 = this.perm[X+1+this.perm[Y+1+this.perm[Z+1]]] % 12; $/;"	r
grad3	external_lib/perlin_noise/perlin-noise-classical.js	/^  this.grad3 = [[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0], $/;"	r
mix	external_lib/perlin_noise/perlin-noise-classical.js	/^ClassicalNoise.prototype.mix = function(a, b, t) { $/;"	r
n000	external_lib/perlin_noise/perlin-noise-classical.js	/^  var n000= this.dot(this.grad3[gi000], x, y, z); $/;"	r
n001	external_lib/perlin_noise/perlin-noise-classical.js	/^  var n001= this.dot(this.grad3[gi001], x, y, z-1); $/;"	r
n010	external_lib/perlin_noise/perlin-noise-classical.js	/^  var n010= this.dot(this.grad3[gi010], x, y-1, z); $/;"	r
n011	external_lib/perlin_noise/perlin-noise-classical.js	/^  var n011= this.dot(this.grad3[gi011], x, y-1, z-1); $/;"	r
n100	external_lib/perlin_noise/perlin-noise-classical.js	/^  var n100= this.dot(this.grad3[gi100], x-1, y, z); $/;"	r
n100	external_lib/perlin_noise/perlin-noise-classical.js	/^  var nx00 = this.mix(n000, n100, u); $/;"	r
n101	external_lib/perlin_noise/perlin-noise-classical.js	/^  var n101= this.dot(this.grad3[gi101], x-1, y, z-1); $/;"	r
n101	external_lib/perlin_noise/perlin-noise-classical.js	/^  var nx01 = this.mix(n001, n101, u); $/;"	r
n110	external_lib/perlin_noise/perlin-noise-classical.js	/^  var n110= this.dot(this.grad3[gi110], x-1, y-1, z); $/;"	r
n110	external_lib/perlin_noise/perlin-noise-classical.js	/^  var nx10 = this.mix(n010, n110, u); $/;"	r
n111	external_lib/perlin_noise/perlin-noise-classical.js	/^  var n111= this.dot(this.grad3[gi111], x-1, y-1, z-1); $/;"	r
n111	external_lib/perlin_noise/perlin-noise-classical.js	/^  var nx11 = this.mix(n011, n111, u); $/;"	r
noise	external_lib/perlin_noise/perlin-noise-classical.js	/^ClassicalNoise.prototype.noise = function(x, y, z) { $/;"	r
nx00	external_lib/perlin_noise/perlin-noise-classical.js	/^  var nx00 = this.mix(n000, n100, u); $/;"	r
nx01	external_lib/perlin_noise/perlin-noise-classical.js	/^  var nx01 = this.mix(n001, n101, u); $/;"	r
nx10	external_lib/perlin_noise/perlin-noise-classical.js	/^  var nx10 = this.mix(n010, n110, u); $/;"	r
nx10	external_lib/perlin_noise/perlin-noise-classical.js	/^  var nxy0 = this.mix(nx00, nx10, v); $/;"	r
nx11	external_lib/perlin_noise/perlin-noise-classical.js	/^  var nx11 = this.mix(n011, n111, u); $/;"	r
nx11	external_lib/perlin_noise/perlin-noise-classical.js	/^  var nxy1 = this.mix(nx01, nx11, v); $/;"	r
nxy0	external_lib/perlin_noise/perlin-noise-classical.js	/^  var nxy0 = this.mix(nx00, nx10, v); $/;"	r
nxy1	external_lib/perlin_noise/perlin-noise-classical.js	/^  var nxy1 = this.mix(nx01, nx11, v); $/;"	r
nxy1	external_lib/perlin_noise/perlin-noise-classical.js	/^  var nxyz = this.mix(nxy0, nxy1, w); $/;"	r
nxyz	external_lib/perlin_noise/perlin-noise-classical.js	/^  var nxyz = this.mix(nxy0, nxy1, w); $/;"	r
p	external_lib/perlin_noise/perlin-noise-classical.js	/^  this.p = [];$/;"	r
perm	external_lib/perlin_noise/perlin-noise-classical.js	/^  this.perm = []; $/;"	r
u	external_lib/perlin_noise/perlin-noise-classical.js	/^  var u = this.fade(x); $/;"	r
v	external_lib/perlin_noise/perlin-noise-classical.js	/^  var v = this.fade(y); $/;"	r
w	external_lib/perlin_noise/perlin-noise-classical.js	/^  var w = this.fade(z); $/;"	r
x	external_lib/perlin_noise/perlin-noise-classical.js	/^  var n000= this.dot(this.grad3[gi000], x, y, z); $/;"	r
x	external_lib/perlin_noise/perlin-noise-classical.js	/^  var n001= this.dot(this.grad3[gi001], x, y, z-1); $/;"	r
x	external_lib/perlin_noise/perlin-noise-classical.js	/^  var n010= this.dot(this.grad3[gi010], x, y-1, z); $/;"	r
x	external_lib/perlin_noise/perlin-noise-classical.js	/^  var n011= this.dot(this.grad3[gi011], x, y-1, z-1); $/;"	r
x	external_lib/perlin_noise/perlin-noise-classical.js	/^  x = x - X; $/;"	r
x	external_lib/perlin_noise/perlin-noise-classical.js	/^ClassicalNoise.prototype.dot = function(g, x, y, z) { $/;"	r
y	external_lib/perlin_noise/perlin-noise-classical.js	/^  var n100= this.dot(this.grad3[gi100], x-1, y, z); $/;"	r
y	external_lib/perlin_noise/perlin-noise-classical.js	/^  var n101= this.dot(this.grad3[gi101], x-1, y, z-1); $/;"	r
y	external_lib/perlin_noise/perlin-noise-classical.js	/^  y = y - Y; $/;"	r
y	external_lib/perlin_noise/perlin-noise-classical.js	/^ClassicalNoise.prototype.noise = function(x, y, z) { $/;"	r
z	external_lib/perlin_noise/perlin-noise-classical.js	/^  \/\/ Compute the fade curve value for each of x, y, z $/;"	r
z	external_lib/perlin_noise/perlin-noise-classical.js	/^  z = z - Z; $/;"	r
0	external_lib/perlin_noise/perlin-noise-simplex.js	/^                                 [1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1], $/;"	r
0	external_lib/perlin_noise/perlin-noise-simplex.js	/^    [0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0], $/;"	r
0	external_lib/perlin_noise/perlin-noise-simplex.js	/^    [1,0,2,3],[1,0,3,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,3,1],[0,0,0,0],[2,1,3,0], $/;"	r
0	external_lib/perlin_noise/perlin-noise-simplex.js	/^    [2,0,1,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,0,1,2],[3,0,2,1],[0,0,0,0],[3,1,2,0], $/;"	r
0	external_lib/perlin_noise/perlin-noise-simplex.js	/^  \/\/ A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z), $/;"	r
0	external_lib/perlin_noise/perlin-noise-simplex.js	/^  \/\/ a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where $/;"	r
1	external_lib/perlin_noise/perlin-noise-simplex.js	/^                                 [0,1,1],[0,-1,1],[0,1,-1],[0,-1,-1]]; $/;"	r
1	external_lib/perlin_noise/perlin-noise-simplex.js	/^    [0,1,2,3],[0,1,3,2],[0,0,0,0],[0,2,3,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,3,0], $/;"	r
1	external_lib/perlin_noise/perlin-noise-simplex.js	/^    [2,1,0,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,1,0,2],[0,0,0,0],[3,2,0,1],[3,2,1,0]]; $/;"	r
1	external_lib/perlin_noise/perlin-noise-simplex.js	/^  \/\/ a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and $/;"	r
1	external_lib/perlin_noise/perlin-noise-simplex.js	/^  this.grad3 = [[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0], $/;"	r
2	external_lib/perlin_noise/perlin-noise-simplex.js	/^    [0,2,1,3],[0,0,0,0],[0,3,1,2],[0,3,2,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,3,2,0], $/;"	r
2	external_lib/perlin_noise/perlin-noise-simplex.js	/^    [1,2,0,3],[0,0,0,0],[1,3,0,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,3,0,1],[2,3,1,0], $/;"	r
F2	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var F2 = 0.5*(Math.sqrt(3.0)-1.0); $/;"	r
F3	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var F3 = 1.0\/3.0; $/;"	r
G2	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var G2 = (3.0-Math.sqrt(3.0))\/6.0; $/;"	r
G3	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var G3 = 1.0\/6.0; \/\/ Very nice and simple unskew factor, too $/;"	r
SimplexNoise	external_lib/perlin_noise/perlin-noise-simplex.js	/^var SimplexNoise = function(r) {$/;"	r
X0	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var X0 = i-t; \/\/ Unskew the cell origin back to (x,y) space $/;"	r
X0	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var X0 = i-t; \/\/ Unskew the cell origin back to (x,y,z) space $/;"	r
Y0	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var Y0 = j-t; $/;"	r
Z0	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var Z0 = k-t; $/;"	r
and	external_lib/perlin_noise/perlin-noise-simplex.js	/^  \/\/ A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and $/;"	r
dot	external_lib/perlin_noise/perlin-noise-simplex.js	/^SimplexNoise.prototype.dot = function(g, x, y) { $/;"	r
gi0	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var gi0 = this.perm[ii+this.perm[jj+this.perm[kk]]] % 12; $/;"	r
gi0	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var gi0 = this.perm[ii+this.perm[jj]] % 12; $/;"	r
gi1	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var gi1 = this.perm[ii+i1+this.perm[jj+j1+this.perm[kk+k1]]] % 12; $/;"	r
gi1	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var gi1 = this.perm[ii+i1+this.perm[jj+j1]] % 12; $/;"	r
gi2	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var gi2 = this.perm[ii+1+this.perm[jj+1]] % 12; $/;"	r
gi2	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var gi2 = this.perm[ii+i2+this.perm[jj+j2+this.perm[kk+k2]]] % 12; $/;"	r
gi3	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var gi3 = this.perm[ii+1+this.perm[jj+1+this.perm[kk+1]]] % 12; $/;"	r
grad3	external_lib/perlin_noise/perlin-noise-simplex.js	/^  this.grad3 = [[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0], $/;"	r
i	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var i = Math.floor(xin+s); $/;"	r
i1	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var i1, j1, k1; \/\/ Offsets for second corner of simplex in (i,j,k) coords $/;"	r
i1	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var i1, j1; \/\/ Offsets for second (middle) corner of simplex in (i,j) coords $/;"	r
i2	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var i2, j2, k2; \/\/ Offsets for third corner of simplex in (i,j,k) coords $/;"	r
ii	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var ii = i & 255; $/;"	r
j	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var j = Math.floor(yin+s); $/;"	r
j1	external_lib/perlin_noise/perlin-noise-simplex.js	/^      else if(x0>=z0) { i1=1; j1=0; k1=0; i2=1; j2=0; k2=1; } \/\/ X Z Y order $/;"	r
j1	external_lib/perlin_noise/perlin-noise-simplex.js	/^      else { i1=0; j1=0; k1=1; i2=1; j2=0; k2=1; } \/\/ Z X Y order $/;"	r
j1	external_lib/perlin_noise/perlin-noise-simplex.js	/^      { i1=1; j1=0; k1=0; i2=1; j2=1; k2=0; } \/\/ X Y Z order $/;"	r
j1	external_lib/perlin_noise/perlin-noise-simplex.js	/^    else if(x0<z0) { i1=0; j1=1; k1=0; i2=0; j2=1; k2=1; } \/\/ Y Z X order $/;"	r
j1	external_lib/perlin_noise/perlin-noise-simplex.js	/^    else { i1=0; j1=1; k1=0; i2=1; j2=1; k2=0; } \/\/ Y X Z order $/;"	r
j1	external_lib/perlin_noise/perlin-noise-simplex.js	/^    if(y0<z0) { i1=0; j1=0; k1=1; i2=0; j2=1; k2=1; } \/\/ Z Y X order $/;"	r
j1	external_lib/perlin_noise/perlin-noise-simplex.js	/^  else {i1=0; j1=1;}      \/\/ upper triangle, YX order: (0,0)->(0,1)->(1,1) $/;"	r
j1	external_lib/perlin_noise/perlin-noise-simplex.js	/^  if(x0>y0) {i1=1; j1=0;} \/\/ lower triangle, XY order: (0,0)->(1,0)->(1,1) $/;"	r
jj	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var jj = j & 255; $/;"	r
k	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var k = Math.floor(zin+s); $/;"	r
kk	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var kk = k & 255; $/;"	r
n0	external_lib/perlin_noise/perlin-noise-simplex.js	/^    n0 = t0 * t0 * this.dot(this.grad3[gi0], x0, y0);  \/\/ (x,y) of grad3 used for 2D gradient $/;"	r
n0	external_lib/perlin_noise/perlin-noise-simplex.js	/^    n0 = t0 * t0 * this.dot(this.grad3[gi0], x0, y0, z0); $/;"	r
n0	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var n0, n1, n2, n3; \/\/ Noise contributions from the four corners $/;"	r
n0	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var n0, n1, n2; \/\/ Noise contributions from the three corners $/;"	r
n1	external_lib/perlin_noise/perlin-noise-simplex.js	/^    n1 = t1 * t1 * this.dot(this.grad3[gi1], x1, y1); $/;"	r
n1	external_lib/perlin_noise/perlin-noise-simplex.js	/^    n1 = t1 * t1 * this.dot(this.grad3[gi1], x1, y1, z1); $/;"	r
n2	external_lib/perlin_noise/perlin-noise-simplex.js	/^    n2 = t2 * t2 * this.dot(this.grad3[gi2], x2, y2); $/;"	r
n2	external_lib/perlin_noise/perlin-noise-simplex.js	/^    n2 = t2 * t2 * this.dot(this.grad3[gi2], x2, y2, z2); $/;"	r
n3	external_lib/perlin_noise/perlin-noise-simplex.js	/^    n3 = t3 * t3 * this.dot(this.grad3[gi3], x3, y3, z3); $/;"	r
noise	external_lib/perlin_noise/perlin-noise-simplex.js	/^SimplexNoise.prototype.noise = function(xin, yin) { $/;"	r
noise3d	external_lib/perlin_noise/perlin-noise-simplex.js	/^SimplexNoise.prototype.noise3d = function(xin, yin, zin) { $/;"	r
p	external_lib/perlin_noise/perlin-noise-simplex.js	/^  this.p = [];$/;"	r
perm	external_lib/perlin_noise/perlin-noise-simplex.js	/^  this.perm = []; $/;"	r
s	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var s = (xin+yin)*F2; \/\/ Hairy factor for 2D $/;"	r
s	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var s = (xin+yin+zin)*F3; \/\/ Very nice and simple skew factor for 3D $/;"	r
simplex	external_lib/perlin_noise/perlin-noise-simplex.js	/^  this.simplex = [ $/;"	r
t	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var t = (i+j)*G2; $/;"	r
t	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var t = (i+j+k)*G3; $/;"	r
t0	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var t0 = 0.5 - x0*x0-y0*y0; $/;"	r
t0	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var t0 = 0.6 - x0*x0 - y0*y0 - z0*z0; $/;"	r
t1	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var t1 = 0.5 - x1*x1-y1*y1; $/;"	r
t1	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var t1 = 0.6 - x1*x1 - y1*y1 - z1*z1; $/;"	r
t2	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var t2 = 0.5 - x2*x2-y2*y2; $/;"	r
t2	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var t2 = 0.6 - x2*x2 - y2*y2 - z2*z2; $/;"	r
t3	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var t3 = 0.6 - x3*x3 - y3*y3 - z3*z3; $/;"	r
too	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var G3 = 1.0\/6.0; \/\/ Very nice and simple unskew factor, too $/;"	r
where	external_lib/perlin_noise/perlin-noise-simplex.js	/^  \/\/ a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where $/;"	r
x	external_lib/perlin_noise/perlin-noise-simplex.js	/^SimplexNoise.prototype.dot = function(g, x, y) { $/;"	r
x0	external_lib/perlin_noise/perlin-noise-simplex.js	/^    n0 = t0 * t0 * this.dot(this.grad3[gi0], x0, y0);  \/\/ (x,y) of grad3 used for 2D gradient $/;"	r
x0	external_lib/perlin_noise/perlin-noise-simplex.js	/^    n0 = t0 * t0 * this.dot(this.grad3[gi0], x0, y0, z0); $/;"	r
x0	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var x0 = xin-X0; \/\/ The x,y distances from the cell origin $/;"	r
x0	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var x0 = xin-X0; \/\/ The x,y,z distances from the cell origin $/;"	r
x1	external_lib/perlin_noise/perlin-noise-simplex.js	/^    n1 = t1 * t1 * this.dot(this.grad3[gi1], x1, y1); $/;"	r
x1	external_lib/perlin_noise/perlin-noise-simplex.js	/^    n1 = t1 * t1 * this.dot(this.grad3[gi1], x1, y1, z1); $/;"	r
x1	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var x1 = x0 - i1 + G2; \/\/ Offsets for middle corner in (x,y) unskewed coords $/;"	r
x1	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var x1 = x0 - i1 + G3; \/\/ Offsets for second corner in (x,y,z) coords $/;"	r
x2	external_lib/perlin_noise/perlin-noise-simplex.js	/^    n2 = t2 * t2 * this.dot(this.grad3[gi2], x2, y2); $/;"	r
x2	external_lib/perlin_noise/perlin-noise-simplex.js	/^    n2 = t2 * t2 * this.dot(this.grad3[gi2], x2, y2, z2); $/;"	r
x2	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var x2 = x0 - 1.0 + 2.0 * G2; \/\/ Offsets for last corner in (x,y) unskewed coords $/;"	r
x2	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var x2 = x0 - i2 + 2.0*G3; \/\/ Offsets for third corner in (x,y,z) coords $/;"	r
x3	external_lib/perlin_noise/perlin-noise-simplex.js	/^    n3 = t3 * t3 * this.dot(this.grad3[gi3], x3, y3, z3); $/;"	r
x3	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var x3 = x0 - 1.0 + 3.0*G3; \/\/ Offsets for last corner in (x,y,z) coords $/;"	r
y	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var X0 = i-t; \/\/ Unskew the cell origin back to (x,y,z) space $/;"	r
y	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var x0 = xin-X0; \/\/ The x,y,z distances from the cell origin $/;"	r
y	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var x1 = x0 - i1 + G3; \/\/ Offsets for second corner in (x,y,z) coords $/;"	r
y	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var x2 = x0 - i2 + 2.0*G3; \/\/ Offsets for third corner in (x,y,z) coords $/;"	r
y	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var x3 = x0 - 1.0 + 3.0*G3; \/\/ Offsets for last corner in (x,y,z) coords $/;"	r
y0	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var y0 = yin-Y0; $/;"	r
y1	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var y1 = y0 - j1 + G2; $/;"	r
y1	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var y1 = y0 - j1 + G3; $/;"	r
y2	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var y2 = y0 - 1.0 + 2.0 * G2; $/;"	r
y2	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var y2 = y0 - j2 + 2.0*G3; $/;"	r
y3	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var y3 = y0 - 1.0 + 3.0*G3; $/;"	r
yin	external_lib/perlin_noise/perlin-noise-simplex.js	/^SimplexNoise.prototype.noise3d = function(xin, yin, zin) { $/;"	r
z0	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var z0 = zin-Z0; $/;"	r
z1	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var z1 = z0 - k1 + G3; $/;"	r
z2	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var z2 = z0 - k2 + 2.0*G3; $/;"	r
z3	external_lib/perlin_noise/perlin-noise-simplex.js	/^  var z3 = z0 - 1.0 + 3.0*G3; $/;"	r
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
Detector	js/Detector.js	/^var Detector = {$/;"	r
addGetWebGLMessage	js/Detector.js	/^	addGetWebGLMessage: function ( parameters ) {$/;"	r
background	js/Detector.js	/^		element.style.background = '#fff';$/;"	r
canvas	js/Detector.js	/^	canvas: !! window.CanvasRenderingContext2D,$/;"	r
color	js/Detector.js	/^		element.style.color = '#000';$/;"	r
element	js/Detector.js	/^		element = Detector.getWebGLErrorMessage();$/;"	r
element	js/Detector.js	/^		var element = document.createElement( 'div' );$/;"	r
fileapi	js/Detector.js	/^	fileapi: window.File && window.FileReader && window.FileList && window.Blob,$/;"	r
fontFamily	js/Detector.js	/^		element.style.fontFamily = 'monospace';$/;"	r
fontSize	js/Detector.js	/^		element.style.fontSize = '13px';$/;"	r
fontWeight	js/Detector.js	/^		element.style.fontWeight = 'normal';$/;"	r
getWebGLErrorMessage	js/Detector.js	/^	getWebGLErrorMessage: function () {$/;"	r
id	js/Detector.js	/^		element.id = 'webgl-error-message';$/;"	r
id	js/Detector.js	/^		element.id = id;$/;"	r
id	js/Detector.js	/^		id = parameters.id !== undefined ? parameters.id : 'oldie';$/;"	r
innerHTML	js/Detector.js	/^			element.innerHTML = window.WebGLRenderingContext ? [$/;"	r
margin	js/Detector.js	/^		element.style.margin = '5em auto 0';$/;"	r
padding	js/Detector.js	/^		element.style.padding = '1.5em';$/;"	r
parameters	js/Detector.js	/^		parameters = parameters || {};$/;"	r
parent	js/Detector.js	/^		parent = parameters.parent !== undefined ? parameters.parent : document.body;$/;"	r
parent	js/Detector.js	/^		var parent, id, element;$/;"	r
textAlign	js/Detector.js	/^		element.style.textAlign = 'center';$/;"	r
webgl	js/Detector.js	/^	webgl: ( function () { try { return !! window.WebGLRenderingContext && !! document.createElement( 'canvas' ).getContext( 'experimental-webgl' ); } catch( e ) { return false; } } )(),$/;"	r
width	js/Detector.js	/^		element.style.width = '400px';$/;"	r
workers	js/Detector.js	/^	workers: !! window.Worker,$/;"	r
CUBE_WIDTH	js/const.js	/^var CUBE_WIDTH = 50;$/;"	r
KEY_DOWN	js/const.js	/^var KEY_DOWN  = 40;$/;"	r
KEY_LEFT	js/const.js	/^var KEY_LEFT  = 37;$/;"	r
KEY_RIGHT	js/const.js	/^var KEY_RIGHT = 39;$/;"	r
KEY_T	js/const.js	/^var KEY_T = 84;/;"	r
KEY_UP	js/const.js	/^var KEY_UP    = 38;$/;"	r
MOUSE_CENTER	js/const.js	/^var MOUSE_CENTER = 2;$/;"	r
MOUSE_LEFT	js/const.js	/^var MOUSE_LEFT = 1;$/;"	r
MOUSE_RIGHT	js/const.js	/^var MOUSE_RIGHT = 3;$/;"	r
copy	js/font/helvetiker_regular.typeface.js	/^if (_typeface_js && _typeface_js.loadFace) _typeface_js.loadFace({"glyphs":{"ο":{"x_min":0,"x_max":712,"ha":815,"o":"m 356 -25 q 96 88 192 -25 q 0 368 0 201 q 92 642 0 533 q 356 761 192 761 q 617 644 517 761 q 712 368 712 533 q 619 91 712 201 q 356 -25 520 -25 m 356 85 q 527 175 465 85 q 583 369 583 255 q 528 562 583 484 q 356 651 466 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 356 85 250 85 "},"S":{"x_min":0,"x_max":788,"ha":890,"o":"m 788 291 q 662 54 788 144 q 397 -26 550 -26 q 116 68 226 -26 q 0 337 0 168 l 131 337 q 200 152 131 220 q 384 85 269 85 q 557 129 479 85 q 650 270 650 183 q 490 429 650 379 q 194 513 341 470 q 33 739 33 584 q 142 964 33 881 q 388 1041 242 1041 q 644 957 543 1041 q 756 716 756 867 l 625 716 q 561 874 625 816 q 395 933 497 933 q 243 891 309 933 q 164 759 164 841 q 325 609 164 656 q 625 526 475 568 q 788 291 788 454 "},"¦":{"x_min":343,"x_max":449,"ha":792,"o":"m 449 462 l 343 462 l 343 986 l 449 986 l 449 462 m 449 -242 l 343 -242 l 343 280 l 449 280 l 449 -242 "},"\/":{"x_min":183.25,"x_max":608.328125,"ha":792,"o":"m 608 1041 l 266 -129 l 183 -129 l 520 1041 l 608 1041 "},"Τ":{"x_min":-0.4375,"x_max":777.453125,"ha":839,"o":"m 777 893 l 458 893 l 458 0 l 319 0 l 319 892 l 0 892 l 0 1013 l 777 1013 l 777 893 "},"y":{"x_min":0,"x_max":684.78125,"ha":771,"o":"m 684 738 l 388 -83 q 311 -216 356 -167 q 173 -279 252 -279 q 97 -266 133 -279 l 97 -149 q 132 -155 109 -151 q 168 -160 155 -160 q 240 -114 213 -160 q 274 -26 248 -98 l 0 738 l 137 737 l 341 139 l 548 737 l 684 738 "},"Π":{"x_min":0,"x_max":803,"ha":917,"o":"m 803 0 l 667 0 l 667 886 l 140 886 l 140 0 l 0 0 l 0 1012 l 803 1012 l 803 0 "},"ΐ":{"x_min":-111,"x_max":339,"ha":361,"o":"m 339 800 l 229 800 l 229 925 l 339 925 l 339 800 m -1 800 l -111 800 l -111 925 l -1 925 l -1 800 m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 737 l 167 737 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 103 239 101 q 284 112 257 104 l 284 3 m 302 1040 l 113 819 l 30 819 l 165 1040 l 302 1040 "},"g":{"x_min":0,"x_max":686,"ha":838,"o":"m 686 34 q 586 -213 686 -121 q 331 -306 487 -306 q 131 -252 216 -306 q 31 -84 31 -190 l 155 -84 q 228 -174 166 -138 q 345 -207 284 -207 q 514 -109 454 -207 q 564 89 564 -27 q 461 6 521 36 q 335 -23 401 -23 q 88 100 184 -23 q 0 370 0 215 q 87 634 0 522 q 330 758 183 758 q 457 728 398 758 q 564 644 515 699 l 564 737 l 686 737 l 686 34 m 582 367 q 529 560 582 481 q 358 652 468 652 q 189 561 250 652 q 135 369 135 482 q 189 176 135 255 q 361 85 251 85 q 529 176 468 85 q 582 367 582 255 "},"²":{"x_min":0,"x_max":442,"ha":539,"o":"m 442 383 l 0 383 q 91 566 0 492 q 260 668 176 617 q 354 798 354 727 q 315 875 354 845 q 227 905 277 905 q 136 869 173 905 q 99 761 99 833 l 14 761 q 82 922 14 864 q 232 974 141 974 q 379 926 316 974 q 442 797 442 878 q 351 635 442 704 q 183 539 321 611 q 92 455 92 491 l 442 455 l 442 383 "},"–":{"x_min":0,"x_max":705.5625,"ha":803,"o":"m 705 334 l 0 334 l 0 410 l 705 410 l 705 334 "},"Κ":{"x_min":0,"x_max":819.5625,"ha":893,"o":"m 819 0 l 650 0 l 294 509 l 139 356 l 139 0 l 0 0 l 0 1013 l 139 1013 l 139 526 l 626 1013 l 809 1013 l 395 600 l 819 0 "},"ƒ":{"x_min":-46.265625,"x_max":392,"ha":513,"o":"m 392 651 l 259 651 l 79 -279 l -46 -278 l 134 651 l 14 651 l 14 751 l 135 751 q 151 948 135 900 q 304 1041 185 1041 q 334 1040 319 1041 q 392 1034 348 1039 l 392 922 q 337 931 360 931 q 271 883 287 931 q 260 793 260 853 l 260 751 l 392 751 l 392 651 "},"e":{"x_min":0,"x_max":714,"ha":813,"o":"m 714 326 l 140 326 q 200 157 140 227 q 359 87 260 87 q 488 130 431 87 q 561 245 545 174 l 697 245 q 577 48 670 123 q 358 -26 484 -26 q 97 85 195 -26 q 0 363 0 197 q 94 642 0 529 q 358 765 195 765 q 626 627 529 765 q 714 326 714 503 m 576 429 q 507 583 564 522 q 355 650 445 650 q 206 583 266 650 q 140 429 152 522 l 576 429 "},"ό":{"x_min":0,"x_max":712,"ha":815,"o":"m 356 -25 q 94 91 194 -25 q 0 368 0 202 q 92 642 0 533 q 356 761 192 761 q 617 644 517 761 q 712 368 712 533 q 619 91 712 201 q 356 -25 520 -25 m 356 85 q 527 175 465 85 q 583 369 583 255 q 528 562 583 484 q 356 651 466 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 356 85 250 85 m 576 1040 l 387 819 l 303 819 l 438 1040 l 576 1040 "},"J":{"x_min":0,"x_max":588,"ha":699,"o":"m 588 279 q 287 -26 588 -26 q 58 73 126 -26 q 0 327 0 158 l 133 327 q 160 172 133 227 q 288 96 198 96 q 426 171 391 96 q 449 336 449 219 l 449 1013 l 588 1013 l 588 279 "},"»":{"x_min":-1,"x_max":503,"ha":601,"o":"m 503 302 l 280 136 l 281 256 l 429 373 l 281 486 l 280 608 l 503 440 l 503 302 m 221 302 l 0 136 l 0 255 l 145 372 l 0 486 l -1 608 l 221 440 l 221 302 "},"©":{"x_min":-3,"x_max":1008,"ha":1106,"o":"m 502 -7 q 123 151 263 -7 q -3 501 -3 294 q 123 851 -3 706 q 502 1011 263 1011 q 881 851 739 1011 q 1008 501 1008 708 q 883 151 1008 292 q 502 -7 744 -7 m 502 60 q 830 197 709 60 q 940 501 940 322 q 831 805 940 681 q 502 944 709 944 q 174 805 296 944 q 65 501 65 680 q 173 197 65 320 q 502 60 294 60 m 741 394 q 661 246 731 302 q 496 190 591 190 q 294 285 369 190 q 228 497 228 370 q 295 714 228 625 q 499 813 370 813 q 656 762 588 813 q 733 625 724 711 l 634 625 q 589 704 629 673 q 498 735 550 735 q 377 666 421 735 q 334 504 334 597 q 374 340 334 408 q 490 272 415 272 q 589 304 549 272 q 638 394 628 337 l 741 394 "},"ώ":{"x_min":0,"x_max":922,"ha":1030,"o":"m 687 1040 l 498 819 l 415 819 l 549 1040 l 687 1040 m 922 339 q 856 97 922 203 q 650 -26 780 -26 q 538 9 587 -26 q 461 103 489 44 q 387 12 436 46 q 277 -22 339 -22 q 69 97 147 -22 q 0 338 0 202 q 45 551 0 444 q 161 737 84 643 l 302 737 q 175 552 219 647 q 124 336 124 446 q 155 179 124 248 q 275 88 197 88 q 375 163 341 88 q 400 294 400 219 l 400 572 l 524 572 l 524 294 q 561 135 524 192 q 643 88 591 88 q 762 182 719 88 q 797 341 797 257 q 745 555 797 450 q 619 737 705 637 l 760 737 q 874 551 835 640 q 922 339 922 444 "},"^":{"x_min":193.0625,"x_max":598.609375,"ha":792,"o":"m 598 772 l 515 772 l 395 931 l 277 772 l 193 772 l 326 1013 l 462 1013 l 598 772 "},"«":{"x_min":0,"x_max":507.203125,"ha":604,"o":"m 506 136 l 284 302 l 284 440 l 506 608 l 507 485 l 360 371 l 506 255 l 506 136 m 222 136 l 0 302 l 0 440 l 222 608 l 221 486 l 73 373 l 222 256 l 222 136 "},"D":{"x_min":0,"x_max":828,"ha":935,"o":"m 389 1013 q 714 867 593 1013 q 828 521 828 729 q 712 161 828 309 q 382 0 587 0 l 0 0 l 0 1013 l 389 1013 m 376 124 q 607 247 523 124 q 681 510 681 355 q 607 771 681 662 q 376 896 522 896 l 139 896 l 139 124 l 376 124 "},"∙":{"x_min":0,"x_max":142,"ha":239,"o":"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 "},"ÿ":{"x_min":0,"x_max":47,"ha":125,"o":"m 47 3 q 37 -7 47 -7 q 28 0 30 -7 q 39 -4 32 -4 q 45 3 45 -1 l 37 0 q 28 9 28 0 q 39 19 28 19 l 47 16 l 47 19 l 47 3 m 37 1 q 44 8 44 1 q 37 16 44 16 q 30 8 30 16 q 37 1 30 1 m 26 1 l 23 22 l 14 0 l 3 22 l 3 3 l 0 25 l 13 1 l 22 25 l 26 1 "},"w":{"x_min":0,"x_max":1009.71875,"ha":1100,"o":"m 1009 738 l 783 0 l 658 0 l 501 567 l 345 0 l 222 0 l 0 738 l 130 738 l 284 174 l 432 737 l 576 738 l 721 173 l 881 737 l 1009 738 "},"$":{"x_min":0,"x_max":700,"ha":793,"o":"m 664 717 l 542 717 q 490 825 531 785 q 381 872 450 865 l 381 551 q 620 446 540 522 q 700 241 700 370 q 618 45 700 116 q 381 -25 536 -25 l 381 -152 l 307 -152 l 307 -25 q 81 62 162 -25 q 0 297 0 149 l 124 297 q 169 146 124 204 q 307 81 215 89 l 307 441 q 80 536 148 469 q 13 725 13 603 q 96 910 13 839 q 307 982 180 982 l 307 1077 l 381 1077 l 381 982 q 574 917 494 982 q 664 717 664 845 m 307 565 l 307 872 q 187 831 233 872 q 142 724 142 791 q 180 618 142 656 q 307 565 218 580 m 381 76 q 562 237 562 96 q 517 361 562 313 q 381 423 472 409 l 381 76 "},"\\\\":{"x_min":-0.015625,"x_max":425.0625,"ha":522,"o":"m 425 -129 l 337 -129 l 0 1041 l 83 1041 l 425 -129 "},"µ":{"x_min":0,"x_max":697.21875,"ha":747,"o":"m 697 -4 q 629 -14 658 -14 q 498 97 513 -14 q 422 9 470 41 q 313 -23 374 -23 q 207 4 258 -23 q 119 81 156 32 l 119 -278 l 0 -278 l 0 738 l 124 738 l 124 343 q 165 173 124 246 q 308 83 216 83 q 452 178 402 83 q 493 359 493 255 l 493 738 l 617 738 l 617 214 q 623 136 617 160 q 673 92 637 92 q 697 96 684 92 l 697 -4 "},"Ι":{"x_min":42,"x_max":181,"ha":297,"o":"m 181 0 l 42 0 l 42 1013 l 181 1013 l 181 0 "},"Ύ":{"x_min":0,"x_max":1144.5,"ha":1214,"o":"m 1144 1012 l 807 416 l 807 0 l 667 0 l 667 416 l 325 1012 l 465 1012 l 736 533 l 1004 1012 l 1144 1012 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 "},"’":{"x_min":0,"x_max":139,"ha":236,"o":"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 "},"Ν":{"x_min":0,"x_max":801,"ha":915,"o":"m 801 0 l 651 0 l 131 822 l 131 0 l 0 0 l 0 1013 l 151 1013 l 670 191 l 670 1013 l 801 1013 l 801 0 "},"-":{"x_min":8.71875,"x_max":350.390625,"ha":478,"o":"m 350 317 l 8 317 l 8 428 l 350 428 l 350 317 "},"Q":{"x_min":0,"x_max":968,"ha":1072,"o":"m 954 5 l 887 -79 l 744 35 q 622 -11 687 2 q 483 -26 556 -26 q 127 130 262 -26 q 0 504 0 279 q 127 880 0 728 q 484 1041 262 1041 q 841 884 708 1041 q 968 507 968 735 q 933 293 968 398 q 832 104 899 188 l 954 5 m 723 191 q 802 330 777 248 q 828 499 828 412 q 744 790 828 673 q 483 922 650 922 q 228 791 322 922 q 142 505 142 673 q 227 221 142 337 q 487 91 323 91 q 632 123 566 91 l 520 215 l 587 301 l 723 191 "},"ς":{"x_min":1,"x_max":676.28125,"ha":740,"o":"m 676 460 l 551 460 q 498 595 542 546 q 365 651 448 651 q 199 578 263 651 q 136 401 136 505 q 266 178 136 241 q 508 106 387 142 q 640 -50 640 62 q 625 -158 640 -105 q 583 -278 611 -211 l 465 -278 q 498 -182 490 -211 q 515 -80 515 -126 q 381 12 515 -15 q 134 91 197 51 q 1 388 1 179 q 100 651 1 542 q 354 761 199 761 q 587 680 498 761 q 676 460 676 599 "},"M":{"x_min":0,"x_max":954,"ha":1067,"o":"m 954 0 l 819 0 l 819 869 l 537 0 l 405 0 l 128 866 l 128 0 l 0 0 l 0 1013 l 200 1013 l 472 160 l 757 1013 l 954 1013 l 954 0 "},"Ψ":{"x_min":0,"x_max":1006,"ha":1094,"o":"m 1006 678 q 914 319 1006 429 q 571 200 814 200 l 571 0 l 433 0 l 433 200 q 92 319 194 200 q 0 678 0 429 l 0 1013 l 139 1013 l 139 679 q 191 417 139 492 q 433 326 255 326 l 433 1013 l 571 1013 l 571 326 l 580 326 q 813 423 747 326 q 868 679 868 502 l 868 1013 l 1006 1013 l 1006 678 "},"C":{"x_min":0,"x_max":886,"ha":944,"o":"m 886 379 q 760 87 886 201 q 455 -26 634 -26 q 112 136 236 -26 q 0 509 0 283 q 118 882 0 737 q 469 1041 245 1041 q 748 955 630 1041 q 879 708 879 859 l 745 708 q 649 862 724 805 q 473 920 573 920 q 219 791 312 920 q 136 509 136 675 q 217 229 136 344 q 470 99 311 99 q 672 179 591 99 q 753 379 753 259 l 886 379 "},"!":{"x_min":0,"x_max":138,"ha":236,"o":"m 138 684 q 116 409 138 629 q 105 244 105 299 l 33 244 q 16 465 33 313 q 0 684 0 616 l 0 1013 l 138 1013 l 138 684 m 138 0 l 0 0 l 0 151 l 138 151 l 138 0 "},"{":{"x_min":0,"x_max":480.5625,"ha":578,"o":"m 480 -286 q 237 -213 303 -286 q 187 -45 187 -159 q 194 48 187 -15 q 201 141 201 112 q 164 264 201 225 q 0 314 118 314 l 0 417 q 164 471 119 417 q 201 605 201 514 q 199 665 201 644 q 193 772 193 769 q 241 941 193 887 q 480 1015 308 1015 l 480 915 q 336 866 375 915 q 306 742 306 828 q 310 662 306 717 q 314 577 314 606 q 288 452 314 500 q 176 365 256 391 q 289 275 257 337 q 314 143 314 226 q 313 84 314 107 q 310 -11 310 -5 q 339 -131 310 -94 q 480 -182 377 -182 l 480 -286 "},"X":{"x_min":-0.015625,"x_max":854.15625,"ha":940,"o":"m 854 0 l 683 0 l 423 409 l 166 0 l 0 0 l 347 519 l 18 1013 l 186 1013 l 428 637 l 675 1013 l 836 1013 l 504 520 l 854 0 "},"#":{"x_min":0,"x_max":963.890625,"ha":1061,"o":"m 963 690 l 927 590 l 719 590 l 655 410 l 876 410 l 840 310 l 618 310 l 508 -3 l 393 -2 l 506 309 l 329 310 l 215 -2 l 102 -3 l 212 310 l 0 310 l 36 410 l 248 409 l 312 590 l 86 590 l 120 690 l 347 690 l 459 1006 l 573 1006 l 462 690 l 640 690 l 751 1006 l 865 1006 l 754 690 l 963 690 m 606 590 l 425 590 l 362 410 l 543 410 l 606 590 "},"ι":{"x_min":42,"x_max":284,"ha":361,"o":"m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 738 l 167 738 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 103 239 101 q 284 112 257 104 l 284 3 "},"Ά":{"x_min":0,"x_max":906.953125,"ha":982,"o":"m 283 1040 l 88 799 l 5 799 l 145 1040 l 283 1040 m 906 0 l 756 0 l 650 303 l 251 303 l 143 0 l 0 0 l 376 1012 l 529 1012 l 906 0 m 609 421 l 452 866 l 293 421 l 609 421 "},")":{"x_min":0,"x_max":318,"ha":415,"o":"m 318 365 q 257 25 318 191 q 87 -290 197 -141 l 0 -290 q 140 21 93 -128 q 193 360 193 189 q 141 704 193 537 q 0 1024 97 850 l 87 1024 q 257 706 197 871 q 318 365 318 542 "},"ε":{"x_min":0,"x_max":634.71875,"ha":714,"o":"m 634 234 q 527 38 634 110 q 300 -25 433 -25 q 98 29 183 -25 q 0 204 0 93 q 37 314 0 265 q 128 390 67 353 q 56 460 82 419 q 26 555 26 505 q 114 712 26 654 q 295 763 191 763 q 499 700 416 763 q 589 515 589 631 l 478 515 q 419 618 464 580 q 307 657 374 657 q 207 630 253 657 q 151 547 151 598 q 238 445 151 469 q 389 434 280 434 l 389 331 l 349 331 q 206 315 255 331 q 125 210 125 287 q 183 107 125 145 q 302 76 233 76 q 436 117 379 76 q 509 234 493 159 l 634 234 "},"Δ":{"x_min":0,"x_max":952.78125,"ha":1028,"o":"m 952 0 l 0 0 l 400 1013 l 551 1013 l 952 0 m 762 124 l 476 867 l 187 124 l 762 124 "},"}":{"x_min":0,"x_max":481,"ha":578,"o":"m 481 314 q 318 262 364 314 q 282 136 282 222 q 284 65 282 97 q 293 -58 293 -48 q 241 -217 293 -166 q 0 -286 174 -286 l 0 -182 q 143 -130 105 -182 q 171 -2 171 -93 q 168 81 171 22 q 165 144 165 140 q 188 275 165 229 q 306 365 220 339 q 191 455 224 391 q 165 588 165 505 q 168 681 165 624 q 171 742 171 737 q 141 865 171 827 q 0 915 102 915 l 0 1015 q 243 942 176 1015 q 293 773 293 888 q 287 675 293 741 q 282 590 282 608 q 318 466 282 505 q 481 417 364 417 l 481 314 "},"‰":{"x_min":-3,"x_max":1672,"ha":1821,"o":"m 846 0 q 664 76 732 0 q 603 244 603 145 q 662 412 603 344 q 846 489 729 489 q 1027 412 959 489 q 1089 244 1089 343 q 1029 76 1089 144 q 846 0 962 0 m 845 103 q 945 143 910 103 q 981 243 981 184 q 947 340 981 301 q 845 385 910 385 q 745 342 782 385 q 709 243 709 300 q 742 147 709 186 q 845 103 781 103 m 888 986 l 284 -25 l 199 -25 l 803 986 l 888 986 m 241 468 q 58 545 126 468 q -3 715 -3 615 q 56 881 -3 813 q 238 958 124 958 q 421 881 353 958 q 483 712 483 813 q 423 544 483 612 q 241 468 356 468 m 241 855 q 137 811 175 855 q 100 710 100 768 q 136 612 100 653 q 240 572 172 572 q 344 614 306 572 q 382 713 382 656 q 347 810 382 771 q 241 855 308 855 m 1428 0 q 1246 76 1314 0 q 1185 244 1185 145 q 1244 412 1185 344 q 1428 489 1311 489 q 1610 412 1542 489 q 1672 244 1672 343 q 1612 76 1672 144 q 1428 0 1545 0 m 1427 103 q 1528 143 1492 103 q 1564 243 1564 184 q 1530 340 1564 301 q 1427 385 1492 385 q 1327 342 1364 385 q 1291 243 1291 300 q 1324 147 1291 186 q 1427 103 1363 103 "},"a":{"x_min":0,"x_max":698.609375,"ha":794,"o":"m 698 0 q 661 -12 679 -7 q 615 -17 643 -17 q 536 12 564 -17 q 500 96 508 41 q 384 6 456 37 q 236 -25 312 -25 q 65 31 130 -25 q 0 194 0 88 q 118 390 0 334 q 328 435 180 420 q 488 483 476 451 q 495 523 495 504 q 442 619 495 584 q 325 654 389 654 q 209 617 257 654 q 152 513 161 580 l 33 513 q 123 705 33 633 q 332 772 207 772 q 528 712 448 772 q 617 531 617 645 l 617 163 q 624 108 617 126 q 664 90 632 90 l 698 94 l 698 0 m 491 262 l 491 372 q 272 329 350 347 q 128 201 128 294 q 166 113 128 144 q 264 83 205 83 q 414 130 346 83 q 491 262 491 183 "},"—":{"x_min":0,"x_max":941.671875,"ha":1039,"o":"m 941 334 l 0 334 l 0 410 l 941 410 l 941 334 "},"=":{"x_min":8.71875,"x_max":780.953125,"ha":792,"o":"m 780 510 l 8 510 l 8 606 l 780 606 l 780 510 m 780 235 l 8 235 l 8 332 l 780 332 l 780 235 "},"N":{"x_min":0,"x_max":801,"ha":914,"o":"m 801 0 l 651 0 l 131 823 l 131 0 l 0 0 l 0 1013 l 151 1013 l 670 193 l 670 1013 l 801 1013 l 801 0 "},"ρ":{"x_min":0,"x_max":712,"ha":797,"o":"m 712 369 q 620 94 712 207 q 362 -26 521 -26 q 230 2 292 -26 q 119 83 167 30 l 119 -278 l 0 -278 l 0 362 q 91 643 0 531 q 355 764 190 764 q 617 647 517 764 q 712 369 712 536 m 583 366 q 530 559 583 480 q 359 651 469 651 q 190 562 252 651 q 135 370 135 483 q 189 176 135 257 q 359 85 250 85 q 528 175 466 85 q 583 366 583 254 "},"2":{"x_min":59,"x_max":731,"ha":792,"o":"m 731 0 l 59 0 q 197 314 59 188 q 457 487 199 315 q 598 691 598 580 q 543 819 598 772 q 411 867 488 867 q 272 811 328 867 q 209 630 209 747 l 81 630 q 182 901 81 805 q 408 986 271 986 q 629 909 536 986 q 731 694 731 826 q 613 449 731 541 q 378 316 495 383 q 201 122 235 234 l 731 122 l 731 0 "},"¯":{"x_min":0,"x_max":941.671875,"ha":938,"o":"m 941 1033 l 0 1033 l 0 1109 l 941 1109 l 941 1033 "},"Z":{"x_min":0,"x_max":779,"ha":849,"o":"m 779 0 l 0 0 l 0 113 l 621 896 l 40 896 l 40 1013 l 779 1013 l 778 887 l 171 124 l 779 124 l 779 0 "},"u":{"x_min":0,"x_max":617,"ha":729,"o":"m 617 0 l 499 0 l 499 110 q 391 10 460 45 q 246 -25 322 -25 q 61 58 127 -25 q 0 258 0 136 l 0 738 l 125 738 l 125 284 q 156 148 125 202 q 273 82 197 82 q 433 165 369 82 q 493 340 493 243 l 493 738 l 617 738 l 617 0 "},"k":{"x_min":0,"x_max":612.484375,"ha":697,"o":"m 612 738 l 338 465 l 608 0 l 469 0 l 251 382 l 121 251 l 121 0 l 0 0 l 0 1013 l 121 1013 l 121 402 l 456 738 l 612 738 "},"Η":{"x_min":0,"x_max":803,"ha":917,"o":"m 803 0 l 667 0 l 667 475 l 140 475 l 140 0 l 0 0 l 0 1013 l 140 1013 l 140 599 l 667 599 l 667 1013 l 803 1013 l 803 0 "},"Α":{"x_min":0,"x_max":906.953125,"ha":985,"o":"m 906 0 l 756 0 l 650 303 l 251 303 l 143 0 l 0 0 l 376 1013 l 529 1013 l 906 0 m 609 421 l 452 866 l 293 421 l 609 421 "},"s":{"x_min":0,"x_max":604,"ha":697,"o":"m 604 217 q 501 36 604 104 q 292 -23 411 -23 q 86 43 166 -23 q 0 238 0 114 l 121 237 q 175 122 121 164 q 300 85 223 85 q 415 112 363 85 q 479 207 479 147 q 361 309 479 276 q 140 372 141 370 q 21 544 21 426 q 111 708 21 647 q 298 761 190 761 q 492 705 413 761 q 583 531 583 643 l 462 531 q 412 625 462 594 q 298 657 363 657 q 199 636 242 657 q 143 558 143 608 q 262 454 143 486 q 484 394 479 397 q 604 217 604 341 "},"B":{"x_min":0,"x_max":778,"ha":876,"o":"m 580 546 q 724 469 670 535 q 778 311 778 403 q 673 83 778 171 q 432 0 575 0 l 0 0 l 0 1013 l 411 1013 q 629 957 541 1013 q 732 768 732 892 q 691 633 732 693 q 580 546 650 572 m 393 899 l 139 899 l 139 588 l 379 588 q 521 624 462 588 q 592 744 592 667 q 531 859 592 819 q 393 899 471 899 m 419 124 q 566 169 504 124 q 635 303 635 219 q 559 436 635 389 q 402 477 494 477 l 139 477 l 139 124 l 419 124 "},"…":{"x_min":0,"x_max":614,"ha":708,"o":"m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 m 378 0 l 236 0 l 236 151 l 378 151 l 378 0 m 614 0 l 472 0 l 472 151 l 614 151 l 614 0 "},"?":{"x_min":0,"x_max":607,"ha":704,"o":"m 607 777 q 543 599 607 674 q 422 474 482 537 q 357 272 357 391 l 236 272 q 297 487 236 395 q 411 619 298 490 q 474 762 474 691 q 422 885 474 838 q 301 933 371 933 q 179 880 228 933 q 124 706 124 819 l 0 706 q 94 963 0 872 q 302 1044 177 1044 q 511 973 423 1044 q 607 777 607 895 m 370 0 l 230 0 l 230 151 l 370 151 l 370 0 "},"H":{"x_min":0,"x_max":803,"ha":915,"o":"m 803 0 l 667 0 l 667 475 l 140 475 l 140 0 l 0 0 l 0 1013 l 140 1013 l 140 599 l 667 599 l 667 1013 l 803 1013 l 803 0 "},"ν":{"x_min":0,"x_max":675,"ha":761,"o":"m 675 738 l 404 0 l 272 0 l 0 738 l 133 738 l 340 147 l 541 738 l 675 738 "},"c":{"x_min":1,"x_max":701.390625,"ha":775,"o":"m 701 264 q 584 53 681 133 q 353 -26 487 -26 q 91 91 188 -26 q 1 370 1 201 q 92 645 1 537 q 353 761 190 761 q 572 688 479 761 q 690 493 666 615 l 556 493 q 487 606 545 562 q 356 650 428 650 q 186 563 246 650 q 134 372 134 487 q 188 179 134 258 q 359 88 250 88 q 492 136 437 88 q 566 264 548 185 l 701 264 "},"¶":{"x_min":0,"x_max":566.671875,"ha":678,"o":"m 21 892 l 52 892 l 98 761 l 145 892 l 176 892 l 178 741 l 157 741 l 157 867 l 108 741 l 88 741 l 40 871 l 40 741 l 21 741 l 21 892 m 308 854 l 308 731 q 252 691 308 691 q 227 691 240 691 q 207 696 213 695 l 207 712 l 253 706 q 288 733 288 706 l 288 763 q 244 741 279 741 q 193 797 193 741 q 261 860 193 860 q 287 860 273 860 q 308 854 302 855 m 288 842 l 263 843 q 213 796 213 843 q 248 756 213 756 q 288 796 288 756 l 288 842 m 566 988 l 502 988 l 502 -1 l 439 -1 l 439 988 l 317 988 l 317 -1 l 252 -1 l 252 602 q 81 653 155 602 q 0 805 0 711 q 101 989 0 918 q 309 1053 194 1053 l 566 1053 l 566 988 "},"β":{"x_min":0,"x_max":660,"ha":745,"o":"m 471 550 q 610 450 561 522 q 660 280 660 378 q 578 64 660 151 q 367 -22 497 -22 q 239 5 299 -22 q 126 82 178 32 l 126 -278 l 0 -278 l 0 593 q 54 903 0 801 q 318 1042 127 1042 q 519 964 436 1042 q 603 771 603 887 q 567 644 603 701 q 471 550 532 586 m 337 79 q 476 138 418 79 q 535 279 535 198 q 427 437 535 386 q 226 477 344 477 l 226 583 q 398 620 329 583 q 486 762 486 668 q 435 884 486 833 q 312 935 384 935 q 169 861 219 935 q 126 698 126 797 l 126 362 q 170 169 126 242 q 337 79 224 79 "},"Μ":{"x_min":0,"x_max":954,"ha":1068,"o":"m 954 0 l 819 0 l 819 868 l 537 0 l 405 0 l 128 865 l 128 0 l 0 0 l 0 1013 l 199 1013 l 472 158 l 758 1013 l 954 1013 l 954 0 "},"Ό":{"x_min":0.109375,"x_max":1120,"ha":1217,"o":"m 1120 505 q 994 132 1120 282 q 642 -29 861 -29 q 290 130 422 -29 q 167 505 167 280 q 294 883 167 730 q 650 1046 430 1046 q 999 882 868 1046 q 1120 505 1120 730 m 977 504 q 896 784 977 669 q 644 915 804 915 q 391 785 484 915 q 307 504 307 669 q 391 224 307 339 q 644 95 486 95 q 894 224 803 95 q 977 504 977 339 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 "},"Ή":{"x_min":0,"x_max":1158,"ha":1275,"o":"m 1158 0 l 1022 0 l 1022 475 l 496 475 l 496 0 l 356 0 l 356 1012 l 496 1012 l 496 599 l 1022 599 l 1022 1012 l 1158 1012 l 1158 0 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 "},"•":{"x_min":0,"x_max":663.890625,"ha":775,"o":"m 663 529 q 566 293 663 391 q 331 196 469 196 q 97 294 194 196 q 0 529 0 393 q 96 763 0 665 q 331 861 193 861 q 566 763 469 861 q 663 529 663 665 "},"¥":{"x_min":0.1875,"x_max":819.546875,"ha":886,"o":"m 563 561 l 697 561 l 696 487 l 520 487 l 482 416 l 482 380 l 697 380 l 695 308 l 482 308 l 482 0 l 342 0 l 342 308 l 125 308 l 125 380 l 342 380 l 342 417 l 303 487 l 125 487 l 125 561 l 258 561 l 0 1013 l 140 1013 l 411 533 l 679 1013 l 819 1013 l 563 561 "},"(":{"x_min":0,"x_max":318.0625,"ha":415,"o":"m 318 -290 l 230 -290 q 61 23 122 -142 q 0 365 0 190 q 62 712 0 540 q 230 1024 119 869 l 318 1024 q 175 705 219 853 q 125 360 125 542 q 176 22 125 187 q 318 -290 223 -127 "},"U":{"x_min":0,"x_max":796,"ha":904,"o":"m 796 393 q 681 93 796 212 q 386 -25 566 -25 q 101 95 208 -25 q 0 393 0 211 l 0 1013 l 138 1013 l 138 391 q 204 191 138 270 q 394 107 276 107 q 586 191 512 107 q 656 391 656 270 l 656 1013 l 796 1013 l 796 393 "},"γ":{"x_min":0.5,"x_max":744.953125,"ha":822,"o":"m 744 737 l 463 54 l 463 -278 l 338 -278 l 338 54 l 154 495 q 104 597 124 569 q 13 651 67 651 l 0 651 l 0 751 l 39 753 q 168 711 121 753 q 242 594 207 676 l 403 208 l 617 737 l 744 737 "},"α":{"x_min":0,"x_max":765.5625,"ha":809,"o":"m 765 -4 q 698 -14 726 -14 q 564 97 586 -14 q 466 7 525 40 q 337 -26 407 -26 q 88 98 186 -26 q 0 369 0 212 q 88 637 0 525 q 337 760 184 760 q 465 728 407 760 q 563 637 524 696 l 563 739 l 685 739 l 685 222 q 693 141 685 168 q 748 94 708 94 q 765 96 760 94 l 765 -4 m 584 371 q 531 562 584 485 q 360 653 470 653 q 192 566 254 653 q 135 379 135 489 q 186 181 135 261 q 358 84 247 84 q 528 176 465 84 q 584 371 584 260 "},"F":{"x_min":0,"x_max":683.328125,"ha":717,"o":"m 683 888 l 140 888 l 140 583 l 613 583 l 613 458 l 140 458 l 140 0 l 0 0 l 0 1013 l 683 1013 l 683 888 "},"­":{"x_min":0,"x_max":705.5625,"ha":803,"o":"m 705 334 l 0 334 l 0 410 l 705 410 l 705 334 "},":":{"x_min":0,"x_max":142,"ha":239,"o":"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 "},"Χ":{"x_min":0,"x_max":854.171875,"ha":935,"o":"m 854 0 l 683 0 l 423 409 l 166 0 l 0 0 l 347 519 l 18 1013 l 186 1013 l 427 637 l 675 1013 l 836 1013 l 504 521 l 854 0 "},"*":{"x_min":116,"x_max":674,"ha":792,"o":"m 674 768 l 475 713 l 610 544 l 517 477 l 394 652 l 272 478 l 178 544 l 314 713 l 116 766 l 153 876 l 341 812 l 342 1013 l 446 1013 l 446 811 l 635 874 l 674 768 "},"†":{"x_min":0,"x_max":777,"ha":835,"o":"m 458 804 l 777 804 l 777 683 l 458 683 l 458 0 l 319 0 l 319 681 l 0 683 l 0 804 l 319 804 l 319 1015 l 458 1013 l 458 804 "},"°":{"x_min":0,"x_max":347,"ha":444,"o":"m 173 802 q 43 856 91 802 q 0 977 0 905 q 45 1101 0 1049 q 173 1153 90 1153 q 303 1098 255 1153 q 347 977 347 1049 q 303 856 347 905 q 173 802 256 802 m 173 884 q 238 910 214 884 q 262 973 262 937 q 239 1038 262 1012 q 173 1064 217 1064 q 108 1037 132 1064 q 85 973 85 1010 q 108 910 85 937 q 173 884 132 884 "},"V":{"x_min":0,"x_max":862.71875,"ha":940,"o":"m 862 1013 l 505 0 l 361 0 l 0 1013 l 143 1013 l 434 165 l 718 1012 l 862 1013 "},"Ξ":{"x_min":0,"x_max":734.71875,"ha":763,"o":"m 723 889 l 9 889 l 9 1013 l 723 1013 l 723 889 m 673 463 l 61 463 l 61 589 l 673 589 l 673 463 m 734 0 l 0 0 l 0 124 l 734 124 l 734 0 "}," ":{"x_min":0,"x_max":0,"ha":853},"Ϋ":{"x_min":0.328125,"x_max":819.515625,"ha":889,"o":"m 588 1046 l 460 1046 l 460 1189 l 588 1189 l 588 1046 m 360 1046 l 232 1046 l 232 1189 l 360 1189 l 360 1046 m 819 1012 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1012 l 140 1012 l 411 533 l 679 1012 l 819 1012 "},"0":{"x_min":73,"x_max":715,"ha":792,"o":"m 394 -29 q 153 129 242 -29 q 73 479 73 272 q 152 829 73 687 q 394 989 241 989 q 634 829 545 989 q 715 479 715 684 q 635 129 715 270 q 394 -29 546 -29 m 394 89 q 546 211 489 89 q 598 479 598 322 q 548 748 598 640 q 394 871 491 871 q 241 748 298 871 q 190 479 190 637 q 239 211 190 319 q 394 89 296 89 "},"”":{"x_min":0,"x_max":347,"ha":454,"o":"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 m 347 851 q 310 737 347 784 q 208 669 273 690 l 208 734 q 267 787 250 741 q 280 873 280 821 l 208 873 l 208 1013 l 347 1013 l 347 851 "},"@":{"x_min":0,"x_max":1260,"ha":1357,"o":"m 1098 -45 q 877 -160 1001 -117 q 633 -203 752 -203 q 155 -29 327 -203 q 0 360 0 127 q 176 802 0 616 q 687 1008 372 1008 q 1123 854 969 1008 q 1260 517 1260 718 q 1155 216 1260 341 q 868 82 1044 82 q 772 106 801 82 q 737 202 737 135 q 647 113 700 144 q 527 82 594 82 q 367 147 420 82 q 314 312 314 212 q 401 565 314 452 q 639 690 498 690 q 810 588 760 690 l 849 668 l 938 668 q 877 441 900 532 q 833 226 833 268 q 853 182 833 198 q 902 167 873 167 q 1088 272 1012 167 q 1159 512 1159 372 q 1051 793 1159 681 q 687 925 925 925 q 248 747 415 925 q 97 361 97 586 q 226 26 97 159 q 627 -122 370 -122 q 856 -87 737 -122 q 1061 8 976 -53 l 1098 -45 m 786 488 q 738 580 777 545 q 643 615 700 615 q 483 517 548 615 q 425 322 425 430 q 457 203 425 250 q 552 156 490 156 q 722 273 665 156 q 786 488 738 309 "},"Ί":{"x_min":0,"x_max":499,"ha":613,"o":"m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 m 499 0 l 360 0 l 360 1012 l 499 1012 l 499 0 "},"i":{"x_min":14,"x_max":136,"ha":275,"o":"m 136 873 l 14 873 l 14 1013 l 136 1013 l 136 873 m 136 0 l 14 0 l 14 737 l 136 737 l 136 0 "},"Β":{"x_min":0,"x_max":778,"ha":877,"o":"m 580 545 q 724 468 671 534 q 778 310 778 402 q 673 83 778 170 q 432 0 575 0 l 0 0 l 0 1013 l 411 1013 q 629 957 541 1013 q 732 768 732 891 q 691 632 732 692 q 580 545 650 571 m 393 899 l 139 899 l 139 587 l 379 587 q 521 623 462 587 q 592 744 592 666 q 531 859 592 819 q 393 899 471 899 m 419 124 q 566 169 504 124 q 635 302 635 219 q 559 435 635 388 q 402 476 494 476 l 139 476 l 139 124 l 419 124 "},"υ":{"x_min":0,"x_max":617,"ha":725,"o":"m 617 352 q 540 94 617 199 q 308 -24 455 -24 q 76 94 161 -24 q 0 352 0 199 l 0 739 l 126 739 l 126 355 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 355 492 257 l 492 739 l 617 739 l 617 352 "},"]":{"x_min":0,"x_max":275,"ha":372,"o":"m 275 -281 l 0 -281 l 0 -187 l 151 -187 l 151 920 l 0 920 l 0 1013 l 275 1013 l 275 -281 "},"m":{"x_min":0,"x_max":1019,"ha":1128,"o":"m 1019 0 l 897 0 l 897 454 q 860 591 897 536 q 739 660 816 660 q 613 586 659 660 q 573 436 573 522 l 573 0 l 447 0 l 447 455 q 412 591 447 535 q 294 657 372 657 q 165 586 213 657 q 122 437 122 521 l 122 0 l 0 0 l 0 738 l 117 738 l 117 640 q 202 730 150 697 q 316 763 254 763 q 437 730 381 763 q 525 642 494 697 q 621 731 559 700 q 753 763 682 763 q 943 694 867 763 q 1019 512 1019 625 l 1019 0 "},"χ":{"x_min":8.328125,"x_max":780.5625,"ha":815,"o":"m 780 -278 q 715 -294 747 -294 q 616 -257 663 -294 q 548 -175 576 -227 l 379 133 l 143 -277 l 9 -277 l 313 254 l 163 522 q 127 586 131 580 q 36 640 91 640 q 8 637 27 640 l 8 752 l 52 757 q 162 719 113 757 q 236 627 200 690 l 383 372 l 594 737 l 726 737 l 448 250 l 625 -69 q 670 -153 647 -110 q 743 -188 695 -188 q 780 -184 759 -188 l 780 -278 "},"8":{"x_min":55,"x_max":736,"ha":792,"o":"m 571 527 q 694 424 652 491 q 736 280 736 358 q 648 71 736 158 q 395 -26 551 -26 q 142 69 238 -26 q 55 279 55 157 q 96 425 55 359 q 220 527 138 491 q 120 615 153 562 q 88 726 88 668 q 171 904 88 827 q 395 986 261 986 q 618 905 529 986 q 702 727 702 830 q 670 616 702 667 q 571 527 638 565 m 394 565 q 519 610 475 565 q 563 717 563 655 q 521 823 563 781 q 392 872 474 872 q 265 824 312 872 q 224 720 224 783 q 265 613 224 656 q 394 565 312 565 m 395 91 q 545 150 488 91 q 597 280 597 204 q 546 408 597 355 q 395 465 492 465 q 244 408 299 465 q 194 280 194 356 q 244 150 194 203 q 395 91 299 91 "},"ί":{"x_min":42,"x_max":326.71875,"ha":361,"o":"m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 737 l 167 737 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 102 239 101 q 284 112 257 104 l 284 3 m 326 1040 l 137 819 l 54 819 l 189 1040 l 326 1040 "},"Ζ":{"x_min":0,"x_max":779.171875,"ha":850,"o":"m 779 0 l 0 0 l 0 113 l 620 896 l 40 896 l 40 1013 l 779 1013 l 779 887 l 170 124 l 779 124 l 779 0 "},"R":{"x_min":0,"x_max":781.953125,"ha":907,"o":"m 781 0 l 623 0 q 587 242 590 52 q 407 433 585 433 l 138 433 l 138 0 l 0 0 l 0 1013 l 396 1013 q 636 946 539 1013 q 749 731 749 868 q 711 597 749 659 q 608 502 674 534 q 718 370 696 474 q 729 207 722 352 q 781 26 736 62 l 781 0 m 373 551 q 533 594 465 551 q 614 731 614 645 q 532 859 614 815 q 373 896 465 896 l 138 896 l 138 551 l 373 551 "},"o":{"x_min":0,"x_max":713,"ha":821,"o":"m 357 -25 q 94 91 194 -25 q 0 368 0 202 q 93 642 0 533 q 357 761 193 761 q 618 644 518 761 q 713 368 713 533 q 619 91 713 201 q 357 -25 521 -25 m 357 85 q 528 175 465 85 q 584 369 584 255 q 529 562 584 484 q 357 651 467 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 357 85 250 85 "},"5":{"x_min":54.171875,"x_max":738,"ha":792,"o":"m 738 314 q 626 60 738 153 q 382 -23 526 -23 q 155 47 248 -23 q 54 256 54 125 l 183 256 q 259 132 204 174 q 382 91 314 91 q 533 149 471 91 q 602 314 602 213 q 538 469 602 411 q 386 528 475 528 q 284 506 332 528 q 197 439 237 484 l 81 439 l 159 958 l 684 958 l 684 840 l 254 840 l 214 579 q 306 627 258 612 q 407 643 354 643 q 636 552 540 643 q 738 314 738 457 "},"7":{"x_min":58.71875,"x_max":730.953125,"ha":792,"o":"m 730 839 q 469 448 560 641 q 335 0 378 255 l 192 0 q 328 441 235 252 q 593 830 421 630 l 58 830 l 58 958 l 730 958 l 730 839 "},"K":{"x_min":0,"x_max":819.46875,"ha":906,"o":"m 819 0 l 649 0 l 294 509 l 139 355 l 139 0 l 0 0 l 0 1013 l 139 1013 l 139 526 l 626 1013 l 809 1013 l 395 600 l 819 0 "},",":{"x_min":0,"x_max":142,"ha":239,"o":"m 142 -12 q 105 -132 142 -82 q 0 -205 68 -182 l 0 -138 q 57 -82 40 -124 q 70 0 70 -51 l 0 0 l 0 151 l 142 151 l 142 -12 "},"d":{"x_min":0,"x_max":683,"ha":796,"o":"m 683 0 l 564 0 l 564 93 q 456 6 516 38 q 327 -25 395 -25 q 87 100 181 -25 q 0 365 0 215 q 90 639 0 525 q 343 763 187 763 q 564 647 486 763 l 564 1013 l 683 1013 l 683 0 m 582 373 q 529 562 582 484 q 361 653 468 653 q 190 561 253 653 q 135 365 135 479 q 189 175 135 254 q 358 85 251 85 q 529 178 468 85 q 582 373 582 258 "},"¨":{"x_min":-109,"x_max":247,"ha":232,"o":"m 247 1046 l 119 1046 l 119 1189 l 247 1189 l 247 1046 m 19 1046 l -109 1046 l -109 1189 l 19 1189 l 19 1046 "},"E":{"x_min":0,"x_max":736.109375,"ha":789,"o":"m 736 0 l 0 0 l 0 1013 l 725 1013 l 725 889 l 139 889 l 139 585 l 677 585 l 677 467 l 139 467 l 139 125 l 736 125 l 736 0 "},"Y":{"x_min":0,"x_max":820,"ha":886,"o":"m 820 1013 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1013 l 140 1013 l 411 534 l 679 1012 l 820 1013 "},"\\"":{"x_min":0,"x_max":299,"ha":396,"o":"m 299 606 l 203 606 l 203 988 l 299 988 l 299 606 m 96 606 l 0 606 l 0 988 l 96 988 l 96 606 "},"‹":{"x_min":17.984375,"x_max":773.609375,"ha":792,"o":"m 773 40 l 18 376 l 17 465 l 773 799 l 773 692 l 159 420 l 773 149 l 773 40 "},"„":{"x_min":0,"x_max":364,"ha":467,"o":"m 141 -12 q 104 -132 141 -82 q 0 -205 67 -182 l 0 -138 q 56 -82 40 -124 q 69 0 69 -51 l 0 0 l 0 151 l 141 151 l 141 -12 m 364 -12 q 327 -132 364 -82 q 222 -205 290 -182 l 222 -138 q 279 -82 262 -124 q 292 0 292 -51 l 222 0 l 222 151 l 364 151 l 364 -12 "},"δ":{"x_min":1,"x_max":710,"ha":810,"o":"m 710 360 q 616 87 710 196 q 356 -28 518 -28 q 99 82 197 -28 q 1 356 1 192 q 100 606 1 509 q 355 703 199 703 q 180 829 288 754 q 70 903 124 866 l 70 1012 l 643 1012 l 643 901 l 258 901 q 462 763 422 794 q 636 592 577 677 q 710 360 710 485 m 584 365 q 552 501 584 447 q 451 602 521 555 q 372 611 411 611 q 197 541 258 611 q 136 355 136 472 q 190 171 136 245 q 358 85 252 85 q 528 173 465 85 q 584 365 584 252 "},"έ":{"x_min":0,"x_max":634.71875,"ha":714,"o":"m 634 234 q 527 38 634 110 q 300 -25 433 -25 q 98 29 183 -25 q 0 204 0 93 q 37 313 0 265 q 128 390 67 352 q 56 459 82 419 q 26 555 26 505 q 114 712 26 654 q 295 763 191 763 q 499 700 416 763 q 589 515 589 631 l 478 515 q 419 618 464 580 q 307 657 374 657 q 207 630 253 657 q 151 547 151 598 q 238 445 151 469 q 389 434 280 434 l 389 331 l 349 331 q 206 315 255 331 q 125 210 125 287 q 183 107 125 145 q 302 76 233 76 q 436 117 379 76 q 509 234 493 159 l 634 234 m 520 1040 l 331 819 l 248 819 l 383 1040 l 520 1040 "},"ω":{"x_min":0,"x_max":922,"ha":1031,"o":"m 922 339 q 856 97 922 203 q 650 -26 780 -26 q 538 9 587 -26 q 461 103 489 44 q 387 12 436 46 q 277 -22 339 -22 q 69 97 147 -22 q 0 339 0 203 q 45 551 0 444 q 161 738 84 643 l 302 738 q 175 553 219 647 q 124 336 124 446 q 155 179 124 249 q 275 88 197 88 q 375 163 341 88 q 400 294 400 219 l 400 572 l 524 572 l 524 294 q 561 135 524 192 q 643 88 591 88 q 762 182 719 88 q 797 342 797 257 q 745 556 797 450 q 619 738 705 638 l 760 738 q 874 551 835 640 q 922 339 922 444 "},"´":{"x_min":0,"x_max":96,"ha":251,"o":"m 96 606 l 0 606 l 0 988 l 96 988 l 96 606 "},"±":{"x_min":11,"x_max":781,"ha":792,"o":"m 781 490 l 446 490 l 446 255 l 349 255 l 349 490 l 11 490 l 11 586 l 349 586 l 349 819 l 446 819 l 446 586 l 781 586 l 781 490 m 781 21 l 11 21 l 11 115 l 781 115 l 781 21 "},"|":{"x_min":343,"x_max":449,"ha":792,"o":"m 449 462 l 343 462 l 343 986 l 449 986 l 449 462 m 449 -242 l 343 -242 l 343 280 l 449 280 l 449 -242 "},"ϋ":{"x_min":0,"x_max":617,"ha":725,"o":"m 482 800 l 372 800 l 372 925 l 482 925 l 482 800 m 239 800 l 129 800 l 129 925 l 239 925 l 239 800 m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 "},"§":{"x_min":0,"x_max":593,"ha":690,"o":"m 593 425 q 554 312 593 369 q 467 233 516 254 q 537 83 537 172 q 459 -74 537 -12 q 288 -133 387 -133 q 115 -69 184 -133 q 47 96 47 -6 l 166 96 q 199 7 166 40 q 288 -26 232 -26 q 371 -5 332 -26 q 420 60 420 21 q 311 201 420 139 q 108 309 210 255 q 0 490 0 383 q 33 602 0 551 q 124 687 66 654 q 75 743 93 712 q 58 812 58 773 q 133 984 58 920 q 300 1043 201 1043 q 458 987 394 1043 q 529 814 529 925 l 411 814 q 370 908 404 877 q 289 939 336 939 q 213 911 246 939 q 180 841 180 883 q 286 720 180 779 q 484 612 480 615 q 593 425 593 534 m 467 409 q 355 544 467 473 q 196 630 228 612 q 146 587 162 609 q 124 525 124 558 q 239 387 124 462 q 398 298 369 315 q 448 345 429 316 q 467 409 467 375 "},"b":{"x_min":0,"x_max":685,"ha":783,"o":"m 685 372 q 597 99 685 213 q 347 -25 501 -25 q 219 5 277 -25 q 121 93 161 36 l 121 0 l 0 0 l 0 1013 l 121 1013 l 121 634 q 214 723 157 692 q 341 754 272 754 q 591 637 493 754 q 685 372 685 526 m 554 356 q 499 550 554 470 q 328 644 437 644 q 162 556 223 644 q 108 369 108 478 q 160 176 108 256 q 330 83 221 83 q 498 169 435 83 q 554 356 554 245 "},"q":{"x_min":0,"x_max":683,"ha":876,"o":"m 683 -278 l 564 -278 l 564 97 q 474 8 533 39 q 345 -23 415 -23 q 91 93 188 -23 q 0 364 0 203 q 87 635 0 522 q 337 760 184 760 q 466 727 408 760 q 564 637 523 695 l 564 737 l 683 737 l 683 -278 m 582 375 q 527 564 582 488 q 358 652 466 652 q 190 565 253 652 q 135 377 135 488 q 189 179 135 261 q 361 84 251 84 q 530 179 469 84 q 582 375 582 260 "},"Ω":{"x_min":-0.171875,"x_max":969.5625,"ha":1068,"o":"m 969 0 l 555 0 l 555 123 q 744 308 675 194 q 814 558 814 423 q 726 812 814 709 q 484 922 633 922 q 244 820 334 922 q 154 567 154 719 q 223 316 154 433 q 412 123 292 199 l 412 0 l 0 0 l 0 124 l 217 124 q 68 327 122 210 q 15 572 15 444 q 144 911 15 781 q 484 1041 274 1041 q 822 909 691 1041 q 953 569 953 777 q 899 326 953 443 q 750 124 846 210 l 969 124 l 969 0 "},"ύ":{"x_min":0,"x_max":617,"ha":725,"o":"m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 m 535 1040 l 346 819 l 262 819 l 397 1040 l 535 1040 "},"z":{"x_min":-0.015625,"x_max":613.890625,"ha":697,"o":"m 613 0 l 0 0 l 0 100 l 433 630 l 20 630 l 20 738 l 594 738 l 593 636 l 163 110 l 613 110 l 613 0 "},"™":{"x_min":0,"x_max":894,"ha":1000,"o":"m 389 951 l 229 951 l 229 503 l 160 503 l 160 951 l 0 951 l 0 1011 l 389 1011 l 389 951 m 894 503 l 827 503 l 827 939 l 685 503 l 620 503 l 481 937 l 481 503 l 417 503 l 417 1011 l 517 1011 l 653 580 l 796 1010 l 894 1011 l 894 503 "},"ή":{"x_min":0.78125,"x_max":697,"ha":810,"o":"m 697 -278 l 572 -278 l 572 454 q 540 587 572 536 q 425 650 501 650 q 271 579 337 650 q 206 420 206 509 l 206 0 l 81 0 l 81 489 q 73 588 81 562 q 0 644 56 644 l 0 741 q 68 755 38 755 q 158 721 124 755 q 200 630 193 687 q 297 726 234 692 q 434 761 359 761 q 620 692 544 761 q 697 516 697 624 l 697 -278 m 479 1040 l 290 819 l 207 819 l 341 1040 l 479 1040 "},"Θ":{"x_min":0,"x_max":960,"ha":1056,"o":"m 960 507 q 833 129 960 280 q 476 -32 698 -32 q 123 129 255 -32 q 0 507 0 280 q 123 883 0 732 q 476 1045 255 1045 q 832 883 696 1045 q 960 507 960 732 m 817 500 q 733 789 817 669 q 476 924 639 924 q 223 792 317 924 q 142 507 142 675 q 222 222 142 339 q 476 89 315 89 q 730 218 636 89 q 817 500 817 334 m 716 449 l 243 449 l 243 571 l 716 571 l 716 449 "},"®":{"x_min":-3,"x_max":1008,"ha":1106,"o":"m 503 532 q 614 562 566 532 q 672 658 672 598 q 614 747 672 716 q 503 772 569 772 l 338 772 l 338 532 l 503 532 m 502 -7 q 123 151 263 -7 q -3 501 -3 294 q 123 851 -3 706 q 502 1011 263 1011 q 881 851 739 1011 q 1008 501 1008 708 q 883 151 1008 292 q 502 -7 744 -7 m 502 60 q 830 197 709 60 q 940 501 940 322 q 831 805 940 681 q 502 944 709 944 q 174 805 296 944 q 65 501 65 680 q 173 197 65 320 q 502 60 294 60 m 788 146 l 678 146 q 653 316 655 183 q 527 449 652 449 l 338 449 l 338 146 l 241 146 l 241 854 l 518 854 q 688 808 621 854 q 766 658 766 755 q 739 563 766 607 q 668 497 713 519 q 751 331 747 472 q 788 164 756 190 l 788 146 "},"~":{"x_min":0,"x_max":833,"ha":931,"o":"m 833 958 q 778 753 833 831 q 594 665 716 665 q 402 761 502 665 q 240 857 302 857 q 131 795 166 857 q 104 665 104 745 l 0 665 q 54 867 0 789 q 237 958 116 958 q 429 861 331 958 q 594 765 527 765 q 704 827 670 765 q 729 958 729 874 l 833 958 "},"Ε":{"x_min":0,"x_max":736.21875,"ha":778,"o":"m 736 0 l 0 0 l 0 1013 l 725 1013 l 725 889 l 139 889 l 139 585 l 677 585 l 677 467 l 139 467 l 139 125 l 736 125 l 736 0 "},"³":{"x_min":0,"x_max":450,"ha":547,"o":"m 450 552 q 379 413 450 464 q 220 366 313 366 q 69 414 130 366 q 0 567 0 470 l 85 567 q 126 470 85 504 q 225 437 168 437 q 320 467 280 437 q 360 552 360 498 q 318 632 360 608 q 213 657 276 657 q 195 657 203 657 q 176 657 181 657 l 176 722 q 279 733 249 722 q 334 815 334 752 q 300 881 334 856 q 220 907 267 907 q 133 875 169 907 q 97 781 97 844 l 15 781 q 78 926 15 875 q 220 972 135 972 q 364 930 303 972 q 426 817 426 888 q 344 697 426 733 q 421 642 392 681 q 450 552 450 603 "},"[":{"x_min":0,"x_max":273.609375,"ha":371,"o":"m 273 -281 l 0 -281 l 0 1013 l 273 1013 l 273 920 l 124 920 l 124 -187 l 273 -187 l 273 -281 "},"L":{"x_min":0,"x_max":645.828125,"ha":696,"o":"m 645 0 l 0 0 l 0 1013 l 140 1013 l 140 126 l 645 126 l 645 0 "},"σ":{"x_min":0,"x_max":803.390625,"ha":894,"o":"m 803 628 l 633 628 q 713 368 713 512 q 618 93 713 204 q 357 -25 518 -25 q 94 91 194 -25 q 0 368 0 201 q 94 644 0 533 q 356 761 194 761 q 481 750 398 761 q 608 739 564 739 l 803 739 l 803 628 m 360 85 q 529 180 467 85 q 584 374 584 262 q 527 566 584 490 q 352 651 463 651 q 187 559 247 651 q 135 368 135 478 q 189 175 135 254 q 360 85 251 85 "},"ζ":{"x_min":0,"x_max":573,"ha":642,"o":"m 573 -40 q 553 -162 573 -97 q 510 -278 543 -193 l 400 -278 q 441 -187 428 -219 q 462 -90 462 -132 q 378 -14 462 -14 q 108 45 197 -14 q 0 290 0 117 q 108 631 0 462 q 353 901 194 767 l 55 901 l 55 1012 l 561 1012 l 561 924 q 261 669 382 831 q 128 301 128 489 q 243 117 128 149 q 458 98 350 108 q 573 -40 573 80 "},"θ":{"x_min":0,"x_max":674,"ha":778,"o":"m 674 496 q 601 160 674 304 q 336 -26 508 -26 q 73 153 165 -26 q 0 485 0 296 q 72 840 0 683 q 343 1045 166 1045 q 605 844 516 1045 q 674 496 674 692 m 546 579 q 498 798 546 691 q 336 935 437 935 q 178 798 237 935 q 126 579 137 701 l 546 579 m 546 475 l 126 475 q 170 233 126 348 q 338 80 230 80 q 504 233 447 80 q 546 475 546 346 "},"Ο":{"x_min":0,"x_max":958,"ha":1054,"o":"m 485 1042 q 834 883 703 1042 q 958 511 958 735 q 834 136 958 287 q 481 -26 701 -26 q 126 130 261 -26 q 0 504 0 279 q 127 880 0 729 q 485 1042 263 1042 m 480 98 q 731 225 638 98 q 815 504 815 340 q 733 783 815 670 q 480 913 640 913 q 226 785 321 913 q 142 504 142 671 q 226 224 142 339 q 480 98 319 98 "},"Γ":{"x_min":0,"x_max":705.28125,"ha":749,"o":"m 705 886 l 140 886 l 140 0 l 0 0 l 0 1012 l 705 1012 l 705 886 "}," ":{"x_min":0,"x_max":0,"ha":375},"%":{"x_min":-3,"x_max":1089,"ha":1186,"o":"m 845 0 q 663 76 731 0 q 602 244 602 145 q 661 412 602 344 q 845 489 728 489 q 1027 412 959 489 q 1089 244 1089 343 q 1029 76 1089 144 q 845 0 962 0 m 844 103 q 945 143 909 103 q 981 243 981 184 q 947 340 981 301 q 844 385 909 385 q 744 342 781 385 q 708 243 708 300 q 741 147 708 186 q 844 103 780 103 m 888 986 l 284 -25 l 199 -25 l 803 986 l 888 986 m 241 468 q 58 545 126 468 q -3 715 -3 615 q 56 881 -3 813 q 238 958 124 958 q 421 881 353 958 q 483 712 483 813 q 423 544 483 612 q 241 468 356 468 m 241 855 q 137 811 175 855 q 100 710 100 768 q 136 612 100 653 q 240 572 172 572 q 344 614 306 572 q 382 713 382 656 q 347 810 382 771 q 241 855 308 855 "},"P":{"x_min":0,"x_max":726,"ha":806,"o":"m 424 1013 q 640 931 555 1013 q 726 719 726 850 q 637 506 726 587 q 413 426 548 426 l 140 426 l 140 0 l 0 0 l 0 1013 l 424 1013 m 379 889 l 140 889 l 140 548 l 372 548 q 522 589 459 548 q 593 720 593 637 q 528 845 593 801 q 379 889 463 889 "},"Έ":{"x_min":0,"x_max":1078.21875,"ha":1118,"o":"m 1078 0 l 342 0 l 342 1013 l 1067 1013 l 1067 889 l 481 889 l 481 585 l 1019 585 l 1019 467 l 481 467 l 481 125 l 1078 125 l 1078 0 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 "},"Ώ":{"x_min":0.125,"x_max":1136.546875,"ha":1235,"o":"m 1136 0 l 722 0 l 722 123 q 911 309 842 194 q 981 558 981 423 q 893 813 981 710 q 651 923 800 923 q 411 821 501 923 q 321 568 321 720 q 390 316 321 433 q 579 123 459 200 l 579 0 l 166 0 l 166 124 l 384 124 q 235 327 289 210 q 182 572 182 444 q 311 912 182 782 q 651 1042 441 1042 q 989 910 858 1042 q 1120 569 1120 778 q 1066 326 1120 443 q 917 124 1013 210 l 1136 124 l 1136 0 m 277 1040 l 83 800 l 0 800 l 140 1041 l 277 1040 "},"_":{"x_min":0,"x_max":705.5625,"ha":803,"o":"m 705 -334 l 0 -334 l 0 -234 l 705 -234 l 705 -334 "},"Ϊ":{"x_min":-110,"x_max":246,"ha":275,"o":"m 246 1046 l 118 1046 l 118 1189 l 246 1189 l 246 1046 m 18 1046 l -110 1046 l -110 1189 l 18 1189 l 18 1046 m 136 0 l 0 0 l 0 1012 l 136 1012 l 136 0 "},"+":{"x_min":23,"x_max":768,"ha":792,"o":"m 768 372 l 444 372 l 444 0 l 347 0 l 347 372 l 23 372 l 23 468 l 347 468 l 347 840 l 444 840 l 444 468 l 768 468 l 768 372 "},"½":{"x_min":0,"x_max":1050,"ha":1149,"o":"m 1050 0 l 625 0 q 712 178 625 108 q 878 277 722 187 q 967 385 967 328 q 932 456 967 429 q 850 484 897 484 q 759 450 798 484 q 721 352 721 416 l 640 352 q 706 502 640 448 q 851 551 766 551 q 987 509 931 551 q 1050 385 1050 462 q 976 251 1050 301 q 829 179 902 215 q 717 68 740 133 l 1050 68 l 1050 0 m 834 985 l 215 -28 l 130 -28 l 750 984 l 834 985 m 224 422 l 142 422 l 142 811 l 0 811 l 0 867 q 104 889 62 867 q 164 973 157 916 l 224 973 l 224 422 "},"Ρ":{"x_min":0,"x_max":720,"ha":783,"o":"m 424 1013 q 637 933 554 1013 q 720 723 720 853 q 633 508 720 591 q 413 426 546 426 l 140 426 l 140 0 l 0 0 l 0 1013 l 424 1013 m 378 889 l 140 889 l 140 548 l 371 548 q 521 589 458 548 q 592 720 592 637 q 527 845 592 801 q 378 889 463 889 "},"'":{"x_min":0,"x_max":139,"ha":236,"o":"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 "},"ª":{"x_min":0,"x_max":350,"ha":397,"o":"m 350 625 q 307 616 328 616 q 266 631 281 616 q 247 673 251 645 q 190 628 225 644 q 116 613 156 613 q 32 641 64 613 q 0 722 0 669 q 72 826 0 800 q 247 866 159 846 l 247 887 q 220 934 247 916 q 162 953 194 953 q 104 934 129 953 q 76 882 80 915 l 16 882 q 60 976 16 941 q 166 1011 104 1011 q 266 979 224 1011 q 308 891 308 948 l 308 706 q 311 679 308 688 q 331 670 315 670 l 350 672 l 350 625 m 247 757 l 247 811 q 136 790 175 798 q 64 726 64 773 q 83 682 64 697 q 132 667 103 667 q 207 690 174 667 q 247 757 247 718 "},"΅":{"x_min":0,"x_max":450,"ha":553,"o":"m 450 800 l 340 800 l 340 925 l 450 925 l 450 800 m 406 1040 l 212 800 l 129 800 l 269 1040 l 406 1040 m 110 800 l 0 800 l 0 925 l 110 925 l 110 800 "},"T":{"x_min":0,"x_max":777,"ha":835,"o":"m 777 894 l 458 894 l 458 0 l 319 0 l 319 894 l 0 894 l 0 1013 l 777 1013 l 777 894 "},"Φ":{"x_min":0,"x_max":915,"ha":997,"o":"m 527 0 l 389 0 l 389 122 q 110 231 220 122 q 0 509 0 340 q 110 785 0 677 q 389 893 220 893 l 389 1013 l 527 1013 l 527 893 q 804 786 693 893 q 915 509 915 679 q 805 231 915 341 q 527 122 696 122 l 527 0 m 527 226 q 712 310 641 226 q 779 507 779 389 q 712 705 779 627 q 527 787 641 787 l 527 226 m 389 226 l 389 787 q 205 698 275 775 q 136 505 136 620 q 206 308 136 391 q 389 226 276 226 "},"⁋":{"x_min":0,"x_max":0,"ha":694},"j":{"x_min":-77.78125,"x_max":167,"ha":349,"o":"m 167 871 l 42 871 l 42 1013 l 167 1013 l 167 871 m 167 -80 q 121 -231 167 -184 q -26 -278 76 -278 l -77 -278 l -77 -164 l -41 -164 q 26 -143 11 -164 q 42 -65 42 -122 l 42 737 l 167 737 l 167 -80 "},"Σ":{"x_min":0,"x_max":756.953125,"ha":819,"o":"m 756 0 l 0 0 l 0 107 l 395 523 l 22 904 l 22 1013 l 745 1013 l 745 889 l 209 889 l 566 523 l 187 125 l 756 125 l 756 0 "},"1":{"x_min":215.671875,"x_max":574,"ha":792,"o":"m 574 0 l 442 0 l 442 697 l 215 697 l 215 796 q 386 833 330 796 q 475 986 447 875 l 574 986 l 574 0 "},"›":{"x_min":18.0625,"x_max":774,"ha":792,"o":"m 774 376 l 18 40 l 18 149 l 631 421 l 18 692 l 18 799 l 774 465 l 774 376 "},"<":{"x_min":17.984375,"x_max":773.609375,"ha":792,"o":"m 773 40 l 18 376 l 17 465 l 773 799 l 773 692 l 159 420 l 773 149 l 773 40 "},"£":{"x_min":0,"x_max":704.484375,"ha":801,"o":"m 704 41 q 623 -10 664 5 q 543 -26 583 -26 q 359 15 501 -26 q 243 36 288 36 q 158 23 197 36 q 73 -21 119 10 l 6 76 q 125 195 90 150 q 175 331 175 262 q 147 443 175 383 l 0 443 l 0 512 l 108 512 q 43 734 43 623 q 120 929 43 854 q 358 1010 204 1010 q 579 936 487 1010 q 678 729 678 857 l 678 684 l 552 684 q 504 838 552 780 q 362 896 457 896 q 216 852 263 896 q 176 747 176 815 q 199 627 176 697 q 248 512 217 574 l 468 512 l 468 443 l 279 443 q 297 356 297 398 q 230 194 297 279 q 153 107 211 170 q 227 133 190 125 q 293 142 264 142 q 410 119 339 142 q 516 96 482 96 q 579 105 550 96 q 648 142 608 115 l 704 41 "},"t":{"x_min":0,"x_max":367,"ha":458,"o":"m 367 0 q 312 -5 339 -2 q 262 -8 284 -8 q 145 28 183 -8 q 108 143 108 64 l 108 638 l 0 638 l 0 738 l 108 738 l 108 944 l 232 944 l 232 738 l 367 738 l 367 638 l 232 638 l 232 185 q 248 121 232 140 q 307 102 264 102 q 345 104 330 102 q 367 107 360 107 l 367 0 "},"¬":{"x_min":0,"x_max":706,"ha":803,"o":"m 706 411 l 706 158 l 630 158 l 630 335 l 0 335 l 0 411 l 706 411 "},"λ":{"x_min":0,"x_max":750,"ha":803,"o":"m 750 -7 q 679 -15 716 -15 q 538 59 591 -15 q 466 214 512 97 l 336 551 l 126 0 l 0 0 l 270 705 q 223 837 247 770 q 116 899 190 899 q 90 898 100 899 l 90 1004 q 152 1011 125 1011 q 298 938 244 1011 q 373 783 326 901 l 605 192 q 649 115 629 136 q 716 95 669 95 l 736 95 q 750 97 745 97 l 750 -7 "},"W":{"x_min":0,"x_max":1263.890625,"ha":1351,"o":"m 1263 1013 l 995 0 l 859 0 l 627 837 l 405 0 l 265 0 l 0 1013 l 136 1013 l 342 202 l 556 1013 l 701 1013 l 921 207 l 1133 1012 l 1263 1013 "},">":{"x_min":18.0625,"x_max":774,"ha":792,"o":"m 774 376 l 18 40 l 18 149 l 631 421 l 18 692 l 18 799 l 774 465 l 774 376 "},"v":{"x_min":0,"x_max":675.15625,"ha":761,"o":"m 675 738 l 404 0 l 272 0 l 0 738 l 133 737 l 340 147 l 541 737 l 675 738 "},"τ":{"x_min":0.28125,"x_max":644.5,"ha":703,"o":"m 644 628 l 382 628 l 382 179 q 388 120 382 137 q 436 91 401 91 q 474 94 447 91 q 504 97 501 97 l 504 0 q 454 -9 482 -5 q 401 -14 426 -14 q 278 67 308 -14 q 260 233 260 118 l 260 628 l 0 628 l 0 739 l 644 739 l 644 628 "},"ξ":{"x_min":0,"x_max":624.9375,"ha":699,"o":"m 624 -37 q 608 -153 624 -96 q 563 -278 593 -211 l 454 -278 q 491 -183 486 -200 q 511 -83 511 -126 q 484 -23 511 -44 q 370 1 452 1 q 323 0 354 1 q 283 -1 293 -1 q 84 76 169 -1 q 0 266 0 154 q 56 431 0 358 q 197 538 108 498 q 94 613 134 562 q 54 730 54 665 q 77 823 54 780 q 143 901 101 867 l 27 901 l 27 1012 l 576 1012 l 576 901 l 380 901 q 244 863 303 901 q 178 745 178 820 q 312 600 178 636 q 532 582 380 582 l 532 479 q 276 455 361 479 q 118 281 118 410 q 165 173 118 217 q 274 120 208 133 q 494 101 384 110 q 624 -37 624 76 "},"&":{"x_min":-3,"x_max":894.25,"ha":992,"o":"m 894 0 l 725 0 l 624 123 q 471 0 553 40 q 306 -41 390 -41 q 168 -7 231 -41 q 62 92 105 26 q 14 187 31 139 q -3 276 -3 235 q 55 433 -3 358 q 248 581 114 508 q 170 689 196 640 q 137 817 137 751 q 214 985 137 922 q 384 1041 284 1041 q 548 988 483 1041 q 622 824 622 928 q 563 666 622 739 q 431 556 516 608 l 621 326 q 649 407 639 361 q 663 493 653 426 l 781 493 q 703 229 781 352 l 894 0 m 504 818 q 468 908 504 877 q 384 940 433 940 q 293 907 331 940 q 255 818 255 875 q 289 714 255 767 q 363 628 313 678 q 477 729 446 682 q 504 818 504 771 m 556 209 l 314 499 q 179 395 223 449 q 135 283 135 341 q 146 222 135 253 q 183 158 158 192 q 333 80 241 80 q 556 209 448 80 "},"Λ":{"x_min":0,"x_max":862.5,"ha":942,"o":"m 862 0 l 719 0 l 426 847 l 143 0 l 0 0 l 356 1013 l 501 1013 l 862 0 "},"I":{"x_min":41,"x_max":180,"ha":293,"o":"m 180 0 l 41 0 l 41 1013 l 180 1013 l 180 0 "},"G":{"x_min":0,"x_max":921,"ha":1011,"o":"m 921 0 l 832 0 l 801 136 q 655 15 741 58 q 470 -28 568 -28 q 126 133 259 -28 q 0 499 0 284 q 125 881 0 731 q 486 1043 259 1043 q 763 957 647 1043 q 905 709 890 864 l 772 709 q 668 866 747 807 q 486 926 589 926 q 228 795 322 926 q 142 507 142 677 q 228 224 142 342 q 483 94 323 94 q 712 195 625 94 q 796 435 796 291 l 477 435 l 477 549 l 921 549 l 921 0 "},"ΰ":{"x_min":0,"x_max":617,"ha":725,"o":"m 524 800 l 414 800 l 414 925 l 524 925 l 524 800 m 183 800 l 73 800 l 73 925 l 183 925 l 183 800 m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 m 489 1040 l 300 819 l 216 819 l 351 1040 l 489 1040 "},"`":{"x_min":0,"x_max":138.890625,"ha":236,"o":"m 138 699 l 0 699 l 0 861 q 36 974 0 929 q 138 1041 72 1020 l 138 977 q 82 931 95 969 q 69 839 69 893 l 138 839 l 138 699 "},"·":{"x_min":0,"x_max":142,"ha":239,"o":"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 "},"Υ":{"x_min":0.328125,"x_max":819.515625,"ha":889,"o":"m 819 1013 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1013 l 140 1013 l 411 533 l 679 1013 l 819 1013 "},"r":{"x_min":0,"x_max":355.5625,"ha":432,"o":"m 355 621 l 343 621 q 179 569 236 621 q 122 411 122 518 l 122 0 l 0 0 l 0 737 l 117 737 l 117 604 q 204 719 146 686 q 355 753 262 753 l 355 621 "},"x":{"x_min":0,"x_max":675,"ha":764,"o":"m 675 0 l 525 0 l 331 286 l 144 0 l 0 0 l 256 379 l 12 738 l 157 737 l 336 473 l 516 738 l 661 738 l 412 380 l 675 0 "},"μ":{"x_min":0,"x_max":696.609375,"ha":747,"o":"m 696 -4 q 628 -14 657 -14 q 498 97 513 -14 q 422 8 470 41 q 313 -24 374 -24 q 207 3 258 -24 q 120 80 157 31 l 120 -278 l 0 -278 l 0 738 l 124 738 l 124 343 q 165 172 124 246 q 308 82 216 82 q 451 177 402 82 q 492 358 492 254 l 492 738 l 616 738 l 616 214 q 623 136 616 160 q 673 92 636 92 q 696 95 684 92 l 696 -4 "},"h":{"x_min":0,"x_max":615,"ha":724,"o":"m 615 472 l 615 0 l 490 0 l 490 454 q 456 590 490 535 q 338 654 416 654 q 186 588 251 654 q 122 436 122 522 l 122 0 l 0 0 l 0 1013 l 122 1013 l 122 633 q 218 727 149 694 q 362 760 287 760 q 552 676 484 760 q 615 472 615 600 "},".":{"x_min":0,"x_max":142,"ha":239,"o":"m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 "},"φ":{"x_min":-2,"x_max":878,"ha":974,"o":"m 496 -279 l 378 -279 l 378 -17 q 101 88 204 -17 q -2 367 -2 194 q 68 626 -2 510 q 283 758 151 758 l 283 646 q 167 537 209 626 q 133 373 133 462 q 192 177 133 254 q 378 93 259 93 l 378 758 q 445 764 426 763 q 476 765 464 765 q 765 659 653 765 q 878 377 878 553 q 771 96 878 209 q 496 -17 665 -17 l 496 -279 m 496 93 l 514 93 q 687 183 623 93 q 746 380 746 265 q 691 569 746 491 q 522 658 629 658 l 496 656 l 496 93 "},";":{"x_min":0,"x_max":142,"ha":239,"o":"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 m 142 -12 q 105 -132 142 -82 q 0 -206 68 -182 l 0 -138 q 58 -82 43 -123 q 68 0 68 -56 l 0 0 l 0 151 l 142 151 l 142 -12 "},"f":{"x_min":0,"x_max":378,"ha":472,"o":"m 378 638 l 246 638 l 246 0 l 121 0 l 121 638 l 0 638 l 0 738 l 121 738 q 137 935 121 887 q 290 1028 171 1028 q 320 1027 305 1028 q 378 1021 334 1026 l 378 908 q 323 918 346 918 q 257 870 273 918 q 246 780 246 840 l 246 738 l 378 738 l 378 638 "},"“":{"x_min":1,"x_max":348.21875,"ha":454,"o":"m 140 670 l 1 670 l 1 830 q 37 943 1 897 q 140 1011 74 990 l 140 947 q 82 900 97 940 q 68 810 68 861 l 140 810 l 140 670 m 348 670 l 209 670 l 209 830 q 245 943 209 897 q 348 1011 282 990 l 348 947 q 290 900 305 940 q 276 810 276 861 l 348 810 l 348 670 "},"A":{"x_min":0.03125,"x_max":906.953125,"ha":1008,"o":"m 906 0 l 756 0 l 648 303 l 251 303 l 142 0 l 0 0 l 376 1013 l 529 1013 l 906 0 m 610 421 l 452 867 l 293 421 l 610 421 "},"6":{"x_min":53,"x_max":739,"ha":792,"o":"m 739 312 q 633 62 739 162 q 400 -31 534 -31 q 162 78 257 -31 q 53 439 53 206 q 178 859 53 712 q 441 986 284 986 q 643 912 559 986 q 732 713 732 833 l 601 713 q 544 830 594 786 q 426 875 494 875 q 268 793 331 875 q 193 517 193 697 q 301 597 240 570 q 427 624 362 624 q 643 540 552 624 q 739 312 739 451 m 603 298 q 540 461 603 400 q 404 516 484 516 q 268 461 323 516 q 207 300 207 401 q 269 137 207 198 q 405 83 325 83 q 541 137 486 83 q 603 298 603 197 "},"‘":{"x_min":1,"x_max":139.890625,"ha":236,"o":"m 139 670 l 1 670 l 1 830 q 37 943 1 897 q 139 1011 74 990 l 139 947 q 82 900 97 940 q 68 810 68 861 l 139 810 l 139 670 "},"ϊ":{"x_min":-70,"x_max":283,"ha":361,"o":"m 283 800 l 173 800 l 173 925 l 283 925 l 283 800 m 40 800 l -70 800 l -70 925 l 40 925 l 40 800 m 283 3 q 232 -10 257 -5 q 181 -15 206 -15 q 84 26 118 -15 q 41 200 41 79 l 41 737 l 166 737 l 167 215 q 171 141 167 157 q 225 101 182 101 q 247 103 238 101 q 283 112 256 104 l 283 3 "},"π":{"x_min":-0.21875,"x_max":773.21875,"ha":857,"o":"m 773 -7 l 707 -11 q 575 40 607 -11 q 552 174 552 77 l 552 226 l 552 626 l 222 626 l 222 0 l 97 0 l 97 626 l 0 626 l 0 737 l 773 737 l 773 626 l 676 626 l 676 171 q 695 103 676 117 q 773 90 714 90 l 773 -7 "},"ά":{"x_min":0,"x_max":765.5625,"ha":809,"o":"m 765 -4 q 698 -14 726 -14 q 564 97 586 -14 q 466 7 525 40 q 337 -26 407 -26 q 88 98 186 -26 q 0 369 0 212 q 88 637 0 525 q 337 760 184 760 q 465 727 407 760 q 563 637 524 695 l 563 738 l 685 738 l 685 222 q 693 141 685 168 q 748 94 708 94 q 765 95 760 94 l 765 -4 m 584 371 q 531 562 584 485 q 360 653 470 653 q 192 566 254 653 q 135 379 135 489 q 186 181 135 261 q 358 84 247 84 q 528 176 465 84 q 584 371 584 260 m 604 1040 l 415 819 l 332 819 l 466 1040 l 604 1040 "},"O":{"x_min":0,"x_max":958,"ha":1057,"o":"m 485 1041 q 834 882 702 1041 q 958 512 958 734 q 834 136 958 287 q 481 -26 702 -26 q 126 130 261 -26 q 0 504 0 279 q 127 880 0 728 q 485 1041 263 1041 m 480 98 q 731 225 638 98 q 815 504 815 340 q 733 783 815 669 q 480 912 640 912 q 226 784 321 912 q 142 504 142 670 q 226 224 142 339 q 480 98 319 98 "},"n":{"x_min":0,"x_max":615,"ha":724,"o":"m 615 463 l 615 0 l 490 0 l 490 454 q 453 592 490 537 q 331 656 410 656 q 178 585 240 656 q 117 421 117 514 l 117 0 l 0 0 l 0 738 l 117 738 l 117 630 q 218 728 150 693 q 359 764 286 764 q 552 675 484 764 q 615 463 615 593 "},"3":{"x_min":54,"x_max":737,"ha":792,"o":"m 737 284 q 635 55 737 141 q 399 -25 541 -25 q 156 52 248 -25 q 54 308 54 140 l 185 308 q 245 147 185 202 q 395 96 302 96 q 539 140 484 96 q 602 280 602 190 q 510 429 602 390 q 324 454 451 454 l 324 565 q 487 584 441 565 q 565 719 565 617 q 515 835 565 791 q 395 879 466 879 q 255 824 307 879 q 203 661 203 769 l 78 661 q 166 909 78 822 q 387 992 250 992 q 603 921 513 992 q 701 723 701 844 q 669 607 701 656 q 578 524 637 558 q 696 434 655 499 q 737 284 737 369 "},"9":{"x_min":53,"x_max":739,"ha":792,"o":"m 739 524 q 619 94 739 241 q 362 -32 516 -32 q 150 47 242 -32 q 59 244 59 126 l 191 244 q 246 129 191 176 q 373 82 301 82 q 526 161 466 82 q 597 440 597 255 q 363 334 501 334 q 130 432 216 334 q 53 650 53 521 q 134 880 53 786 q 383 986 226 986 q 659 841 566 986 q 739 524 739 719 m 388 449 q 535 514 480 449 q 585 658 585 573 q 535 805 585 744 q 388 873 480 873 q 242 809 294 873 q 191 658 191 745 q 239 514 191 572 q 388 449 292 449 "},"l":{"x_min":41,"x_max":166,"ha":279,"o":"m 166 0 l 41 0 l 41 1013 l 166 1013 l 166 0 "},"¤":{"x_min":40.09375,"x_max":728.796875,"ha":825,"o":"m 728 304 l 649 224 l 512 363 q 383 331 458 331 q 256 363 310 331 l 119 224 l 40 304 l 177 441 q 150 553 150 493 q 184 673 150 621 l 40 818 l 119 898 l 267 749 q 321 766 291 759 q 384 773 351 773 q 447 766 417 773 q 501 749 477 759 l 649 898 l 728 818 l 585 675 q 612 618 604 648 q 621 553 621 587 q 591 441 621 491 l 728 304 m 384 682 q 280 643 318 682 q 243 551 243 604 q 279 461 243 499 q 383 423 316 423 q 487 461 449 423 q 525 553 525 500 q 490 641 525 605 q 384 682 451 682 "},"κ":{"x_min":0,"x_max":632.328125,"ha":679,"o":"m 632 0 l 482 0 l 225 384 l 124 288 l 124 0 l 0 0 l 0 738 l 124 738 l 124 446 l 433 738 l 596 738 l 312 466 l 632 0 "},"4":{"x_min":48,"x_max":742.453125,"ha":792,"o":"m 742 243 l 602 243 l 602 0 l 476 0 l 476 243 l 48 243 l 48 368 l 476 958 l 602 958 l 602 354 l 742 354 l 742 243 m 476 354 l 476 792 l 162 354 l 476 354 "},"p":{"x_min":0,"x_max":685,"ha":786,"o":"m 685 364 q 598 96 685 205 q 350 -23 504 -23 q 121 89 205 -23 l 121 -278 l 0 -278 l 0 738 l 121 738 l 121 633 q 220 726 159 691 q 351 761 280 761 q 598 636 504 761 q 685 364 685 522 m 557 371 q 501 560 557 481 q 330 651 437 651 q 162 559 223 651 q 108 366 108 479 q 162 177 108 254 q 333 87 224 87 q 502 178 441 87 q 557 371 557 258 "},"‡":{"x_min":0,"x_max":777,"ha":835,"o":"m 458 238 l 458 0 l 319 0 l 319 238 l 0 238 l 0 360 l 319 360 l 319 681 l 0 683 l 0 804 l 319 804 l 319 1015 l 458 1013 l 458 804 l 777 804 l 777 683 l 458 683 l 458 360 l 777 360 l 777 238 l 458 238 "},"ψ":{"x_min":0,"x_max":808,"ha":907,"o":"m 465 -278 l 341 -278 l 341 -15 q 87 102 180 -15 q 0 378 0 210 l 0 739 l 133 739 l 133 379 q 182 195 133 275 q 341 98 242 98 l 341 922 l 465 922 l 465 98 q 623 195 563 98 q 675 382 675 278 l 675 742 l 808 742 l 808 381 q 720 104 808 213 q 466 -13 627 -13 l 465 -278 "},"η":{"x_min":0.78125,"x_max":697,"ha":810,"o":"m 697 -278 l 572 -278 l 572 454 q 540 587 572 536 q 425 650 501 650 q 271 579 337 650 q 206 420 206 509 l 206 0 l 81 0 l 81 489 q 73 588 81 562 q 0 644 56 644 l 0 741 q 68 755 38 755 q 158 720 124 755 q 200 630 193 686 q 297 726 234 692 q 434 761 359 761 q 620 692 544 761 q 697 516 697 624 l 697 -278 "}},"cssFontWeight":"normal","ascender":1189,"underlinePosition":-100,"cssFontStyle":"normal","boundingBox":{"yMin":-334,"xMin":-111,"yMax":1189,"xMax":1672},"resolution":1000,"original_font_information":{"postscript_name":"Helvetiker-Regular","version_string":"Version 1.00 2004 initial release","vendor_url":"http:\/\/www.magenta.gr\/","full_font_name":"Helvetiker","font_family_name":"Helvetiker","copyright":"Copyright (c) Μagenta ltd, 2004","description":"","trademark":"","designer":"","designer_url":"","unique_font_identifier":"Μagenta ltd:Helvetiker:22-10-104","license_url":"http:\/\/www.ellak.gr\/fonts\/MgOpen\/license.html","license_description":"Copyright (c) 2004 by MAGENTA Ltd. All Rights Reserved.\\r\\n\\r\\nPermission is hereby granted, free of charge, to any person obtaining a copy of the fonts accompanying this license (\\"Fonts\\") and associated documentation files (the \\"Font Software\\"), to reproduce and distribute the Font Software, including without limitation the rights to use, copy, merge, publish, distribute, and\/or sell copies of the Font Software, and to permit persons to whom the Font Software is furnished to do so, subject to the following conditions: \\r\\n\\r\\nThe above copyright and this permission notice shall be included in all copies of one or more of the Font Software typefaces.\\r\\n\\r\\nThe Font Software may be modified, altered, or added to, and in particular the designs of glyphs or characters in the Fonts may be modified and additional glyphs or characters may be added to the Fonts, only if the fonts are renamed to names not containing the word \\"MgOpen\\", or if the modifications are accepted for inclusion in the Font Software itself by the each appointed Administrator.\\r\\n\\r\\nThis License becomes null and void to the extent applicable to Fonts or Font Software that has been modified and is distributed under the \\"MgOpen\\" name.\\r\\n\\r\\nThe Font Software may be sold as part of a larger software package but no copy of one or more of the Font Software typefaces may be sold by itself. \\r\\n\\r\\nTHE FONT SOFTWARE IS PROVIDED \\"AS IS\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL MAGENTA OR PERSONS OR BODIES IN CHARGE OF ADMINISTRATION AND MAINTENANCE OF THE FONT SOFTWARE BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM OTHER DEALINGS IN THE FONT SOFTWARE.","manufacturer_name":"Μagenta ltd","font_sub_family_name":"Regular"},"descender":-334,"familyName":"Helvetiker","lineHeight":1522,"underlineThickness":50});/;"	r
0	js/libs/dat.gui.min.js	/^".dg ul{list-style:none;margin:0;padding:0;width:100%;clear:both}.dg.ac{position:fixed;top:0;left:0;right:0;height:0;z-index:0}.dg:not(.ac) .main{overflow:hidden}.dg.main{-webkit-transition:opacity 0.1s linear;-o-transition:opacity 0.1s linear;-moz-transition:opacity 0.1s linear;transition:opacity 0.1s linear}.dg.main.taller-than-window{overflow-y:auto}.dg.main.taller-than-window .close-button{opacity:1;margin-top:-1px;border-top:1px solid #2c2c2c}.dg.main ul.closed .close-button{opacity:1 !important}.dg.main:hover .close-button,.dg.main .close-button.drag{opacity:1}.dg.main .close-button{-webkit-transition:opacity 0.1s linear;-o-transition:opacity 0.1s linear;-moz-transition:opacity 0.1s linear;transition:opacity 0.1s linear;border:0;position:absolute;line-height:19px;height:20px;cursor:pointer;text-align:center;background-color:#000}.dg.main .close-button:hover{background-color:#111}.dg.a{float:right;margin-right:15px;overflow-x:hidden}.dg.a.has-save ul{margin-top:27px}.dg.a.has-save ul.closed{margin-top:0}.dg.a .save-row{position:fixed;top:0;z-index:1002}.dg li{-webkit-transition:height 0.1s ease-out;-o-transition:height 0.1s ease-out;-moz-transition:height 0.1s ease-out;transition:height 0.1s ease-out}.dg li:not(.folder){cursor:auto;height:27px;line-height:27px;overflow:hidden;padding:0 4px 0 5px}.dg li.folder{padding:0;border-left:4px solid rgba(0,0,0,0)}.dg li.title{cursor:pointer;margin-left:-4px}.dg .closed li:not(.title),.dg .closed ul li,.dg .closed ul li > *{height:0;overflow:hidden;border:0}.dg .cr{clear:both;padding-left:3px;height:27px}.dg .property-name{cursor:default;float:left;clear:left;width:40%;overflow:hidden;text-overflow:ellipsis}.dg .c{float:left;width:60%}.dg .c input[type=text]{border:0;margin-top:4px;padding:3px;width:100%;float:right}.dg .has-slider input[type=text]{width:30%;margin-left:0}.dg .slider{float:left;width:66%;margin-left:-5px;margin-right:0;height:19px;margin-top:4px}.dg .slider-fg{height:100%}.dg .c input[type=checkbox]{margin-top:9px}.dg .c select{margin-top:5px}.dg .cr.function,.dg .cr.function .property-name,.dg .cr.function *,.dg .cr.boolean,.dg .cr.boolean *{cursor:pointer}.dg .selector{display:none;position:absolute;margin-left:-9px;margin-top:23px;z-index:10}.dg .c:hover .selector,.dg .selector.drag{display:block}.dg li.save-row{padding:0}.dg li.save-row .button{display:inline-block;padding:0px 6px}.dg.dialogue{background-color:#222;width:460px;padding:15px;font-size:13px;line-height:15px}#dg-new-constructor{padding:10px;color:#222;font-family:Monaco, monospace;font-size:10px;border:0;resize:none;box-shadow:inset 1px 1px 1px #888;word-wrap:break-word;margin:12px 0;display:block;width:440px;overflow-y:scroll;height:100px;position:relative}#dg-local-explain{display:none;font-size:11px;line-height:17px;border-radius:3px;background-color:#333;padding:8px;margin-top:10px}#dg-local-explain code{font-size:10px}#dat-gui-save-locally{display:none}.dg{color:#eee;font:11px 'Lucida Grande', sans-serif;text-shadow:0 -1px 0 #111}.dg.main::-webkit-scrollbar{width:5px;background:#1a1a1a}.dg.main::-webkit-scrollbar-corner{height:0;display:none}.dg.main::-webkit-scrollbar-thumb{border-radius:5px;background:#676767}.dg li:not(.folder){background:#1a1a1a;border-bottom:1px solid #2c2c2c}.dg li.save-row{line-height:25px;background:#dad5cb;border:0}.dg li.save-row select{margin-left:5px;width:108px}.dg li.save-row .button{margin-left:5px;margin-top:1px;border-radius:2px;font-size:9px;line-height:7px;padding:4px 4px 5px 4px;background:#c5bdad;color:#fff;text-shadow:0 1px 0 #b0a58f;box-shadow:0 -1px 0 #b0a58f;cursor:pointer}.dg li.save-row .button.gears{background:#c5bdad url(data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAAsAAAANCAYAAAB\/9ZQ7AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAQJJREFUeNpiYKAU\/P\/\/PwGIC\/ApCABiBSAW+I8AClAcgKxQ4T9hoMAEUrxx2QSGN6+egDX+\/vWT4e7N82AMYoPAx\/evwWoYoSYbACX2s7KxCxzcsezDh3evFoDEBYTEEqycggWAzA9AuUSQQgeYPa9fPv6\/YWm\/Acx5IPb7ty\/fw+QZblw67vDs8R0YHyQhgObx+yAJkBqmG5dPPDh1aPOGR\/eugW0G4vlIoTIfyFcA+QekhhHJhPdQxbiAIguMBTQZrPD7108M6roWYDFQiIAAv6Aow\/1bFwXgis+f2LUAynwoIaNcz8XNx3Dl7MEJUDGQpx9gtQ8YCueB+D26OECAAQDadt7e46D42QAAAABJRU5ErkJggg==) 2px 1px no-repeat;height:7px;width:8px}.dg li.save-row .button:hover{background-color:#bab19e;box-shadow:0 -1px 0 #b0a58f}.dg li.folder{border-bottom:0}.dg li.title{padding-left:16px;background:#000 url(data:image\/gif;base64,R0lGODlhBQAFAJEAAP\/\/\/\/Pz8\/\/\/\/\/\/\/\/yH5BAEAAAIALAAAAAAFAAUAAAIIlI+hKgFxoCgAOw==) 6px 10px no-repeat;cursor:pointer;border-bottom:1px solid rgba(255,255,255,0.2)}.dg .closed li.title{background-image:url(data:image\/gif;base64,R0lGODlhBQAFAJEAAP\/\/\/\/Pz8\/\/\/\/\/\/\/\/yH5BAEAAAIALAAAAAAFAAUAAAIIlGIWqMCbWAEAOw==)}.dg .cr.boolean{border-left:3px solid #806787}.dg .cr.function{border-left:3px solid #e61d5f}.dg .cr.number{border-left:3px solid #2fa1d6}.dg .cr.number input[type=text]{color:#2fa1d6}.dg .cr.string{border-left:3px solid #1ed36f}.dg .cr.string input[type=text]{color:#1ed36f}.dg .cr.function:hover,.dg .cr.boolean:hover{background:#111}.dg .c input[type=text]{background:#303030;outline:none}.dg .c input[type=text]:hover{background:#3c3c3c}.dg .c input[type=text]:focus{background:#494949;color:#fff}.dg .c .slider{background:#303030;cursor:ew-resize}.dg .c .slider-fg{background:#2fa1d6}.dg .c .slider:hover{background:#3c3c3c}.dg .c .slider:hover .slider-fg{background:#44abda}\\n",$/;"	r
0	js/libs/dat.gui.min.js	/^(this.getValue()-this.__min)\/(this.__max-this.__min)*100+"%";return b.superclass.prototype.updateDisplay.call(this)}});return b}(dat.controllers.NumberController,dat.dom.dom,dat.utils.css,dat.utils.common,".slider {\\n  box-shadow: inset 0 2px 4px rgba(0,0,0,0.15);\\n  height: 1em;\\n  border-radius: 1em;\\n  background-color: #eee;\\n  padding: 0 0.5em;\\n  overflow: hidden;\\n}\\n\\n.slider-fg {\\n  padding: 1px 0 2px 0;\\n  background-color: #aaa;\\n  height: 1em;\\n  margin-left: -0.5em;\\n  padding-right: 0.5em;\\n  border-radius: 1em 0 0 1em;\\n}\\n\\n.slider-fg:after {\\n  display: inline-block;\\n  border-radius: 1em;\\n  background-color: #fff;\\n  border:  1px solid #aaa;\\n  content: '';\\n  float: right;\\n  margin-right: -1em;\\n  margin-top: -1px;\\n  height: 0.9em;\\n  width: 0.9em;\\n}");$/;"	r
0	js/libs/dat.gui.min.js	/^0,false,false,false,false,0,null);break;case "KeyboardEvents":m=l.initKeyboardEvent||l.initKeyEvent;e.defaults(d,{cancelable:true,ctrlKey:false,altKey:false,shiftKey:false,metaKey:false,keyCode:void 0,charCode:void 0});m(a,d.bubbles||false,d.cancelable,window,d.ctrlKey,d.altKey,d.shiftKey,d.metaKey,d.keyCode,d.charCode);break;default:l.initEvent(a,d.bubbles||false,d.cancelable||true)}e.defaults(l,f);b.dispatchEvent(l)},bind:function(b,a,d,c){b.addEventListener?b.addEventListener(a,d,c||false):b.attachEvent&&$/;"	r
0	js/libs/dat.gui.min.js	/^0;this.domElement.style.webkitTransform="scale(1.1)";this.layout();a.defer(function(){c.backgroundElement.style.opacity=1;c.domElement.style.opacity=1;c.domElement.style.webkitTransform="scale(1)"})};c.prototype.hide=function(){var a=this,c=function(){a.domElement.style.display="none";a.backgroundElement.style.display="none";e.unbind(a.domElement,"webkitTransitionEnd",c);e.unbind(a.domElement,"transitionend",c);e.unbind(a.domElement,"oTransitionEnd",c)};e.bind(this.domElement,"webkitTransitionEnd",$/;"	r
0	js/libs/dat.gui.min.js	/^document.createElement("input");this.__input.type="text";this.__input_textShadow="0 1px 1px ";a.bind(this.__input,"keydown",function(a){a.keyCode===13&&g.call(this)});a.bind(this.__input,"blur",g);a.bind(this.__selector,"mousedown",function(){a.addClass(this,"drag").bind(window,"mouseup",function(){a.removeClass(p.__selector,"drag")})});var t=document.createElement("div");f.extend(this.__selector.style,{width:"122px",height:"102px",padding:"3px",backgroundColor:"#222",boxShadow:"0px 1px 3px rgba(0,0,0,0.3)"});$/;"	r
0	js/libs/dat.gui.min.js	/^f.extend(this.__field_knob.style,{position:"absolute",width:"12px",height:"12px",border:this.__field_knob_border+(this.__color.v<0.5?"#fff":"#000"),boxShadow:"0px 1px 3px rgba(0,0,0,0.5)",borderRadius:"12px",zIndex:1});f.extend(this.__hue_knob.style,{position:"absolute",width:"15px",height:"2px",borderRight:"4px solid #fff",zIndex:1});f.extend(this.__saturation_field.style,{width:"100px",height:"100px",border:"1px solid #555",marginRight:"3px",display:"inline-block",cursor:"pointer"});f.extend(t.style,$/;"	r
0	js/libs/dat.gui.min.js	/^window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e){window.setTimeout(e,1E3\/60)}}(),dat.dom.CenteredDiv=function(e,a){var c=function(){this.backgroundElement=document.createElement("div");a.extend(this.backgroundElement.style,{backgroundColor:"rgba(0,0,0,0.8)",top:0,left:0,display:"none",zIndex:"1000",opacity:0,WebkitTransition:"opacity 0.2s linear"});e.makeFullscreen(this.backgroundElement);this.backgroundElement.style.position="fixed";this.domElement=$/;"	r
0	js/libs/dat.gui.min.js	/^{width:"100%",height:"100%",background:"none"});b(t,"top","rgba(0,0,0,0)","#000");f.extend(this.__hue_field.style,{width:"15px",height:"100px",display:"inline-block",border:"1px solid #555",cursor:"ns-resize"});n(this.__hue_field);f.extend(this.__input.style,{outline:"none",textAlign:"center",color:"#fff",border:0,fontWeight:"bold",textShadow:this.__input_textShadow+"rgba(0,0,0,0.7)"});a.bind(this.__saturation_field,"mousedown",o);a.bind(this.__field_knob,"mousedown",o);a.bind(this.__hue_field,"mousedown",$/;"	r
BooleanController	js/libs/dat.gui.min.js	/^dat.controllers.BooleanController=function(e,a,c){var d=function(c,b){d.superclass.call(this,c,b);var e=this;this.__prev=this.getValue();this.__checkbox=document.createElement("input");this.__checkbox.setAttribute("type","checkbox");a.bind(this.__checkbox,"change",function(){e.setValue(!e.__prev)},false);this.domElement.appendChild(this.__checkbox);this.updateDisplay()};d.superclass=e;c.extend(d.prototype,e.prototype,{setValue:function(a){a=d.superclass.prototype.setValue.call(this,a);this.__onFinishChange&&$/;"	r
CSS_RGBA	js/libs/dat.gui.min.js	/^return a===null?false:{space:"RGB",r:parseFloat(a[1]),g:parseFloat(a[2]),b:parseFloat(a[3])}},write:e},CSS_RGBA:{read:function(a){a=a.match(\/^rgba\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\,\\s*(.+)\\s*\\)\/);return a===null?false:{space:"RGB",r:parseFloat(a[1]),g:parseFloat(a[2]),b:parseFloat(a[3]),a:parseFloat(a[4])}},write:e}}},{litmus:a.isNumber,conversions:{HEX:{read:function(a){return{space:"HEX",hex:a,conversionName:"HEX"}},write:function(a){return a.hex}}}},{litmus:a.isArray,conversions:{RGB_ARRAY:{read:function(a){return a.length!=$/;"	r
ColorController	js/libs/dat.gui.min.js	/^dat.controllers.ColorController=function(e,a,c,d,f){function b(a,b,c,d){a.style.background="";f.each(j,function(e){a.style.cssText+="background: "+e+"linear-gradient("+b+", "+c+" 0%, "+d+" 100%); "})}function n(a){a.style.background="";a.style.cssText+="background: -moz-linear-gradient(top,  #ff0000 0%, #ff00ff 17%, #0000ff 34%, #00ffff 50%, #00ff00 67%, #ffff00 84%, #ff0000 100%);";a.style.cssText+="background: -webkit-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);";$/;"	r
Controller	js/libs/dat.gui.min.js	/^dat.controllers.Controller=function(e){var a=function(a,d){this.initialValue=a[d];this.domElement=document.createElement("div");this.object=a;this.property=d;this.__onFinishChange=this.__onChange=void 0};e.extend(a.prototype,{onChange:function(a){this.__onChange=a;return this},onFinishChange:function(a){this.__onFinishChange=a;return this},setValue:function(a){this.object[this.property]=a;this.__onChange&&this.__onChange.call(this,a);this.updateDisplay();return this},getValue:function(){return this.object[this.property]},$/;"	r
D	js/libs/dat.gui.min.js	/^c);g.unbind(window,"mouseup",d)}a.__resize_handle=document.createElement("div");i.extend(a.__resize_handle.style,{width:"6px",marginLeft:"-3px",height:"200px",cursor:"ew-resize",position:"absolute"});var e;g.bind(a.__resize_handle,"mousedown",b);g.bind(a.__closeButton,"mousedown",b);a.domElement.insertBefore(a.__resize_handle,a.domElement.firstElementChild)}function D(a,b){a.domElement.style.width=b+"px";if(a.__save_row&&a.autoPlace)a.__save_row.style.width=b+"px";if(a.__closeButton)a.__closeButton.style.width=$/;"	r
F	js/libs/dat.gui.min.js	/^0&&o(function(){E(a)});i.each(a,function(a){a.updateDisplay()})}e.inject(c);var w="Default",u;try{u="localStorage"in window&&window.localStorage!==null}catch(K){u=false}var x,F=true,v,A=false,G=[],k=function(a){function b(){localStorage.setItem(document.location.href+".gui",JSON.stringify(d.getSaveObject()))}function c(){var a=d.getRoot();a.width+=1;i.defer(function(){a.width-=1})}var d=this;this.domElement=document.createElement("div");this.__ul=document.createElement("ul");this.domElement.appendChild(this.__ul);$/;"	r
F	js/libs/dat.gui.min.js	/^k.CLASS_AUTO_PLACE_CONTAINER),document.body.appendChild(v),F=false),v.appendChild(this.domElement),g.addClass(this.domElement,k.CLASS_AUTO_PLACE)),this.parent||D(d,a.width));g.bind(window,"resize",function(){d.onResize()});g.bind(this.__ul,"webkitTransitionEnd",function(){d.onResize()});g.bind(this.__ul,"transitionend",function(){d.onResize()});g.bind(this.__ul,"oTransitionEnd",function(){d.onResize()});this.onResize();a.resizable&&J(this);d.getRoot();a.parent||c()};k.toggleHide=function(){A=!A;i.each(G,$/;"	r
FunctionController	js/libs/dat.gui.min.js	/^dat.controllers.FunctionController=function(e,a,c){var d=function(c,b,e){d.superclass.call(this,c,b);var h=this;this.__button=document.createElement("div");this.__button.innerHTML=e===void 0?"Fire":e;a.bind(this.__button,"click",function(a){a.preventDefault();h.fire();return false});a.addClass(this.__button,"button");this.domElement.appendChild(this.__button)};d.superclass=e;c.extend(d.prototype,e.prototype,{fire:function(){this.__onChange&&this.__onChange.call(this);this.__onFinishChange&&this.__onFinishChange.call(this,$/;"	r
G	js/libs/dat.gui.min.js	/^0&&o(function(){E(a)});i.each(a,function(a){a.updateDisplay()})}e.inject(c);var w="Default",u;try{u="localStorage"in window&&window.localStorage!==null}catch(K){u=false}var x,F=true,v,A=false,G=[],k=function(a){function b(){localStorage.setItem(document.location.href+".gui",JSON.stringify(d.getSaveObject()))}function c(){var a=d.getRoot();a.width+=1;i.defer(function(){a.width-=1})}var d=this;this.domElement=document.createElement("div");this.__ul=document.createElement("ul");this.domElement.appendChild(this.__ul);$/;"	r
GUI	js/libs/dat.gui.min.js	/^dat.GUI=dat.gui.GUI=function(e,a,c,d,f,b,n,h,j,m,l,o,y,g,i){function q(a,b,r,c){if(b[r]===void 0)throw Error("Object "+b+' has no property "'+r+'"');c.color?b=new l(b,r):(b=[b,r].concat(c.factoryArgs),b=d.apply(a,b));if(c.before instanceof f)c.before=c.before.__li;t(a,b);g.addClass(b.domElement,"c");r=document.createElement("span");g.addClass(r,"property-name");r.innerHTML=b.property;var e=document.createElement("div");e.appendChild(r);e.appendChild(b.domElement);c=s(a,e,c.before);g.addClass(c,k.CLASS_CONTROLLER_ROW);$/;"	r
H	js/libs/dat.gui.min.js	/^{before:c.__li.nextElementSibling,factoryArgs:[b]})},name:function(a){c.__li.firstElementChild.firstElementChild.innerHTML=a;return c},listen:function(){c.__gui.listen(c);return c},remove:function(){c.__gui.remove(c);return c}});if(c instanceof j){var e=new h(c.object,c.property,{min:c.__min,max:c.__max,step:c.__step});i.each(["updateDisplay","onChange","onFinishChange"],function(a){var b=c[a],H=e[a];c[a]=e[a]=function(){var a=Array.prototype.slice.call(arguments);b.apply(c,a);return H.apply(e,a)}});$/;"	r
HSVA_OBJ	js/libs/dat.gui.min.js	/^a.isNumber(b.g)&&a.isNumber(b.b)?{space:"RGB",r:b.r,g:b.g,b:b.b}:false},write:function(a){return{r:a.r,g:a.g,b:a.b}}},HSVA_OBJ:{read:function(b){return a.isNumber(b.h)&&a.isNumber(b.s)&&a.isNumber(b.v)&&a.isNumber(b.a)?{space:"HSV",h:b.h,s:b.s,v:b.v,a:b.a}:false},write:function(a){return{h:a.h,s:a.s,v:a.v,a:a.a}}},HSV_OBJ:{read:function(b){return a.isNumber(b.h)&&a.isNumber(b.s)&&a.isNumber(b.v)?{space:"HSV",h:b.h,s:b.s,v:b.v}:false},write:function(a){return{h:a.h,s:a.s,v:a.v}}}}}];return function(){d=$/;"	r
J	js/libs/dat.gui.min.js	/^"click",function(){a.save()});g.bind(e,"click",function(){var b=prompt("Enter a new preset name.");b&&a.saveAs(b)});g.bind(f,"click",function(){a.revert()})}function J(a){function b(f){f.preventDefault();e=f.clientX;g.addClass(a.__closeButton,k.CLASS_DRAG);g.bind(window,"mousemove",c);g.bind(window,"mouseup",d);return false}function c(b){b.preventDefault();a.width+=e-b.clientX;a.onResize();e=b.clientX;return false}function d(){g.removeClass(a.__closeButton,k.CLASS_DRAG);g.unbind(window,"mousemove",$/;"	r
MouseEvents	js/libs/dat.gui.min.js	/^dat.dom.dom=function(e){function a(b){if(b==="0"||e.isUndefined(b))return 0;b=b.match(d);return!e.isNull(b)?parseFloat(b[1]):0}var c={};e.each({HTMLEvents:["change"],MouseEvents:["click","mousemove","mousedown","mouseup","mouseover"],KeyboardEvents:["keydown"]},function(b,a){e.each(b,function(b){c[b]=a})});var d=\/(\\d+(\\.\\d+)?)px\/,f={makeSelectable:function(b,a){if(!(b===void 0||b.style===void 0))b.onselectstart=a?function(){return false}:function(){},b.style.MozUserSelect=a?"auto":"none",b.style.KhtmlUserSelect=$/;"	r
NumberController	js/libs/dat.gui.min.js	/^dat.controllers.NumberController=function(e,a){var c=function(d,f,b){c.superclass.call(this,d,f);b=b||{};this.__min=b.min;this.__max=b.max;this.__step=b.step;d=this.__impliedStep=a.isUndefined(this.__step)?this.initialValue==0?1:Math.pow(10,Math.floor(Math.log(this.initialValue)\/Math.LN10))\/10:this.__step;d=d.toString();this.__precision=d.indexOf(".")>-1?d.length-d.indexOf(".")-1:0};c.superclass=e;a.extend(c.prototype,e.prototype,{setValue:function(a){if(this.__min!==void 0&&a<this.__min)a=this.__min;$/;"	r
NumberControllerBox	js/libs/dat.gui.min.js	/^dat.controllers.NumberControllerBox=function(e,a,c){var d=function(f,b,e){function h(){var a=parseFloat(l.__input.value);c.isNaN(a)||l.setValue(a)}function j(a){var b=o-a.clientY;l.setValue(l.getValue()+b*l.__impliedStep);o=a.clientY}function m(){a.unbind(window,"mousemove",j);a.unbind(window,"mouseup",m)}this.__truncationSuspended=false;d.superclass.call(this,f,b,e);var l=this,o;this.__input=document.createElement("input");this.__input.setAttribute("type","text");a.bind(this.__input,"change",h);$/;"	r
NumberControllerSlider	js/libs/dat.gui.min.js	/^dat.controllers.NumberControllerSlider=function(e,a,c,d,f){var b=function(d,c,f,e,l){function o(b){b.preventDefault();var d=a.getOffset(g.__background),c=a.getWidth(g.__background);g.setValue(g.__min+(g.__max-g.__min)*((b.clientX-d.left)\/(d.left+c-d.left)));return false}function y(){a.unbind(window,"mousemove",o);a.unbind(window,"mouseup",y);g.__onFinishChange&&g.__onFinishChange.call(g,g.getValue())}b.superclass.call(this,d,c,{min:f,max:e,step:l});var g=this;this.__background=document.createElement("div");$/;"	r
OptionController	js/libs/dat.gui.min.js	/^dat.controllers.OptionController=function(e,a,c){var d=function(f,b,e){d.superclass.call(this,f,b);var h=this;this.__select=document.createElement("select");if(c.isArray(e)){var j={};c.each(e,function(a){j[a]=a});e=j}c.each(e,function(a,b){var d=document.createElement("option");d.innerHTML=b;d.setAttribute("value",a);h.__select.appendChild(d)});this.updateDisplay();a.bind(this.__select,"change",function(){h.setValue(this.options[this.selectedIndex].value)});this.domElement.appendChild(this.__select)};$/;"	r
RGBA_ARRAY	js/libs/dat.gui.min.js	/^3?false:{space:"RGB",r:a[0],g:a[1],b:a[2]}},write:function(a){return[a.r,a.g,a.b]}},RGBA_ARRAY:{read:function(a){return a.length!=4?false:{space:"RGB",r:a[0],g:a[1],b:a[2],a:a[3]}},write:function(a){return[a.r,a.g,a.b,a.a]}}}},{litmus:a.isObject,conversions:{RGBA_OBJ:{read:function(b){return a.isNumber(b.r)&&a.isNumber(b.g)&&a.isNumber(b.b)&&a.isNumber(b.a)?{space:"RGB",r:b.r,g:b.g,b:b.b,a:b.a}:false},write:function(a){return{r:a.r,g:a.g,b:a.b,a:a.a}}},RGB_OBJ:{read:function(b){return a.isNumber(b.r)&&$/;"	r
__controllers	js/libs/dat.gui.min.js	/^g.addClass(this.domElement,"dg");this.__folders={};this.__controllers=[];this.__rememberedObjects=[];this.__rememberedObjectIndecesToControllers=[];this.__listening=[];a=a||{};a=i.defaults(a,{autoPlace:true,width:k.DEFAULT_WIDTH});a=i.defaults(a,{resizable:a.autoPlace,hideable:a.autoPlace});if(i.isUndefined(a.load))a.load={preset:w};else if(a.preset)a.load.preset=a.preset;i.isUndefined(a.parent)&&a.hideable&&G.push(this);a.resizable=i.isUndefined(a.parent)&&a.resizable;if(a.autoPlace&&i.isUndefined(a.scrollable))a.scrollable=$/;"	r
__folders	js/libs/dat.gui.min.js	/^g.addClass(this.domElement,"dg");this.__folders={};this.__controllers=[];this.__rememberedObjects=[];this.__rememberedObjectIndecesToControllers=[];this.__listening=[];a=a||{};a=i.defaults(a,{autoPlace:true,width:k.DEFAULT_WIDTH});a=i.defaults(a,{resizable:a.autoPlace,hideable:a.autoPlace});if(i.isUndefined(a.load))a.load={preset:w};else if(a.preset)a.load.preset=a.preset;i.isUndefined(a.parent)&&a.hideable&&G.push(this);a.resizable=i.isUndefined(a.parent)&&a.resizable;if(a.autoPlace&&i.isUndefined(a.scrollable))a.scrollable=$/;"	r
__foreground	js/libs/dat.gui.min.js	/^this.__foreground=document.createElement("div");a.bind(this.__background,"mousedown",function(b){a.bind(window,"mousemove",o);a.bind(window,"mouseup",y);o(b)});a.addClass(this.__background,"slider");a.addClass(this.__foreground,"slider-fg");this.updateDisplay();this.__background.appendChild(this.__foreground);this.domElement.appendChild(this.__background)};b.superclass=e;b.useDefaultStyles=function(){c.inject(f)};d.extend(b.prototype,e.prototype,{updateDisplay:function(){this.__foreground.style.width=$/;"	r
__prev	js/libs/dat.gui.min.js	/^this.__onFinishChange.call(this,this.getValue());this.__prev=this.getValue();return a},updateDisplay:function(){this.getValue()===true?(this.__checkbox.setAttribute("checked","checked"),this.__checkbox.checked=true):this.__checkbox.checked=false;return d.superclass.prototype.updateDisplay.call(this)}});return d}(dat.controllers.Controller,dat.dom.dom,dat.utils.common);$/;"	r
__selector	js/libs/dat.gui.min.js	/^false);this.__selector=document.createElement("div");this.__selector.className="selector";this.__saturation_field=document.createElement("div");this.__saturation_field.className="saturation-field";this.__field_knob=document.createElement("div");this.__field_knob.className="field-knob";this.__field_knob_border="2px solid ";this.__hue_knob=document.createElement("div");this.__hue_knob.className="hue-knob";this.__hue_field=document.createElement("div");this.__hue_field.className="hue-field";this.__input=$/;"	r
a	js/libs/dat.gui.min.js	/^"HEX")b.__state[c]=a.component_from_hex(b.__state.hex,e);else if(b.__state.space==="HSV")d.extend(b.__state,a.hsv_to_rgb(b.__state.h,b.__state.s,b.__state.v));else throw"Corrupted color state";}function h(b){var c=a.rgb_to_hsv(b.r,b.g,b.b);d.extend(b.__state,{s:c.s,v:c.v});if(d.isNaN(c.h)){if(d.isUndefined(b.__state.h))b.__state.h=0}else b.__state.h=c.h}var j=function(){this.__state=e.apply(this,arguments);if(this.__state===false)throw"Failed to interpret color arguments";this.__state.a=this.__state.a||$/;"	r
a	js/libs/dat.gui.min.js	/^"rgb("+h+","+h+","+h+")"});this.__hue_knob.style.marginTop=(1-this.__color.h\/360)*100+"px";this.__temp.s=1;this.__temp.v=1;b(this.__saturation_field,"left","#fff",this.__temp.toString());f.extend(this.__input.style,{backgroundColor:this.__input.value=this.__color.toString(),color:"rgb("+h+","+h+","+h+")",textShadow:this.__input_textShadow+"rgba("+j+","+j+","+j+",.7)"})}});var j=["-moz-","-o-","-webkit-","-ms-",""];return h}(dat.controllers.Controller,dat.dom.dom,dat.color.Color=function(e,a,c,d){function f(a,$/;"	r
a	js/libs/dat.gui.min.js	/^a.rgb_to_hex(this.r,this.g,this.b);return this.__state.hex},set:function(a){this.__state.space="HEX";this.__state.hex=a}});return j}(dat.color.interpret,dat.color.math=function(){var e;return{hsv_to_rgb:function(a,c,d){var e=a\/60-Math.floor(a\/60),b=d*(1-c),n=d*(1-e*c),c=d*(1-(1-e)*c),a=[[d,c,b],[n,d,b],[b,d,c],[b,n,d],[c,b,d],[d,b,n]][Math.floor(a\/60)%6];return{r:a[0]*255,g:a[1]*255,b:a[2]*255}},rgb_to_hsv:function(a,c,d){var e=Math.min(a,c,d),b=Math.max(a,c,d),e=b-e;if(b==0)return{h:NaN,s:0,v:0};$/;"	r
a	js/libs/dat.gui.min.js	/^a=a==b?(c-d)\/e:c==b?2+(d-a)\/e:4+(a-c)\/e;a\/=6;a<0&&(a+=1);return{h:a*360,s:e\/b,v:b\/255}},rgb_to_hex:function(a,c,d){a=this.hex_with_component(0,2,a);a=this.hex_with_component(a,1,c);return a=this.hex_with_component(a,0,d)},component_from_hex:function(a,c){return a>>c*8&255},hex_with_component:function(a,c,d){return d<<(e=c*8)|a&~(255<<e)}}}(),dat.color.toString,dat.utils.common),dat.color.interpret,dat.utils.common),dat.utils.requestAnimationFrame=function(){return window.webkitRequestAnimationFrame||$/;"	r
a	js/libs/dat.gui.min.js	/^a?"auto":"none",b.unselectable=a?"on":"off"},makeFullscreen:function(b,a,d){e.isUndefined(a)&&(a=true);e.isUndefined(d)&&(d=true);b.style.position="absolute";if(a)b.style.left=0,b.style.right=0;if(d)b.style.top=0,b.style.bottom=0},fakeEvent:function(b,a,d,f){var d=d||{},m=c[a];if(!m)throw Error("Event type "+a+" not supported.");var l=document.createEvent(m);switch(m){case "MouseEvents":l.initMouseEvent(a,d.bubbles||false,d.cancelable||true,window,d.clickCount||1,0,0,d.x||d.clientX||0,d.y||d.clientY||$/;"	r
a	js/libs/dat.gui.min.js	/^b.attachEvent("on"+a,d);return f},unbind:function(b,a,d,c){b.removeEventListener?b.removeEventListener(a,d,c||false):b.detachEvent&&b.detachEvent("on"+a,d);return f},addClass:function(b,a){if(b.className===void 0)b.className=a;else if(b.className!==a){var d=b.className.split(\/ +\/);if(d.indexOf(a)==-1)d.push(a),b.className=d.join(" ").replace(\/^\\s+\/,"").replace(\/\\s+$\/,"")}return f},removeClass:function(b,a){if(a){if(b.className!==void 0)if(b.className===a)b.removeAttribute("class");else{var d=b.className.split(\/ +\/),$/;"	r
a	js/libs/dat.gui.min.js	/^c){a.folders[c]=b.getSaveObject()});return a},save:function(){if(!this.load.remembered)this.load.remembered={};this.load.remembered[this.preset]=z(this);B(this,false)},saveAs:function(a){if(!this.load.remembered)this.load.remembered={},this.load.remembered[w]=z(this,true);this.load.remembered[a]=z(this);this.preset=a;C(this,a,true)},revert:function(a){i.each(this.__controllers,function(b){this.getRoot().load.remembered?t(a||this.getRoot(),b):b.setValue(b.initialValue)},this);i.each(this.__folders,$/;"	r
a	js/libs/dat.gui.min.js	/^dat.GUI=dat.gui.GUI=function(e,a,c,d,f,b,n,h,j,m,l,o,y,g,i){function q(a,b,r,c){if(b[r]===void 0)throw Error("Object "+b+' has no property "'+r+'"');c.color?b=new l(b,r):(b=[b,r].concat(c.factoryArgs),b=d.apply(a,b));if(c.before instanceof f)c.before=c.before.__li;t(a,b);g.addClass(b.domElement,"c");r=document.createElement("span");g.addClass(r,"property-name");r.innerHTML=b.property;var e=document.createElement("div");e.appendChild(r);e.appendChild(b.domElement);c=s(a,e,c.before);g.addClass(c,k.CLASS_CONTROLLER_ROW);$/;"	r
a	js/libs/dat.gui.min.js	/^dat.controllers.BooleanController=function(e,a,c){var d=function(c,b){d.superclass.call(this,c,b);var e=this;this.__prev=this.getValue();this.__checkbox=document.createElement("input");this.__checkbox.setAttribute("type","checkbox");a.bind(this.__checkbox,"change",function(){e.setValue(!e.__prev)},false);this.domElement.appendChild(this.__checkbox);this.updateDisplay()};d.superclass=e;c.extend(d.prototype,e.prototype,{setValue:function(a){a=d.superclass.prototype.setValue.call(this,a);this.__onFinishChange&&$/;"	r
a	js/libs/dat.gui.min.js	/^dat.controllers.ColorController=function(e,a,c,d,f){function b(a,b,c,d){a.style.background="";f.each(j,function(e){a.style.cssText+="background: "+e+"linear-gradient("+b+", "+c+" 0%, "+d+" 100%); "})}function n(a){a.style.background="";a.style.cssText+="background: -moz-linear-gradient(top,  #ff0000 0%, #ff00ff 17%, #0000ff 34%, #00ffff 50%, #00ff00 67%, #ffff00 84%, #ff0000 100%);";a.style.cssText+="background: -webkit-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);";$/;"	r
a	js/libs/dat.gui.min.js	/^dat.controllers.FunctionController=function(e,a,c){var d=function(c,b,e){d.superclass.call(this,c,b);var h=this;this.__button=document.createElement("div");this.__button.innerHTML=e===void 0?"Fire":e;a.bind(this.__button,"click",function(a){a.preventDefault();h.fire();return false});a.addClass(this.__button,"button");this.domElement.appendChild(this.__button)};d.superclass=e;c.extend(d.prototype,e.prototype,{fire:function(){this.__onChange&&this.__onChange.call(this);this.__onFinishChange&&this.__onFinishChange.call(this,$/;"	r
a	js/libs/dat.gui.min.js	/^dat.controllers.NumberControllerBox=function(e,a,c){var d=function(f,b,e){function h(){var a=parseFloat(l.__input.value);c.isNaN(a)||l.setValue(a)}function j(a){var b=o-a.clientY;l.setValue(l.getValue()+b*l.__impliedStep);o=a.clientY}function m(){a.unbind(window,"mousemove",j);a.unbind(window,"mouseup",m)}this.__truncationSuspended=false;d.superclass.call(this,f,b,e);var l=this,o;this.__input=document.createElement("input");this.__input.setAttribute("type","text");a.bind(this.__input,"change",h);$/;"	r
a	js/libs/dat.gui.min.js	/^dat.controllers.NumberControllerSlider=function(e,a,c,d,f){var b=function(d,c,f,e,l){function o(b){b.preventDefault();var d=a.getOffset(g.__background),c=a.getWidth(g.__background);g.setValue(g.__min+(g.__max-g.__min)*((b.clientX-d.left)\/(d.left+c-d.left)));return false}function y(){a.unbind(window,"mousemove",o);a.unbind(window,"mouseup",y);g.__onFinishChange&&g.__onFinishChange.call(g,g.getValue())}b.superclass.call(this,d,c,{min:f,max:e,step:l});var g=this;this.__background=document.createElement("div");$/;"	r
a	js/libs/dat.gui.min.js	/^dat.controllers.OptionController=function(e,a,c){var d=function(f,b,e){d.superclass.call(this,f,b);var h=this;this.__select=document.createElement("select");if(c.isArray(e)){var j={};c.each(e,function(a){j[a]=a});e=j}c.each(e,function(a,b){var d=document.createElement("option");d.innerHTML=b;d.setAttribute("value",a);h.__select.appendChild(d)});this.updateDisplay();a.bind(this.__select,"change",function(){h.setValue(this.options[this.selectedIndex].value)});this.domElement.appendChild(this.__select)};$/;"	r
a	js/libs/dat.gui.min.js	/^dat.controllers.factory=function(e,a,c,d,f,b,n){return function(h,j,m,l){var o=h[j];if(n.isArray(m)||n.isObject(m))return new e(h,j,m);if(n.isNumber(o))return n.isNumber(m)&&n.isNumber(l)?new c(h,j,m,l):new a(h,j,{min:m,max:l});if(n.isString(o))return new d(h,j);if(n.isFunction(o))return new f(h,j,"");if(n.isBoolean(o))return new b(h,j)}}(dat.controllers.OptionController,dat.controllers.NumberControllerBox,dat.controllers.NumberControllerSlider,dat.controllers.StringController=function(e,a,c){var d=$/;"	r
a	js/libs/dat.gui.min.js	/^dat.dom.dom=function(e){function a(b){if(b==="0"||e.isUndefined(b))return 0;b=b.match(d);return!e.isNull(b)?parseFloat(b[1]):0}var c={};e.each({HTMLEvents:["change"],MouseEvents:["click","mousemove","mousedown","mouseup","mouseover"],KeyboardEvents:["keydown"]},function(b,a){e.each(b,function(b){c[b]=a})});var d=\/(\\d+(\\.\\d+)?)px\/,f={makeSelectable:function(b,a){if(!(b===void 0||b.style===void 0))b.onselectstart=a?function(){return false}:function(){},b.style.MozUserSelect=a?"auto":"none",b.style.KhtmlUserSelect=$/;"	r
a	js/libs/dat.gui.min.js	/^false);i.extend(k.prototype,{add:function(a,b){return q(this,a,b,{factoryArgs:Array.prototype.slice.call(arguments,2)})},addColor:function(a,b){return q(this,a,b,{color:true})},remove:function(a){this.__ul.removeChild(a.__li);this.__controllers.slice(this.__controllers.indexOf(a),1);var b=this;i.defer(function(){b.onResize()})},destroy:function(){this.autoPlace&&v.removeChild(this.domElement)},addFolder:function(a){if(this.__folders[a]!==void 0)throw Error('You already have a folder in this GUI by the name "'+$/;"	r
a	js/libs/dat.gui.min.js	/^if(a!==false){var e=false;f.each(c.COMPONENTS,function(b){if(!f.isUndefined(a[b])&&!f.isUndefined(this.__color.__state[b])&&a[b]!==this.__color.__state[b])return e=true,{}},this);e&&f.extend(this.__color.__state,a)}f.extend(this.__temp.__state,this.__color.__state);this.__temp.a=1;var h=this.__color.v<0.5||this.__color.s>0.5?255:0,j=255-h;f.extend(this.__field_knob.style,{marginLeft:100*this.__color.s-7+"px",marginTop:100*(1-this.__color.v)-7+"px",backgroundColor:this.__temp.toString(),border:this.__field_knob_border+$/;"	r
addColor	js/libs/dat.gui.min.js	/^false);i.extend(k.prototype,{add:function(a,b){return q(this,a,b,{factoryArgs:Array.prototype.slice.call(arguments,2)})},addColor:function(a,b){return q(this,a,b,{color:true})},remove:function(a){this.__ul.removeChild(a.__li);this.__controllers.slice(this.__controllers.indexOf(a),1);var b=this;i.defer(function(){b.onResize()})},destroy:function(){this.autoPlace&&v.removeChild(this.domElement)},addFolder:function(a){if(this.__folders[a]!==void 0)throw Error('You already have a folder in this GUI by the name "'+$/;"	r
b	js/libs/dat.gui.min.js	/^"mouseup",j)}function j(){a.unbind(window,"mousemove",q);a.unbind(window,"mouseup",j)}function g(){var a=d(this.value);a!==false?(p.__color.__state=a,p.setValue(p.__color.toOriginal())):this.value=p.__color.toString()}function i(){a.unbind(window,"mousemove",s);a.unbind(window,"mouseup",i)}function q(b){b.preventDefault();var c=a.getWidth(p.__saturation_field),d=a.getOffset(p.__saturation_field),e=(b.clientX-d.left+document.body.scrollLeft)\/c,b=1-(b.clientY-d.top+document.body.scrollTop)\/c;b>1?b=$/;"	r
b	js/libs/dat.gui.min.js	/^0&&o(function(){E(a)});i.each(a,function(a){a.updateDisplay()})}e.inject(c);var w="Default",u;try{u="localStorage"in window&&window.localStorage!==null}catch(K){u=false}var x,F=true,v,A=false,G=[],k=function(a){function b(){localStorage.setItem(document.location.href+".gui",JSON.stringify(d.getSaveObject()))}function c(){var a=d.getRoot();a.width+=1;i.defer(function(){a.width-=1})}var d=this;this.domElement=document.createElement("div");this.__ul=document.createElement("ul");this.domElement.appendChild(this.__ul);$/;"	r
b	js/libs/dat.gui.min.js	/^1:b<0&&(b=0);e>1?e=1:e<0&&(e=0);p.__color.v=b;p.__color.s=e;p.setValue(p.__color.toOriginal());return false}function s(b){b.preventDefault();var c=a.getHeight(p.__hue_field),d=a.getOffset(p.__hue_field),b=1-(b.clientY-d.top+document.body.scrollTop)\/c;b>1?b=1:b<0&&(b=0);p.__color.h=b*360;p.setValue(p.__color.toOriginal());return false}h.superclass.call(this,e,l);this.__color=new c(this.getValue());this.__temp=new c(0);var p=this;this.domElement=document.createElement("div");a.makeSelectable(this.domElement,$/;"	r
b	js/libs/dat.gui.min.js	/^a+'"');var b={name:a,parent:this};b.autoPlace=this.autoPlace;if(this.load&&this.load.folders&&this.load.folders[a])b.closed=this.load.folders[a].closed,b.load=this.load.folders[a];b=new k(b);this.__folders[a]=b;a=s(this,b.domElement);g.addClass(a,"folder");return b},open:function(){this.closed=false},close:function(){this.closed=true},onResize:function(){var a=this.getRoot();if(a.scrollable){var b=g.getOffset(a.__ul).top,c=0;i.each(a.__ul.childNodes,function(b){a.autoPlace&&b===a.__save_row||(c+=$/;"	r
b	js/libs/dat.gui.min.js	/^b+"px"}function z(a,b){var c={};i.each(a.__rememberedObjects,function(d,e){var f={};i.each(a.__rememberedObjectIndecesToControllers[e],function(a,c){f[c]=b?a.initialValue:a.getValue()});c[e]=f});return c}function C(a,b,c){var d=document.createElement("option");d.innerHTML=b;d.value=b;a.__preset_select.appendChild(d);if(c)a.__preset_select.selectedIndex=a.__preset_select.length-1}function B(a,b){var c=a.__preset_select[a.__preset_select.selectedIndex];c.innerHTML=b?c.value+"*":c.value}function E(a){a.length!=$/;"	r
b	js/libs/dat.gui.min.js	/^b,c){Object.defineProperty(a,b,{get:function(){if(this.__state.space==="RGB")return this.__state[b];n(this,b,c);return this.__state[b]},set:function(a){if(this.__state.space!=="RGB")n(this,b,c),this.__state.space="RGB";this.__state[b]=a}})}function b(a,b){Object.defineProperty(a,b,{get:function(){if(this.__state.space==="HSV")return this.__state[b];h(this);return this.__state[b]},set:function(a){if(this.__state.space!=="HSV")h(this),this.__state.space="HSV";this.__state[b]=a}})}function n(b,c,e){if(b.__state.space===$/;"	r
b	js/libs/dat.gui.min.js	/^b;d.revert()}},width:{get:function(){return a.width},set:function(b){a.width=b;D(d,b)}},name:{get:function(){return a.name},set:function(b){a.name=b;if(m)m.innerHTML=a.name}},closed:{get:function(){return a.closed},set:function(b){a.closed=b;a.closed?g.addClass(d.__ul,k.CLASS_CLOSED):g.removeClass(d.__ul,k.CLASS_CLOSED);this.onResize();if(d.__closeButton)d.__closeButton.innerHTML=b?k.TEXT_OPEN:k.TEXT_CLOSED}},load:{get:function(){return a.load}},useLocalStorage:{get:function(){return e},set:function(a){u&&$/;"	r
b	js/libs/dat.gui.min.js	/^b;if(this.__truncationSuspended)b=this.getValue();else{b=this.getValue();var c=Math.pow(10,this.__precision);b=Math.round(b*c)\/c}a.value=b;return d.superclass.prototype.updateDisplay.call(this)}});return d}(dat.controllers.NumberController,dat.dom.dom,dat.utils.common);$/;"	r
b	js/libs/dat.gui.min.js	/^dat.controllers.ColorController=function(e,a,c,d,f){function b(a,b,c,d){a.style.background="";f.each(j,function(e){a.style.cssText+="background: "+e+"linear-gradient("+b+", "+c+" 0%, "+d+" 100%); "})}function n(a){a.style.background="";a.style.cssText+="background: -moz-linear-gradient(top,  #ff0000 0%, #ff00ff 17%, #0000ff 34%, #00ffff 50%, #00ff00 67%, #ffff00 84%, #ff0000 100%);";a.style.cssText+="background: -webkit-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);";$/;"	r
b	js/libs/dat.gui.min.js	/^false);i.extend(k.prototype,{add:function(a,b){return q(this,a,b,{factoryArgs:Array.prototype.slice.call(arguments,2)})},addColor:function(a,b){return q(this,a,b,{color:true})},remove:function(a){this.__ul.removeChild(a.__li);this.__controllers.slice(this.__controllers.indexOf(a),1);var b=this;i.defer(function(){b.onResize()})},destroy:function(){this.autoPlace&&v.removeChild(this.domElement)},addFolder:function(a){if(this.__folders[a]!==void 0)throw Error('You already have a folder in this GUI by the name "'+$/;"	r
b	js/libs/dat.gui.min.js	/^false;var b=arguments.length>1?a.toArray(arguments):arguments[0];a.each(f,function(e){if(e.litmus(b))return a.each(e.conversions,function(e,f){c=e.read(b);if(d===false&&c!==false)return d=c,c.conversionName=f,c.conversion=e,a.BREAK}),a.BREAK});return d}}(dat.color.toString,dat.utils.common);$/;"	r
b	js/libs/dat.gui.min.js	/^var b=this;i.each(Array.prototype.slice.call(arguments),function(a){b.__rememberedObjects.length==0&&I(b);b.__rememberedObjects.indexOf(a)==-1&&b.__rememberedObjects.push(a)});this.autoPlace&&D(this,this.width)},getRoot:function(){for(var a=this;a.parent;)a=a.parent;return a},getSaveObject:function(){var a=this.load;a.closed=this.closed;if(this.__rememberedObjects.length>0){a.preset=this.preset;if(!a.remembered)a.remembered={};a.remembered[this.preset]=z(this)}a.folders={};i.each(this.__folders,function(b,$/;"	r
bind	js/libs/dat.gui.min.js	/^0,false,false,false,false,0,null);break;case "KeyboardEvents":m=l.initKeyboardEvent||l.initKeyEvent;e.defaults(d,{cancelable:true,ctrlKey:false,altKey:false,shiftKey:false,metaKey:false,keyCode:void 0,charCode:void 0});m(a,d.bubbles||false,d.cancelable,window,d.ctrlKey,d.altKey,d.shiftKey,d.metaKey,d.keyCode,d.charCode);break;default:l.initEvent(a,d.bubbles||false,d.cancelable||true)}e.defaults(l,f);b.dispatchEvent(l)},bind:function(b,a,d,c){b.addEventListener?b.addEventListener(a,d,c||false):b.attachEvent&&$/;"	r
border	js/libs/dat.gui.min.js	/^{width:"100%",height:"100%",background:"none"});b(t,"top","rgba(0,0,0,0)","#000");f.extend(this.__hue_field.style,{width:"15px",height:"100px",display:"inline-block",border:"1px solid #555",cursor:"ns-resize"});n(this.__hue_field);f.extend(this.__input.style,{outline:"none",textAlign:"center",color:"#fff",border:0,fontWeight:"bold",textShadow:this.__input_textShadow+"rgba(0,0,0,0.7)"});a.bind(this.__saturation_field,"mousedown",o);a.bind(this.__field_knob,"mousedown",o);a.bind(this.__hue_field,"mousedown",$/;"	r
c	js/libs/dat.gui.min.js	/^"has-save");a.__ul.insertBefore(b,a.__ul.firstChild);g.addClass(b,"save-row");var c=document.createElement("span");c.innerHTML="&nbsp;";g.addClass(c,"button gears");var d=document.createElement("span");d.innerHTML="Save";g.addClass(d,"button");g.addClass(d,"save");var e=document.createElement("span");e.innerHTML="New";g.addClass(e,"button");g.addClass(e,"save-as");var f=document.createElement("span");f.innerHTML="Revert";g.addClass(f,"button");g.addClass(f,"revert");var m=a.__preset_select=document.createElement("select");$/;"	r
c	js/libs/dat.gui.min.js	/^"mouseup",j)}function j(){a.unbind(window,"mousemove",q);a.unbind(window,"mouseup",j)}function g(){var a=d(this.value);a!==false?(p.__color.__state=a,p.setValue(p.__color.toOriginal())):this.value=p.__color.toString()}function i(){a.unbind(window,"mousemove",s);a.unbind(window,"mouseup",i)}function q(b){b.preventDefault();var c=a.getWidth(p.__saturation_field),d=a.getOffset(p.__saturation_field),e=(b.clientX-d.left+document.body.scrollLeft)\/c,b=1-(b.clientY-d.top+document.body.scrollTop)\/c;b>1?b=$/;"	r
c	js/libs/dat.gui.min.js	/^a+'"');var b={name:a,parent:this};b.autoPlace=this.autoPlace;if(this.load&&this.load.folders&&this.load.folders[a])b.closed=this.load.folders[a].closed,b.load=this.load.folders[a];b=new k(b);this.__folders[a]=b;a=s(this,b.domElement);g.addClass(a,"folder");return b},open:function(){this.closed=false},close:function(){this.closed=true},onResize:function(){var a=this.getRoot();if(a.scrollable){var b=g.getOffset(a.__ul).top,c=0;i.each(a.__ul.childNodes,function(b){a.autoPlace&&b===a.__save_row||(c+=$/;"	r
c	js/libs/dat.gui.min.js	/^a.load&&a.load.remembered?i.each(a.load.remembered,function(b,c){C(a,c,c==a.preset)}):C(a,w,false);g.bind(m,"change",function(){for(var b=0;b<a.__preset_select.length;b++)a.__preset_select[b].innerHTML=a.__preset_select[b].value;a.preset=this.value});b.appendChild(m);b.appendChild(c);b.appendChild(d);b.appendChild(e);b.appendChild(f);if(u){var b=document.getElementById("dg-save-locally"),l=document.getElementById("dg-local-explain");b.style.display="block";b=document.getElementById("dg-local-storage");$/;"	r
c	js/libs/dat.gui.min.js	/^a.rgb_to_hex(this.r,this.g,this.b);return this.__state.hex},set:function(a){this.__state.space="HEX";this.__state.hex=a}});return j}(dat.color.interpret,dat.color.math=function(){var e;return{hsv_to_rgb:function(a,c,d){var e=a\/60-Math.floor(a\/60),b=d*(1-c),n=d*(1-e*c),c=d*(1-(1-e)*c),a=[[d,c,b],[n,d,b],[b,d,c],[b,n,d],[c,b,d],[d,b,n]][Math.floor(a\/60)%6];return{r:a[0]*255,g:a[1]*255,b:a[2]*255}},rgb_to_hsv:function(a,c,d){var e=Math.min(a,c,d),b=Math.max(a,c,d),e=b-e;if(b==0)return{h:NaN,s:0,v:0};$/;"	r
c	js/libs/dat.gui.min.js	/^a=a==b?(c-d)\/e:c==b?2+(d-a)\/e:4+(a-c)\/e;a\/=6;a<0&&(a+=1);return{h:a*360,s:e\/b,v:b\/255}},rgb_to_hex:function(a,c,d){a=this.hex_with_component(0,2,a);a=this.hex_with_component(a,1,c);return a=this.hex_with_component(a,0,d)},component_from_hex:function(a,c){return a>>c*8&255},hex_with_component:function(a,c,d){return d<<(e=c*8)|a&~(255<<e)}}}(),dat.color.toString,dat.utils.common),dat.color.interpret,dat.utils.common),dat.utils.requestAnimationFrame=function(){return window.webkitRequestAnimationFrame||$/;"	r
c	js/libs/dat.gui.min.js	/^b;if(this.__truncationSuspended)b=this.getValue();else{b=this.getValue();var c=Math.pow(10,this.__precision);b=Math.round(b*c)\/c}a.value=b;return d.superclass.prototype.updateDisplay.call(this)}});return d}(dat.controllers.NumberController,dat.dom.dom,dat.utils.common);$/;"	r
c	js/libs/dat.gui.min.js	/^c=d.indexOf(a);if(c!=-1)d.splice(c,1),b.className=d.join(" ")}}else b.className=void 0;return f},hasClass:function(a,d){return RegExp("(?:^|\\\\s+)"+d+"(?:\\\\s+|$)").test(a.className)||false},getWidth:function(b){b=getComputedStyle(b);return a(b["border-left-width"])+a(b["border-right-width"])+a(b["padding-left"])+a(b["padding-right"])+a(b.width)},getHeight:function(b){b=getComputedStyle(b);return a(b["border-top-width"])+a(b["border-bottom-width"])+a(b["padding-top"])+a(b["padding-bottom"])+a(b.height)},$/;"	r
c	js/libs/dat.gui.min.js	/^document.createElement("div");a.extend(this.domElement.style,{position:"fixed",display:"none",zIndex:"1001",opacity:0,WebkitTransition:"-webkit-transform 0.2s ease-out, opacity 0.2s linear"});document.body.appendChild(this.backgroundElement);document.body.appendChild(this.domElement);var c=this;e.bind(this.backgroundElement,"click",function(){c.hide()})};c.prototype.show=function(){var c=this;this.backgroundElement.style.display="block";this.domElement.style.display="block";this.domElement.style.opacity=$/;"	r
c	js/libs/dat.gui.min.js	/^function(c,b){function e(){h.setValue(h.__input.value)}d.superclass.call(this,c,b);var h=this;this.__input=document.createElement("input");this.__input.setAttribute("type","text");a.bind(this.__input,"keyup",e);a.bind(this.__input,"change",e);a.bind(this.__input,"blur",function(){h.__onFinishChange&&h.__onFinishChange.call(h,h.getValue())});a.bind(this.__input,"keydown",function(a){a.keyCode===13&&this.blur()});this.updateDisplay();this.domElement.appendChild(this.__input)};d.superclass=e;c.extend(d.prototype,$/;"	r
c	js/libs/dat.gui.min.js	/^g.addClass(c,typeof b.getValue());p(a,c,b);a.__controllers.push(b);return b}function s(a,b,d){var c=document.createElement("li");b&&c.appendChild(b);d?a.__ul.insertBefore(c,params.before):a.__ul.appendChild(c);a.onResize();return c}function p(a,d,c){c.__li=d;c.__gui=a;i.extend(c,{options:function(b){if(arguments.length>1)return c.remove(),q(a,c.object,c.property,{before:c.__li.nextElementSibling,factoryArgs:[i.toArray(arguments)]});if(i.isArray(b)||i.isObject(b))return c.remove(),q(a,c.object,c.property,$/;"	r
color	js/libs/dat.gui.min.js	/^"rgb("+h+","+h+","+h+")"});this.__hue_knob.style.marginTop=(1-this.__color.h\/360)*100+"px";this.__temp.s=1;this.__temp.v=1;b(this.__saturation_field,"left","#fff",this.__temp.toString());f.extend(this.__input.style,{backgroundColor:this.__input.value=this.__color.toString(),color:"rgb("+h+","+h+","+h+")",textShadow:this.__input_textShadow+"rgba("+j+","+j+","+j+",.7)"})}});var j=["-moz-","-o-","-webkit-","-ms-",""];return h}(dat.controllers.Controller,dat.dom.dom,dat.color.Color=function(e,a,c,d){function f(a,$/;"	r
common	js/libs/dat.gui.min.js	/^dat.utils.common=function(){var e=Array.prototype.forEach,a=Array.prototype.slice;return{BREAK:{},extend:function(c){this.each(a.call(arguments,1),function(a){for(var f in a)this.isUndefined(a[f])||(c[f]=a[f])},this);return c},defaults:function(c){this.each(a.call(arguments,1),function(a){for(var f in a)this.isUndefined(c[f])&&(c[f]=a[f])},this);return c},compose:function(){var c=a.call(arguments);return function(){for(var d=a.call(arguments),f=c.length-1;f>=0;f--)d=[c[f].apply(this,d)];return d[0]}},$/;"	r
conversions	js/libs/dat.gui.min.js	/^dat.color.interpret=function(e,a){var c,d,f=[{litmus:a.isString,conversions:{THREE_CHAR_HEX:{read:function(a){a=a.match(\/^#([A-F0-9])([A-F0-9])([A-F0-9])$\/i);return a===null?false:{space:"HEX",hex:parseInt("0x"+a[1].toString()+a[1].toString()+a[2].toString()+a[2].toString()+a[3].toString()+a[3].toString())}},write:e},SIX_CHAR_HEX:{read:function(a){a=a.match(\/^#([A-F0-9]{6})$\/i);return a===null?false:{space:"HEX",hex:parseInt("0x"+a[1].toString())}},write:e},CSS_RGB:{read:function(a){a=a.match(\/^rgb\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)\/);$/;"	r
css	js/libs/dat.gui.min.js	/^var dat=dat||{};dat.gui=dat.gui||{};dat.utils=dat.utils||{};dat.controllers=dat.controllers||{};dat.dom=dat.dom||{};dat.color=dat.color||{};dat.utils.css=function(){return{load:function(e,a){var a=a||document,c=a.createElement("link");c.type="text\/css";c.rel="stylesheet";c.href=e;a.getElementsByTagName("head")[0].appendChild(c)},inject:function(e,a){var a=a||document,c=document.createElement("style");c.type="text\/css";c.innerHTML=e;a.getElementsByTagName("head")[0].appendChild(c)}}}();$/;"	r
ctrlKey	js/libs/dat.gui.min.js	/^0,false,false,false,false,0,null);break;case "KeyboardEvents":m=l.initKeyboardEvent||l.initKeyEvent;e.defaults(d,{cancelable:true,ctrlKey:false,altKey:false,shiftKey:false,metaKey:false,keyCode:void 0,charCode:void 0});m(a,d.bubbles||false,d.cancelable,window,d.ctrlKey,d.altKey,d.shiftKey,d.metaKey,d.keyCode,d.charCode);break;default:l.initEvent(a,d.bubbles||false,d.cancelable||true)}e.defaults(l,f);b.dispatchEvent(l)},bind:function(b,a,d,c){b.addEventListener?b.addEventListener(a,d,c||false):b.attachEvent&&$/;"	r
d	js/libs/dat.gui.min.js	/^dat.color.interpret=function(e,a){var c,d,f=[{litmus:a.isString,conversions:{THREE_CHAR_HEX:{read:function(a){a=a.match(\/^#([A-F0-9])([A-F0-9])([A-F0-9])$\/i);return a===null?false:{space:"HEX",hex:parseInt("0x"+a[1].toString()+a[1].toString()+a[2].toString()+a[2].toString()+a[3].toString()+a[3].toString())}},write:e},SIX_CHAR_HEX:{read:function(a){a=a.match(\/^#([A-F0-9]{6})$\/i);return a===null?false:{space:"HEX",hex:parseInt("0x"+a[1].toString())}},write:e},CSS_RGB:{read:function(a){a=a.match(\/^rgb\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)\/);$/;"	r
d	js/libs/dat.gui.min.js	/^each:function(a,d,f){if(e&&a.forEach===e)a.forEach(d,f);else if(a.length===a.length+0)for(var b=0,n=a.length;b<n;b++){if(b in a&&d.call(f,a[b],b)===this.BREAK)break}else for(b in a)if(d.call(f,a[b],b)===this.BREAK)break},defer:function(a){setTimeout(a,0)},toArray:function(c){return c.toArray?c.toArray():a.call(c)},isUndefined:function(a){return a===void 0},isNull:function(a){return a===null},isNaN:function(a){return a!==a},isArray:Array.isArray||function(a){return a.constructor===Array},isObject:function(a){return a===$/;"	r
d	js/libs/dat.gui.min.js	/^function t(a,b){var c=a.getRoot(),d=c.__rememberedObjects.indexOf(b.object);if(d!=-1){var e=c.__rememberedObjectIndecesToControllers[d];e===void 0&&(e={},c.__rememberedObjectIndecesToControllers[d]=e);e[b.property]=b;if(c.load&&c.load.remembered){c=c.load.remembered;if(c[a.preset])c=c[a.preset];else if(c[w])c=c[w];else return;if(c[d]&&c[d][b.property]!==void 0)d=c[d][b.property],b.initialValue=d,b.setValue(d)}}}function I(a){var b=a.__save_row=document.createElement("li");g.addClass(a.domElement,$/;"	r
dat	js/libs/dat.gui.min.js	/^var dat=dat||{};dat.gui=dat.gui||{};dat.utils=dat.utils||{};dat.controllers=dat.controllers||{};dat.dom=dat.dom||{};dat.color=dat.color||{};dat.utils.css=function(){return{load:function(e,a){var a=a||document,c=a.createElement("link");c.type="text\/css";c.rel="stylesheet";c.href=e;a.getElementsByTagName("head")[0].appendChild(c)},inject:function(e,a){var a=a||document,c=document.createElement("style");c.type="text\/css";c.innerHTML=e;a.getElementsByTagName("head")[0].appendChild(c)}}}();$/;"	r
display	js/libs/dat.gui.min.js	/^document.createElement("div");a.extend(this.domElement.style,{position:"fixed",display:"none",zIndex:"1001",opacity:0,WebkitTransition:"-webkit-transform 0.2s ease-out, opacity 0.2s linear"});document.body.appendChild(this.backgroundElement);document.body.appendChild(this.domElement);var c=this;e.bind(this.backgroundElement,"click",function(){c.hide()})};c.prototype.show=function(){var c=this;this.backgroundElement.style.display="block";this.domElement.style.display="block";this.domElement.style.opacity=$/;"	r
dom	js/libs/dat.gui.min.js	/^dat.dom.dom=function(e){function a(b){if(b==="0"||e.isUndefined(b))return 0;b=b.match(d);return!e.isNull(b)?parseFloat(b[1]):0}var c={};e.each({HTMLEvents:["change"],MouseEvents:["click","mousemove","mousedown","mouseup","mouseover"],KeyboardEvents:["keydown"]},function(b,a){e.each(b,function(b){c[b]=a})});var d=\/(\\d+(\\.\\d+)?)px\/,f={makeSelectable:function(b,a){if(!(b===void 0||b.style===void 0))b.onselectstart=a?function(){return false}:function(){},b.style.MozUserSelect=a?"auto":"none",b.style.KhtmlUserSelect=$/;"	r
e	js/libs/dat.gui.min.js	/^"click",function(){a.save()});g.bind(e,"click",function(){var b=prompt("Enter a new preset name.");b&&a.saveAs(b)});g.bind(f,"click",function(){a.revert()})}function J(a){function b(f){f.preventDefault();e=f.clientX;g.addClass(a.__closeButton,k.CLASS_DRAG);g.bind(window,"mousemove",c);g.bind(window,"mouseup",d);return false}function c(b){b.preventDefault();a.width+=e-b.clientX;a.onResize();e=b.clientX;return false}function d(){g.removeClass(a.__closeButton,k.CLASS_DRAG);g.unbind(window,"mousemove",$/;"	r
e	js/libs/dat.gui.min.js	/^1:b<0&&(b=0);e>1?e=1:e<0&&(e=0);p.__color.v=b;p.__color.s=e;p.setValue(p.__color.toOriginal());return false}function s(b){b.preventDefault();var c=a.getHeight(p.__hue_field),d=a.getOffset(p.__hue_field),b=1-(b.clientY-d.top+document.body.scrollTop)\/c;b>1?b=1:b<0&&(b=0);p.__color.h=b*360;p.setValue(p.__color.toOriginal());return false}h.superclass.call(this,e,l);this.__color=new c(this.getValue());this.__temp=new c(0);var p=this;this.domElement=document.createElement("div");a.makeSelectable(this.domElement,$/;"	r
e	js/libs/dat.gui.min.js	/^c);g.unbind(window,"mouseup",d)}a.__resize_handle=document.createElement("div");i.extend(a.__resize_handle.style,{width:"6px",marginLeft:"-3px",height:"200px",cursor:"ew-resize",position:"absolute"});var e;g.bind(a.__resize_handle,"mousedown",b);g.bind(a.__closeButton,"mousedown",b);a.domElement.insertBefore(a.__resize_handle,a.domElement.firstElementChild)}function D(a,b){a.domElement.style.width=b+"px";if(a.__save_row&&a.autoPlace)a.__save_row.style.width=b+"px";if(a.__closeButton)a.__closeButton.style.width=$/;"	r
e	js/libs/dat.gui.min.js	/^function(c,b){function e(){h.setValue(h.__input.value)}d.superclass.call(this,c,b);var h=this;this.__input=document.createElement("input");this.__input.setAttribute("type","text");a.bind(this.__input,"keyup",e);a.bind(this.__input,"change",e);a.bind(this.__input,"blur",function(){h.__onFinishChange&&h.__onFinishChange.call(h,h.getValue())});a.bind(this.__input,"keydown",function(a){a.keyCode===13&&this.blur()});this.updateDisplay();this.domElement.appendChild(this.__input)};d.superclass=e;c.extend(d.prototype,$/;"	r
e	js/libs/dat.gui.min.js	/^true;var e=u&&localStorage.getItem(document.location.href+".isLocal")==="true";Object.defineProperties(this,{parent:{get:function(){return a.parent}},scrollable:{get:function(){return a.scrollable}},autoPlace:{get:function(){return a.autoPlace}},preset:{get:function(){return d.parent?d.getRoot().preset:a.load.preset},set:function(b){d.parent?d.getRoot().preset=b:a.load.preset=b;for(b=0;b<this.__preset_select.length;b++)if(this.__preset_select[b].value==this.preset)this.__preset_select.selectedIndex=$/;"	r
each	js/libs/dat.gui.min.js	/^each:function(a,d,f){if(e&&a.forEach===e)a.forEach(d,f);else if(a.length===a.length+0)for(var b=0,n=a.length;b<n;b++){if(b in a&&d.call(f,a[b],b)===this.BREAK)break}else for(b in a)if(d.call(f,a[b],b)===this.BREAK)break},defer:function(a){setTimeout(a,0)},toArray:function(c){return c.toArray?c.toArray():a.call(c)},isUndefined:function(a){return a===void 0},isNull:function(a){return a===null},isNaN:function(a){return a!==a},isArray:Array.isArray||function(a){return a.constructor===Array},isObject:function(a){return a===$/;"	r
extend	js/libs/dat.gui.min.js	/^dat.utils.common=function(){var e=Array.prototype.forEach,a=Array.prototype.slice;return{BREAK:{},extend:function(c){this.each(a.call(arguments,1),function(a){for(var f in a)this.isUndefined(a[f])||(c[f]=a[f])},this);return c},defaults:function(c){this.each(a.call(arguments,1),function(a){for(var f in a)this.isUndefined(c[f])&&(c[f]=a[f])},this);return c},compose:function(){var c=a.call(arguments);return function(){for(var d=a.call(arguments),f=c.length-1;f>=0;f--)d=[c[f].apply(this,d)];return d[0]}},$/;"	r
f	js/libs/dat.gui.min.js	/^((e=a)?g.bind(window,"unload",b):g.unbind(window,"unload",b),localStorage.setItem(document.location.href+".isLocal",a))}}});if(i.isUndefined(a.parent)){a.closed=false;g.addClass(this.domElement,k.CLASS_MAIN);g.makeSelectable(this.domElement,false);if(u&&e){d.useLocalStorage=true;var f=localStorage.getItem(document.location.href+".gui");if(f)a.load=JSON.parse(f)}this.__closeButton=document.createElement("div");this.__closeButton.innerHTML=k.TEXT_CLOSED;g.addClass(this.__closeButton,k.CLASS_CLOSE_BUTTON);$/;"	r
f	js/libs/dat.gui.min.js	/^dat.color.interpret=function(e,a){var c,d,f=[{litmus:a.isString,conversions:{THREE_CHAR_HEX:{read:function(a){a=a.match(\/^#([A-F0-9])([A-F0-9])([A-F0-9])$\/i);return a===null?false:{space:"HEX",hex:parseInt("0x"+a[1].toString()+a[1].toString()+a[2].toString()+a[2].toString()+a[3].toString()+a[3].toString())}},write:e},SIX_CHAR_HEX:{read:function(a){a=a.match(\/^#([A-F0-9]{6})$\/i);return a===null?false:{space:"HEX",hex:parseInt("0x"+a[1].toString())}},write:e},CSS_RGB:{read:function(a){a=a.match(\/^rgb\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)\/);$/;"	r
f	js/libs/dat.gui.min.js	/^dat.controllers.NumberController=function(e,a){var c=function(d,f,b){c.superclass.call(this,d,f);b=b||{};this.__min=b.min;this.__max=b.max;this.__step=b.step;d=this.__impliedStep=a.isUndefined(this.__step)?this.initialValue==0?1:Math.pow(10,Math.floor(Math.log(this.initialValue)\/Math.LN10))\/10:this.__step;d=d.toString();this.__precision=d.indexOf(".")>-1?d.length-d.indexOf(".")-1:0};c.superclass=e;a.extend(c.prototype,e.prototype,{setValue:function(a){if(this.__min!==void 0&&a<this.__min)a=this.__min;$/;"	r
f	js/libs/dat.gui.min.js	/^dat.dom.dom=function(e){function a(b){if(b==="0"||e.isUndefined(b))return 0;b=b.match(d);return!e.isNull(b)?parseFloat(b[1]):0}var c={};e.each({HTMLEvents:["change"],MouseEvents:["click","mousemove","mousedown","mouseup","mouseover"],KeyboardEvents:["keydown"]},function(b,a){e.each(b,function(b){c[b]=a})});var d=\/(\\d+(\\.\\d+)?)px\/,f={makeSelectable:function(b,a){if(!(b===void 0||b.style===void 0))b.onselectstart=a?function(){return false}:function(){},b.style.MozUserSelect=a?"auto":"none",b.style.KhtmlUserSelect=$/;"	r
factory	js/libs/dat.gui.min.js	/^dat.controllers.factory=function(e,a,c,d,f,b,n){return function(h,j,m,l){var o=h[j];if(n.isArray(m)||n.isObject(m))return new e(h,j,m);if(n.isNumber(o))return n.isNumber(m)&&n.isNumber(l)?new c(h,j,m,l):new a(h,j,{min:m,max:l});if(n.isString(o))return new d(h,j);if(n.isFunction(o))return new f(h,j,"");if(n.isBoolean(o))return new b(h,j)}}(dat.controllers.OptionController,dat.controllers.NumberControllerBox,dat.controllers.NumberControllerSlider,dat.controllers.StringController=function(e,a,c){var d=$/;"	r
factoryArgs	js/libs/dat.gui.min.js	/^g.addClass(c,typeof b.getValue());p(a,c,b);a.__controllers.push(b);return b}function s(a,b,d){var c=document.createElement("li");b&&c.appendChild(b);d?a.__ul.insertBefore(c,params.before):a.__ul.appendChild(c);a.onResize();return c}function p(a,d,c){c.__li=d;c.__gui=a;i.extend(c,{options:function(b){if(arguments.length>1)return c.remove(),q(a,c.object,c.property,{before:c.__li.nextElementSibling,factoryArgs:[i.toArray(arguments)]});if(i.isArray(b)||i.isObject(b))return c.remove(),q(a,c.object,c.property,$/;"	r
factoryArgs	js/libs/dat.gui.min.js	/^g.addClass(d,"has-slider");c.domElement.insertBefore(e.domElement,c.domElement.firstElementChild)}else if(c instanceof h){var f=function(b){return i.isNumber(c.__min)&&i.isNumber(c.__max)?(c.remove(),q(a,c.object,c.property,{before:c.__li.nextElementSibling,factoryArgs:[c.__min,c.__max,c.__step]})):b};c.min=i.compose(f,c.min);c.max=i.compose(f,c.max)}else if(c instanceof b)g.bind(d,"click",function(){g.fakeEvent(c.__checkbox,"click")}),g.bind(c.__checkbox,"click",function(a){a.stopPropagation()});$/;"	r
factoryArgs	js/libs/dat.gui.min.js	/^{before:c.__li.nextElementSibling,factoryArgs:[b]})},name:function(a){c.__li.firstElementChild.firstElementChild.innerHTML=a;return c},listen:function(){c.__gui.listen(c);return c},remove:function(){c.__gui.remove(c);return c}});if(c instanceof j){var e=new h(c.object,c.property,{min:c.__min,max:c.__max,step:c.__step});i.each(["updateDisplay","onChange","onFinishChange"],function(a){var b=c[a],H=e[a];c[a]=e[a]=function(){var a=Array.prototype.slice.call(arguments);b.apply(c,a);return H.apply(e,a)}});$/;"	r
false	js/libs/dat.gui.min.js	/^false;var b=arguments.length>1?a.toArray(arguments):arguments[0];a.each(f,function(e){if(e.litmus(b))return a.each(e.conversions,function(e,f){c=e.read(b);if(d===false&&c!==false)return d=c,c.conversionName=f,c.conversion=e,a.BREAK}),a.BREAK});return d}}(dat.color.toString,dat.utils.common);$/;"	r
g	js/libs/dat.gui.min.js	/^1};j.COMPONENTS="r,g,b,h,s,v,hex,a".split(",");d.extend(j.prototype,{toString:function(){return c(this)},toOriginal:function(){return this.__state.conversion.write(this)}});f(j.prototype,"r",2);f(j.prototype,"g",1);f(j.prototype,"b",0);b(j.prototype,"h");b(j.prototype,"s");b(j.prototype,"v");Object.defineProperty(j.prototype,"a",{get:function(){return this.__state.a},set:function(a){this.__state.a=a}});Object.defineProperty(j.prototype,"hex",{get:function(){if(!this.__state.space!=="HEX")this.__state.hex=$/;"	r
getOffset	js/libs/dat.gui.min.js	/^getOffset:function(a){var d={left:0,top:0};if(a.offsetParent){do d.left+=a.offsetLeft,d.top+=a.offsetTop;while(a=a.offsetParent)}return d},isActive:function(a){return a===document.activeElement&&(a.type||a.href)}};return f}(dat.utils.common);$/;"	r
getRoot	js/libs/dat.gui.min.js	/^var b=this;i.each(Array.prototype.slice.call(arguments),function(a){b.__rememberedObjects.length==0&&I(b);b.__rememberedObjects.indexOf(a)==-1&&b.__rememberedObjects.push(a)});this.autoPlace&&D(this,this.width)},getRoot:function(){for(var a=this;a.parent;)a=a.parent;return a},getSaveObject:function(){var a=this.load;a.closed=this.closed;if(this.__rememberedObjects.length>0){a.preset=this.preset;if(!a.remembered)a.remembered={};a.remembered[this.preset]=z(this)}a.folders={};i.each(this.__folders,function(b,$/;"	r
getValue	js/libs/dat.gui.min.js	/^dat.controllers.Controller=function(e){var a=function(a,d){this.initialValue=a[d];this.domElement=document.createElement("div");this.object=a;this.property=d;this.__onFinishChange=this.__onChange=void 0};e.extend(a.prototype,{onChange:function(a){this.__onChange=a;return this},onFinishChange:function(a){this.__onFinishChange=a;return this},setValue:function(a){this.object[this.property]=a;this.__onChange&&this.__onChange.call(this,a);this.updateDisplay();return this},getValue:function(){return this.object[this.property]},$/;"	r
h	js/libs/dat.gui.min.js	/^"HEX")b.__state[c]=a.component_from_hex(b.__state.hex,e);else if(b.__state.space==="HSV")d.extend(b.__state,a.hsv_to_rgb(b.__state.h,b.__state.s,b.__state.v));else throw"Corrupted color state";}function h(b){var c=a.rgb_to_hsv(b.r,b.g,b.b);d.extend(b.__state,{s:c.s,v:c.v});if(d.isNaN(c.h)){if(d.isUndefined(b.__state.h))b.__state.h=0}else b.__state.h=c.h}var j=function(){this.__state=e.apply(this,arguments);if(this.__state===false)throw"Failed to interpret color arguments";this.__state.a=this.__state.a||$/;"	r
h	js/libs/dat.gui.min.js	/^dat.controllers.NumberControllerBox=function(e,a,c){var d=function(f,b,e){function h(){var a=parseFloat(l.__input.value);c.isNaN(a)||l.setValue(a)}function j(a){var b=o-a.clientY;l.setValue(l.getValue()+b*l.__impliedStep);o=a.clientY}function m(){a.unbind(window,"mousemove",j);a.unbind(window,"mouseup",m)}this.__truncationSuspended=false;d.superclass.call(this,f,b,e);var l=this,o;this.__input=document.createElement("input");this.__input.setAttribute("type","text");a.bind(this.__input,"change",h);$/;"	r
h	js/libs/dat.gui.min.js	/^function(c,b){function e(){h.setValue(h.__input.value)}d.superclass.call(this,c,b);var h=this;this.__input=document.createElement("input");this.__input.setAttribute("type","text");a.bind(this.__input,"keyup",e);a.bind(this.__input,"change",e);a.bind(this.__input,"blur",function(){h.__onFinishChange&&h.__onFinishChange.call(h,h.getValue())});a.bind(this.__input,"keydown",function(a){a.keyCode===13&&this.blur()});this.updateDisplay();this.domElement.appendChild(this.__input)};d.superclass=e;c.extend(d.prototype,$/;"	r
hasClass	js/libs/dat.gui.min.js	/^c=d.indexOf(a);if(c!=-1)d.splice(c,1),b.className=d.join(" ")}}else b.className=void 0;return f},hasClass:function(a,d){return RegExp("(?:^|\\\\s+)"+d+"(?:\\\\s+|$)").test(a.className)||false},getWidth:function(b){b=getComputedStyle(b);return a(b["border-left-width"])+a(b["border-right-width"])+a(b["padding-left"])+a(b["padding-right"])+a(b.width)},getHeight:function(b){b=getComputedStyle(b);return a(b["border-top-width"])+a(b["border-bottom-width"])+a(b["padding-top"])+a(b["padding-bottom"])+a(b.height)},$/;"	r
height	js/libs/dat.gui.min.js	/^document.createElement("input");this.__input.type="text";this.__input_textShadow="0 1px 1px ";a.bind(this.__input,"keydown",function(a){a.keyCode===13&&g.call(this)});a.bind(this.__input,"blur",g);a.bind(this.__selector,"mousedown",function(){a.addClass(this,"drag").bind(window,"mouseup",function(){a.removeClass(p.__selector,"drag")})});var t=document.createElement("div");f.extend(this.__selector.style,{width:"122px",height:"102px",padding:"3px",backgroundColor:"#222",boxShadow:"0px 1px 3px rgba(0,0,0,0.3)"});$/;"	r
height	js/libs/dat.gui.min.js	/^{width:"100%",height:"100%",background:"none"});b(t,"top","rgba(0,0,0,0)","#000");f.extend(this.__hue_field.style,{width:"15px",height:"100px",display:"inline-block",border:"1px solid #555",cursor:"ns-resize"});n(this.__hue_field);f.extend(this.__input.style,{outline:"none",textAlign:"center",color:"#fff",border:0,fontWeight:"bold",textShadow:this.__input_textShadow+"rgba(0,0,0,0.7)"});a.bind(this.__saturation_field,"mousedown",o);a.bind(this.__field_knob,"mousedown",o);a.bind(this.__hue_field,"mousedown",$/;"	r
hex	js/libs/dat.gui.min.js	/^a.rgb_to_hex(this.r,this.g,this.b);return this.__state.hex},set:function(a){this.__state.space="HEX";this.__state.hex=a}});return j}(dat.color.interpret,dat.color.math=function(){var e;return{hsv_to_rgb:function(a,c,d){var e=a\/60-Math.floor(a\/60),b=d*(1-c),n=d*(1-e*c),c=d*(1-(1-e)*c),a=[[d,c,b],[n,d,b],[b,d,c],[b,n,d],[c,b,d],[d,b,n]][Math.floor(a\/60)%6];return{r:a[0]*255,g:a[1]*255,b:a[2]*255}},rgb_to_hsv:function(a,c,d){var e=Math.min(a,c,d),b=Math.max(a,c,d),e=b-e;if(b==0)return{h:NaN,s:0,v:0};$/;"	r
hex	js/libs/dat.gui.min.js	/^dat.color.interpret=function(e,a){var c,d,f=[{litmus:a.isString,conversions:{THREE_CHAR_HEX:{read:function(a){a=a.match(\/^#([A-F0-9])([A-F0-9])([A-F0-9])$\/i);return a===null?false:{space:"HEX",hex:parseInt("0x"+a[1].toString()+a[1].toString()+a[2].toString()+a[2].toString()+a[3].toString()+a[3].toString())}},write:e},SIX_CHAR_HEX:{read:function(a){a=a.match(\/^#([A-F0-9]{6})$\/i);return a===null?false:{space:"HEX",hex:parseInt("0x"+a[1].toString())}},write:e},CSS_RGB:{read:function(a){a=a.match(\/^rgb\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)\/);$/;"	r
hide	js/libs/dat.gui.min.js	/^0;this.domElement.style.webkitTransform="scale(1.1)";this.layout();a.defer(function(){c.backgroundElement.style.opacity=1;c.domElement.style.opacity=1;c.domElement.style.webkitTransform="scale(1)"})};c.prototype.hide=function(){var a=this,c=function(){a.domElement.style.display="none";a.backgroundElement.style.display="none";e.unbind(a.domElement,"webkitTransitionEnd",c);e.unbind(a.domElement,"transitionend",c);e.unbind(a.domElement,"oTransitionEnd",c)};e.bind(this.domElement,"webkitTransitionEnd",$/;"	r
inject	js/libs/dat.gui.min.js	/^var dat=dat||{};dat.gui=dat.gui||{};dat.utils=dat.utils||{};dat.controllers=dat.controllers||{};dat.dom=dat.dom||{};dat.color=dat.color||{};dat.utils.css=function(){return{load:function(e,a){var a=a||document,c=a.createElement("link");c.type="text\/css";c.rel="stylesheet";c.href=e;a.getElementsByTagName("head")[0].appendChild(c)},inject:function(e,a){var a=a||document,c=document.createElement("style");c.type="text\/css";c.innerHTML=e;a.getElementsByTagName("head")[0].appendChild(c)}}}();$/;"	r
interpret	js/libs/dat.gui.min.js	/^dat.color.interpret=function(e,a){var c,d,f=[{litmus:a.isString,conversions:{THREE_CHAR_HEX:{read:function(a){a=a.match(\/^#([A-F0-9])([A-F0-9])([A-F0-9])$\/i);return a===null?false:{space:"HEX",hex:parseInt("0x"+a[1].toString()+a[1].toString()+a[2].toString()+a[2].toString()+a[3].toString()+a[3].toString())}},write:e},SIX_CHAR_HEX:{read:function(a){a=a.match(\/^#([A-F0-9]{6})$\/i);return a===null?false:{space:"HEX",hex:parseInt("0x"+a[1].toString())}},write:e},CSS_RGB:{read:function(a){a=a.match(\/^rgb\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)\/);$/;"	r
isNumber	js/libs/dat.gui.min.js	/^Object(a)},isNumber:function(a){return a===a+0},isString:function(a){return a===a+""},isBoolean:function(a){return a===false||a===true},isFunction:function(a){return Object.prototype.toString.call(a)==="[object Function]"}}}();$/;"	r
j	js/libs/dat.gui.min.js	/^"mouseup",j)}function j(){a.unbind(window,"mousemove",q);a.unbind(window,"mouseup",j)}function g(){var a=d(this.value);a!==false?(p.__color.__state=a,p.setValue(p.__color.toOriginal())):this.value=p.__color.toString()}function i(){a.unbind(window,"mousemove",s);a.unbind(window,"mouseup",i)}function q(b){b.preventDefault();var c=a.getWidth(p.__saturation_field),d=a.getOffset(p.__saturation_field),e=(b.clientX-d.left+document.body.scrollLeft)\/c,b=1-(b.clientY-d.top+document.body.scrollTop)\/c;b>1?b=$/;"	r
j	js/libs/dat.gui.min.js	/^"rgb("+h+","+h+","+h+")"});this.__hue_knob.style.marginTop=(1-this.__color.h\/360)*100+"px";this.__temp.s=1;this.__temp.v=1;b(this.__saturation_field,"left","#fff",this.__temp.toString());f.extend(this.__input.style,{backgroundColor:this.__input.value=this.__color.toString(),color:"rgb("+h+","+h+","+h+")",textShadow:this.__input_textShadow+"rgba("+j+","+j+","+j+",.7)"})}});var j=["-moz-","-o-","-webkit-","-ms-",""];return h}(dat.controllers.Controller,dat.dom.dom,dat.color.Color=function(e,a,c,d){function f(a,$/;"	r
k	js/libs/dat.gui.min.js	/^0&&o(function(){E(a)});i.each(a,function(a){a.updateDisplay()})}e.inject(c);var w="Default",u;try{u="localStorage"in window&&window.localStorage!==null}catch(K){u=false}var x,F=true,v,A=false,G=[],k=function(a){function b(){localStorage.setItem(document.location.href+".gui",JSON.stringify(d.getSaveObject()))}function c(){var a=d.getRoot();a.width+=1;i.defer(function(){a.width-=1})}var d=this;this.domElement=document.createElement("div");this.__ul=document.createElement("ul");this.domElement.appendChild(this.__ul);$/;"	r
layout	js/libs/dat.gui.min.js	/^c);e.bind(this.domElement,"transitionend",c);e.bind(this.domElement,"oTransitionEnd",c);this.backgroundElement.style.opacity=0;this.domElement.style.opacity=0;this.domElement.style.webkitTransform="scale(1.1)"};c.prototype.layout=function(){this.domElement.style.left=window.innerWidth\/2-e.getWidth(this.domElement)\/2+"px";this.domElement.style.top=window.innerHeight\/2-e.getHeight(this.domElement)\/2+"px"};return c}(dat.dom.dom,dat.utils.common),dat.dom.dom,dat.utils.common);/;"	r
listen	js/libs/dat.gui.min.js	/^function(a){a.revert(a)});a||B(this.getRoot(),false)},listen:function(a){var b=this.__listening.length==0;this.__listening.push(a);b&&E(this.__listening)}});return k}(dat.utils.css,'<div id="dg-save" class="dg dialogue">\\n\\n  Here\\'s the new load parameter for your <code>GUI<\/code>\\'s constructor:\\n\\n  <textarea id="dg-new-constructor"><\/textarea>\\n\\n  <div id="dg-save-locally">\\n\\n    <input id="dg-local-storage" type="checkbox"\/> Automatically save\\n    values to <code>localStorage<\/code> on exit.\\n\\n    <div id="dg-local-explain">The values saved to <code>localStorage<\/code> will\\n      override those passed to <code>dat.GUI<\/code>\\'s constructor. This makes it\\n      easier to work incrementally, but <code>localStorage<\/code> is fragile,\\n      and your friends may not see the same values you do.\\n      \\n    <\/div>\\n    \\n  <\/div>\\n\\n<\/div>',$/;"	r
m	js/libs/dat.gui.min.js	/^this.domElement.appendChild(this.__closeButton);g.bind(this.__closeButton,"click",function(){d.closed=!d.closed})}else{if(a.closed===void 0)a.closed=true;var m=document.createTextNode(a.name);g.addClass(m,"controller-name");f=s(d,m);g.addClass(this.__ul,k.CLASS_CLOSED);g.addClass(f,"title");g.bind(f,"click",function(a){a.preventDefault();d.closed=!d.closed;return false});if(!a.closed)this.closed=false}a.autoPlace&&(i.isUndefined(a.parent)&&(F&&(v=document.createElement("div"),g.addClass(v,"dg"),g.addClass(v,$/;"	r
makeFullscreen	js/libs/dat.gui.min.js	/^a?"auto":"none",b.unselectable=a?"on":"off"},makeFullscreen:function(b,a,d){e.isUndefined(a)&&(a=true);e.isUndefined(d)&&(d=true);b.style.position="absolute";if(a)b.style.left=0,b.style.right=0;if(d)b.style.top=0,b.style.bottom=0},fakeEvent:function(b,a,d,f){var d=d||{},m=c[a];if(!m)throw Error("Event type "+a+" not supported.");var l=document.createEvent(m);switch(m){case "MouseEvents":l.initMouseEvent(a,d.bubbles||false,d.cancelable||true,window,d.clickCount||1,0,0,d.x||d.clientX||0,d.y||d.clientY||$/;"	r
marginLeft	js/libs/dat.gui.min.js	/^c);g.unbind(window,"mouseup",d)}a.__resize_handle=document.createElement("div");i.extend(a.__resize_handle.style,{width:"6px",marginLeft:"-3px",height:"200px",cursor:"ew-resize",position:"absolute"});var e;g.bind(a.__resize_handle,"mousedown",b);g.bind(a.__closeButton,"mousedown",b);a.domElement.insertBefore(a.__resize_handle,a.domElement.firstElementChild)}function D(a,b){a.domElement.style.width=b+"px";if(a.__save_row&&a.autoPlace)a.__save_row.style.width=b+"px";if(a.__closeButton)a.__closeButton.style.width=$/;"	r
marginTop	js/libs/dat.gui.min.js	/^"rgb("+h+","+h+","+h+")"});this.__hue_knob.style.marginTop=(1-this.__color.h\/360)*100+"px";this.__temp.s=1;this.__temp.v=1;b(this.__saturation_field,"left","#fff",this.__temp.toString());f.extend(this.__input.style,{backgroundColor:this.__input.value=this.__color.toString(),color:"rgb("+h+","+h+","+h+")",textShadow:this.__input_textShadow+"rgba("+j+","+j+","+j+",.7)"})}});var j=["-moz-","-o-","-webkit-","-ms-",""];return h}(dat.controllers.Controller,dat.dom.dom,dat.color.Color=function(e,a,c,d){function f(a,$/;"	r
marginTop	js/libs/dat.gui.min.js	/^if(a!==false){var e=false;f.each(c.COMPONENTS,function(b){if(!f.isUndefined(a[b])&&!f.isUndefined(this.__color.__state[b])&&a[b]!==this.__color.__state[b])return e=true,{}},this);e&&f.extend(this.__color.__state,a)}f.extend(this.__temp.__state,this.__color.__state);this.__temp.a=1;var h=this.__color.v<0.5||this.__color.s>0.5?255:0,j=255-h;f.extend(this.__field_knob.style,{marginLeft:100*this.__color.s-7+"px",marginTop:100*(1-this.__color.v)-7+"px",backgroundColor:this.__temp.toString(),border:this.__field_knob_border+$/;"	r
max	js/libs/dat.gui.min.js	/^dat.controllers.NumberControllerSlider=function(e,a,c,d,f){var b=function(d,c,f,e,l){function o(b){b.preventDefault();var d=a.getOffset(g.__background),c=a.getWidth(g.__background);g.setValue(g.__min+(g.__max-g.__min)*((b.clientX-d.left)\/(d.left+c-d.left)));return false}function y(){a.unbind(window,"mousemove",o);a.unbind(window,"mouseup",y);g.__onFinishChange&&g.__onFinishChange.call(g,g.getValue())}b.superclass.call(this,d,c,{min:f,max:e,step:l});var g=this;this.__background=document.createElement("div");$/;"	r
max	js/libs/dat.gui.min.js	/^dat.controllers.factory=function(e,a,c,d,f,b,n){return function(h,j,m,l){var o=h[j];if(n.isArray(m)||n.isObject(m))return new e(h,j,m);if(n.isNumber(o))return n.isNumber(m)&&n.isNumber(l)?new c(h,j,m,l):new a(h,j,{min:m,max:l});if(n.isString(o))return new d(h,j);if(n.isFunction(o))return new f(h,j,"");if(n.isBoolean(o))return new b(h,j)}}(dat.controllers.OptionController,dat.controllers.NumberControllerBox,dat.controllers.NumberControllerSlider,dat.controllers.StringController=function(e,a,c){var d=$/;"	r
min	js/libs/dat.gui.min.js	/^else if(this.__max!==void 0&&a>this.__max)a=this.__max;this.__step!==void 0&&a%this.__step!=0&&(a=Math.round(a\/this.__step)*this.__step);return c.superclass.prototype.setValue.call(this,a)},min:function(a){this.__min=a;return this},max:function(a){this.__max=a;return this},step:function(a){this.__step=a;return this}});return c}(dat.controllers.Controller,dat.utils.common);$/;"	r
n	js/libs/dat.gui.min.js	/^each:function(a,d,f){if(e&&a.forEach===e)a.forEach(d,f);else if(a.length===a.length+0)for(var b=0,n=a.length;b<n;b++){if(b in a&&d.call(f,a[b],b)===this.BREAK)break}else for(b in a)if(d.call(f,a[b],b)===this.BREAK)break},defer:function(a){setTimeout(a,0)},toArray:function(c){return c.toArray?c.toArray():a.call(c)},isUndefined:function(a){return a===void 0},isNull:function(a){return a===null},isNaN:function(a){return a!==a},isArray:Array.isArray||function(a){return a.constructor===Array},isObject:function(a){return a===$/;"	r
name	js/libs/dat.gui.min.js	/^{before:c.__li.nextElementSibling,factoryArgs:[b]})},name:function(a){c.__li.firstElementChild.firstElementChild.innerHTML=a;return c},listen:function(){c.__gui.listen(c);return c},remove:function(){c.__gui.remove(c);return c}});if(c instanceof j){var e=new h(c.object,c.property,{min:c.__min,max:c.__max,step:c.__step});i.each(["updateDisplay","onChange","onFinishChange"],function(a){var b=c[a],H=e[a];c[a]=e[a]=function(){var a=Array.prototype.slice.call(arguments);b.apply(c,a);return H.apply(e,a)}});$/;"	r
o	js/libs/dat.gui.min.js	/^a.bind(this.__input,"blur",function(){h();l.__onFinishChange&&l.__onFinishChange.call(l,l.getValue())});a.bind(this.__input,"mousedown",function(b){a.bind(window,"mousemove",j);a.bind(window,"mouseup",m);o=b.clientY});a.bind(this.__input,"keydown",function(a){if(a.keyCode===13)l.__truncationSuspended=true,this.blur(),l.__truncationSuspended=false});this.updateDisplay();this.domElement.appendChild(this.__input)};d.superclass=e;c.extend(d.prototype,e.prototype,{updateDisplay:function(){var a=this.__input,$/;"	r
o	js/libs/dat.gui.min.js	/^a.style.cssText+="background: -o-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);";a.style.cssText+="background: -ms-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);";a.style.cssText+="background: linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);"}var h=function(e,l){function o(b){q(b);a.bind(window,"mousemove",q);a.bind(window,$/;"	r
o	js/libs/dat.gui.min.js	/^dat.controllers.NumberControllerSlider=function(e,a,c,d,f){var b=function(d,c,f,e,l){function o(b){b.preventDefault();var d=a.getOffset(g.__background),c=a.getWidth(g.__background);g.setValue(g.__min+(g.__max-g.__min)*((b.clientX-d.left)\/(d.left+c-d.left)));return false}function y(){a.unbind(window,"mousemove",o);a.unbind(window,"mouseup",y);g.__onFinishChange&&g.__onFinishChange.call(g,g.getValue())}b.superclass.call(this,d,c,{min:f,max:e,step:l});var g=this;this.__background=document.createElement("div");$/;"	r
o	js/libs/dat.gui.min.js	/^localStorage.getItem(document.location.href+".isLocal")==="true"&&b.setAttribute("checked","checked");var o=function(){l.style.display=a.useLocalStorage?"block":"none"};o();g.bind(b,"change",function(){a.useLocalStorage=!a.useLocalStorage;o()})}var h=document.getElementById("dg-new-constructor");g.bind(h,"keydown",function(a){a.metaKey&&(a.which===67||a.keyCode==67)&&x.hide()});g.bind(c,"click",function(){h.innerHTML=JSON.stringify(a.getSaveObject(),void 0,2);x.show();h.focus();h.select()});g.bind(d,$/;"	r
onFinishChange	js/libs/dat.gui.min.js	/^dat.controllers.Controller=function(e){var a=function(a,d){this.initialValue=a[d];this.domElement=document.createElement("div");this.object=a;this.property=d;this.__onFinishChange=this.__onChange=void 0};e.extend(a.prototype,{onChange:function(a){this.__onChange=a;return this},onFinishChange:function(a){this.__onFinishChange=a;return this},setValue:function(a){this.object[this.property]=a;this.__onChange&&this.__onChange.call(this,a);this.updateDisplay();return this},getValue:function(){return this.object[this.property]},$/;"	r
opacity	js/libs/dat.gui.min.js	/^0;this.domElement.style.webkitTransform="scale(1.1)";this.layout();a.defer(function(){c.backgroundElement.style.opacity=1;c.domElement.style.opacity=1;c.domElement.style.webkitTransform="scale(1)"})};c.prototype.hide=function(){var a=this,c=function(){a.domElement.style.display="none";a.backgroundElement.style.display="none";e.unbind(a.domElement,"webkitTransitionEnd",c);e.unbind(a.domElement,"transitionend",c);e.unbind(a.domElement,"oTransitionEnd",c)};e.bind(this.domElement,"webkitTransitionEnd",$/;"	r
opacity	js/libs/dat.gui.min.js	/^c);e.bind(this.domElement,"transitionend",c);e.bind(this.domElement,"oTransitionEnd",c);this.backgroundElement.style.opacity=0;this.domElement.style.opacity=0;this.domElement.style.webkitTransform="scale(1.1)"};c.prototype.layout=function(){this.domElement.style.left=window.innerWidth\/2-e.getWidth(this.domElement)\/2+"px";this.domElement.style.top=window.innerHeight\/2-e.getHeight(this.domElement)\/2+"px"};return c}(dat.dom.dom,dat.utils.common),dat.dom.dom,dat.utils.common);/;"	r
opacity	js/libs/dat.gui.min.js	/^document.createElement("div");a.extend(this.domElement.style,{position:"fixed",display:"none",zIndex:"1001",opacity:0,WebkitTransition:"-webkit-transform 0.2s ease-out, opacity 0.2s linear"});document.body.appendChild(this.backgroundElement);document.body.appendChild(this.domElement);var c=this;e.bind(this.backgroundElement,"click",function(){c.hide()})};c.prototype.show=function(){var c=this;this.backgroundElement.style.display="block";this.domElement.style.display="block";this.domElement.style.opacity=$/;"	r
opacity	js/libs/dat.gui.min.js	/^function(a){a.domElement.style.zIndex=A?-999:999;a.domElement.style.opacity=A?0:1})};k.CLASS_AUTO_PLACE="a";k.CLASS_AUTO_PLACE_CONTAINER="ac";k.CLASS_MAIN="main";k.CLASS_CONTROLLER_ROW="cr";k.CLASS_TOO_TALL="taller-than-window";k.CLASS_CLOSED="closed";k.CLASS_CLOSE_BUTTON="close-button";k.CLASS_DRAG="drag";k.DEFAULT_WIDTH=245;k.TEXT_CLOSED="Close Controls";k.TEXT_OPEN="Open Controls";g.bind(window,"keydown",function(a){document.activeElement.type!=="text"&&(a.which===72||a.keyCode==72)&&k.toggleHide()},$/;"	r
open	js/libs/dat.gui.min.js	/^a+'"');var b={name:a,parent:this};b.autoPlace=this.autoPlace;if(this.load&&this.load.folders&&this.load.folders[a])b.closed=this.load.folders[a].closed,b.load=this.load.folders[a];b=new k(b);this.__folders[a]=b;a=s(this,b.domElement);g.addClass(a,"folder");return b},open:function(){this.closed=false},close:function(){this.closed=true},onResize:function(){var a=this.getRoot();if(a.scrollable){var b=g.getOffset(a.__ul).top,c=0;i.each(a.__ul.childNodes,function(b){a.autoPlace&&b===a.__save_row||(c+=$/;"	r
parent	js/libs/dat.gui.min.js	/^a+'"');var b={name:a,parent:this};b.autoPlace=this.autoPlace;if(this.load&&this.load.folders&&this.load.folders[a])b.closed=this.load.folders[a].closed,b.load=this.load.folders[a];b=new k(b);this.__folders[a]=b;a=s(this,b.domElement);g.addClass(a,"folder");return b},open:function(){this.closed=false},close:function(){this.closed=true},onResize:function(){var a=this.getRoot();if(a.scrollable){var b=g.getOffset(a.__ul).top,c=0;i.each(a.__ul.childNodes,function(b){a.autoPlace&&b===a.__save_row||(c+=$/;"	r
position	js/libs/dat.gui.min.js	/^a?"auto":"none",b.unselectable=a?"on":"off"},makeFullscreen:function(b,a,d){e.isUndefined(a)&&(a=true);e.isUndefined(d)&&(d=true);b.style.position="absolute";if(a)b.style.left=0,b.style.right=0;if(d)b.style.top=0,b.style.bottom=0},fakeEvent:function(b,a,d,f){var d=d||{},m=c[a];if(!m)throw Error("Event type "+a+" not supported.");var l=document.createEvent(m);switch(m){case "MouseEvents":l.initMouseEvent(a,d.bubbles||false,d.cancelable||true,window,d.clickCount||1,0,0,d.x||d.clientX||0,d.y||d.clientY||$/;"	r
position	js/libs/dat.gui.min.js	/^window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e){window.setTimeout(e,1E3\/60)}}(),dat.dom.CenteredDiv=function(e,a){var c=function(){this.backgroundElement=document.createElement("div");a.extend(this.backgroundElement.style,{backgroundColor:"rgba(0,0,0,0.8)",top:0,left:0,display:"none",zIndex:"1000",opacity:0,WebkitTransition:"opacity 0.2s linear"});e.makeFullscreen(this.backgroundElement);this.backgroundElement.style.position="fixed";this.domElement=$/;"	r
preset	js/libs/dat.gui.min.js	/^c){a.folders[c]=b.getSaveObject()});return a},save:function(){if(!this.load.remembered)this.load.remembered={};this.load.remembered[this.preset]=z(this);B(this,false)},saveAs:function(a){if(!this.load.remembered)this.load.remembered={},this.load.remembered[w]=z(this,true);this.load.remembered[a]=z(this);this.preset=a;C(this,a,true)},revert:function(a){i.each(this.__controllers,function(b){this.getRoot().load.remembered?t(a||this.getRoot(),b):b.setValue(b.initialValue)},this);i.each(this.__folders,$/;"	r
q	js/libs/dat.gui.min.js	/^dat.GUI=dat.gui.GUI=function(e,a,c,d,f,b,n,h,j,m,l,o,y,g,i){function q(a,b,r,c){if(b[r]===void 0)throw Error("Object "+b+' has no property "'+r+'"');c.color?b=new l(b,r):(b=[b,r].concat(c.factoryArgs),b=d.apply(a,b));if(c.before instanceof f)c.before=c.before.__li;t(a,b);g.addClass(b.domElement,"c");r=document.createElement("span");g.addClass(r,"property-name");r.innerHTML=b.property;var e=document.createElement("div");e.appendChild(r);e.appendChild(b.domElement);c=s(a,e,c.before);g.addClass(c,k.CLASS_CONTROLLER_ROW);$/;"	r
remember	js/libs/dat.gui.min.js	/^g.getHeight(b))});window.innerHeight-b-20<c?(g.addClass(a.domElement,k.CLASS_TOO_TALL),a.__ul.style.height=window.innerHeight-b-20+"px"):(g.removeClass(a.domElement,k.CLASS_TOO_TALL),a.__ul.style.height="auto")}a.__resize_handle&&i.defer(function(){a.__resize_handle.style.height=a.__ul.offsetHeight+"px"});if(a.__closeButton)a.__closeButton.style.width=a.width+"px"},remember:function(){if(i.isUndefined(x))x=new y,x.domElement.innerHTML=a;if(this.parent)throw Error("You can only call remember on a top level GUI.");$/;"	r
revert	js/libs/dat.gui.min.js	/^c){a.folders[c]=b.getSaveObject()});return a},save:function(){if(!this.load.remembered)this.load.remembered={};this.load.remembered[this.preset]=z(this);B(this,false)},saveAs:function(a){if(!this.load.remembered)this.load.remembered={},this.load.remembered[w]=z(this,true);this.load.remembered[a]=z(this);this.preset=a;C(this,a,true)},revert:function(a){i.each(this.__controllers,function(b){this.getRoot().load.remembered?t(a||this.getRoot(),b):b.setValue(b.initialValue)},this);i.each(this.__folders,$/;"	r
rgb_to_hex	js/libs/dat.gui.min.js	/^a=a==b?(c-d)\/e:c==b?2+(d-a)\/e:4+(a-c)\/e;a\/=6;a<0&&(a+=1);return{h:a*360,s:e\/b,v:b\/255}},rgb_to_hex:function(a,c,d){a=this.hex_with_component(0,2,a);a=this.hex_with_component(a,1,c);return a=this.hex_with_component(a,0,d)},component_from_hex:function(a,c){return a>>c*8&255},hex_with_component:function(a,c,d){return d<<(e=c*8)|a&~(255<<e)}}}(),dat.color.toString,dat.utils.common),dat.color.interpret,dat.utils.common),dat.utils.requestAnimationFrame=function(){return window.webkitRequestAnimationFrame||$/;"	r
rgb_to_hsv	js/libs/dat.gui.min.js	/^a.rgb_to_hex(this.r,this.g,this.b);return this.__state.hex},set:function(a){this.__state.space="HEX";this.__state.hex=a}});return j}(dat.color.interpret,dat.color.math=function(){var e;return{hsv_to_rgb:function(a,c,d){var e=a\/60-Math.floor(a\/60),b=d*(1-c),n=d*(1-e*c),c=d*(1-(1-e)*c),a=[[d,c,b],[n,d,b],[b,d,c],[b,n,d],[c,b,d],[d,b,n]][Math.floor(a\/60)%6];return{r:a[0]*255,g:a[1]*255,b:a[2]*255}},rgb_to_hsv:function(a,c,d){var e=Math.min(a,c,d),b=Math.max(a,c,d),e=b-e;if(b==0)return{h:NaN,s:0,v:0};$/;"	r
s	js/libs/dat.gui.min.js	/^"rgb("+h+","+h+","+h+")"});this.__hue_knob.style.marginTop=(1-this.__color.h\/360)*100+"px";this.__temp.s=1;this.__temp.v=1;b(this.__saturation_field,"left","#fff",this.__temp.toString());f.extend(this.__input.style,{backgroundColor:this.__input.value=this.__color.toString(),color:"rgb("+h+","+h+","+h+")",textShadow:this.__input_textShadow+"rgba("+j+","+j+","+j+",.7)"})}});var j=["-moz-","-o-","-webkit-","-ms-",""];return h}(dat.controllers.Controller,dat.dom.dom,dat.color.Color=function(e,a,c,d){function f(a,$/;"	r
s	js/libs/dat.gui.min.js	/^1:b<0&&(b=0);e>1?e=1:e<0&&(e=0);p.__color.v=b;p.__color.s=e;p.setValue(p.__color.toOriginal());return false}function s(b){b.preventDefault();var c=a.getHeight(p.__hue_field),d=a.getOffset(p.__hue_field),b=1-(b.clientY-d.top+document.body.scrollTop)\/c;b>1?b=1:b<0&&(b=0);p.__color.h=b*360;p.setValue(p.__color.toOriginal());return false}h.superclass.call(this,e,l);this.__color=new c(this.getValue());this.__temp=new c(0);var p=this;this.domElement=document.createElement("div");a.makeSelectable(this.domElement,$/;"	r
s	js/libs/dat.gui.min.js	/^g.addClass(c,typeof b.getValue());p(a,c,b);a.__controllers.push(b);return b}function s(a,b,d){var c=document.createElement("li");b&&c.appendChild(b);d?a.__ul.insertBefore(c,params.before):a.__ul.appendChild(c);a.onResize();return c}function p(a,d,c){c.__li=d;c.__gui=a;i.extend(c,{options:function(b){if(arguments.length>1)return c.remove(),q(a,c.object,c.property,{before:c.__li.nextElementSibling,factoryArgs:[i.toArray(arguments)]});if(i.isArray(b)||i.isObject(b))return c.remove(),q(a,c.object,c.property,$/;"	r
save	js/libs/dat.gui.min.js	/^c){a.folders[c]=b.getSaveObject()});return a},save:function(){if(!this.load.remembered)this.load.remembered={};this.load.remembered[this.preset]=z(this);B(this,false)},saveAs:function(a){if(!this.load.remembered)this.load.remembered={},this.load.remembered[w]=z(this,true);this.load.remembered[a]=z(this);this.preset=a;C(this,a,true)},revert:function(a){i.each(this.__controllers,function(b){this.getRoot().load.remembered?t(a||this.getRoot(),b):b.setValue(b.initialValue)},this);i.each(this.__folders,$/;"	r
scrollable	js/libs/dat.gui.min.js	/^true;var e=u&&localStorage.getItem(document.location.href+".isLocal")==="true";Object.defineProperties(this,{parent:{get:function(){return a.parent}},scrollable:{get:function(){return a.scrollable}},autoPlace:{get:function(){return a.autoPlace}},preset:{get:function(){return d.parent?d.getRoot().preset:a.load.preset},set:function(b){d.parent?d.getRoot().preset=b:a.load.preset=b;for(b=0;b<this.__preset_select.length;b++)if(this.__preset_select[b].value==this.preset)this.__preset_select.selectedIndex=$/;"	r
set	js/libs/dat.gui.min.js	/^a.rgb_to_hex(this.r,this.g,this.b);return this.__state.hex},set:function(a){this.__state.space="HEX";this.__state.hex=a}});return j}(dat.color.interpret,dat.color.math=function(){var e;return{hsv_to_rgb:function(a,c,d){var e=a\/60-Math.floor(a\/60),b=d*(1-c),n=d*(1-e*c),c=d*(1-(1-e)*c),a=[[d,c,b],[n,d,b],[b,d,c],[b,n,d],[c,b,d],[d,b,n]][Math.floor(a\/60)%6];return{r:a[0]*255,g:a[1]*255,b:a[2]*255}},rgb_to_hsv:function(a,c,d){var e=Math.min(a,c,d),b=Math.max(a,c,d),e=b-e;if(b==0)return{h:NaN,s:0,v:0};$/;"	r
set	js/libs/dat.gui.min.js	/^b,c){Object.defineProperty(a,b,{get:function(){if(this.__state.space==="RGB")return this.__state[b];n(this,b,c);return this.__state[b]},set:function(a){if(this.__state.space!=="RGB")n(this,b,c),this.__state.space="RGB";this.__state[b]=a}})}function b(a,b){Object.defineProperty(a,b,{get:function(){if(this.__state.space==="HSV")return this.__state[b];h(this);return this.__state[b]},set:function(a){if(this.__state.space!=="HSV")h(this),this.__state.space="HSV";this.__state[b]=a}})}function n(b,c,e){if(b.__state.space===$/;"	r
set	js/libs/dat.gui.min.js	/^b;d.revert()}},width:{get:function(){return a.width},set:function(b){a.width=b;D(d,b)}},name:{get:function(){return a.name},set:function(b){a.name=b;if(m)m.innerHTML=a.name}},closed:{get:function(){return a.closed},set:function(b){a.closed=b;a.closed?g.addClass(d.__ul,k.CLASS_CLOSED):g.removeClass(d.__ul,k.CLASS_CLOSED);this.onResize();if(d.__closeButton)d.__closeButton.innerHTML=b?k.TEXT_OPEN:k.TEXT_CLOSED}},load:{get:function(){return a.load}},useLocalStorage:{get:function(){return e},set:function(a){u&&$/;"	r
set	js/libs/dat.gui.min.js	/^true;var e=u&&localStorage.getItem(document.location.href+".isLocal")==="true";Object.defineProperties(this,{parent:{get:function(){return a.parent}},scrollable:{get:function(){return a.scrollable}},autoPlace:{get:function(){return a.autoPlace}},preset:{get:function(){return d.parent?d.getRoot().preset:a.load.preset},set:function(b){d.parent?d.getRoot().preset=b:a.load.preset=b;for(b=0;b<this.__preset_select.length;b++)if(this.__preset_select[b].value==this.preset)this.__preset_select.selectedIndex=$/;"	r
show	js/libs/dat.gui.min.js	/^document.createElement("div");a.extend(this.domElement.style,{position:"fixed",display:"none",zIndex:"1001",opacity:0,WebkitTransition:"-webkit-transform 0.2s ease-out, opacity 0.2s linear"});document.body.appendChild(this.backgroundElement);document.body.appendChild(this.domElement);var c=this;e.bind(this.backgroundElement,"click",function(){c.hide()})};c.prototype.show=function(){var c=this;this.backgroundElement.style.display="block";this.domElement.style.display="block";this.domElement.style.opacity=$/;"	r
t	js/libs/dat.gui.min.js	/^function t(a,b){var c=a.getRoot(),d=c.__rememberedObjects.indexOf(b.object);if(d!=-1){var e=c.__rememberedObjectIndecesToControllers[d];e===void 0&&(e={},c.__rememberedObjectIndecesToControllers[d]=e);e[b.property]=b;if(c.load&&c.load.remembered){c=c.load.remembered;if(c[a.preset])c=c[a.preset];else if(c[w])c=c[w];else return;if(c[d]&&c[d][b.property]!==void 0)d=c[d][b.property],b.initialValue=d,b.setValue(d)}}}function I(a){var b=a.__save_row=document.createElement("li");g.addClass(a.domElement,$/;"	r
toOriginal	js/libs/dat.gui.min.js	/^1};j.COMPONENTS="r,g,b,h,s,v,hex,a".split(",");d.extend(j.prototype,{toString:function(){return c(this)},toOriginal:function(){return this.__state.conversion.write(this)}});f(j.prototype,"r",2);f(j.prototype,"g",1);f(j.prototype,"b",0);b(j.prototype,"h");b(j.prototype,"s");b(j.prototype,"v");Object.defineProperty(j.prototype,"a",{get:function(){return this.__state.a},set:function(a){this.__state.a=a}});Object.defineProperty(j.prototype,"hex",{get:function(){if(!this.__state.space!=="HEX")this.__state.hex=$/;"	r
toString	js/libs/dat.gui.min.js	/^dat.color.toString=function(e){return function(a){if(a.a==1||e.isUndefined(a.a)){for(a=a.hex.toString(16);a.length<6;)a="0"+a;return"#"+a}else return"rgba("+Math.round(a.r)+","+Math.round(a.g)+","+Math.round(a.b)+","+a.a+")"}}(dat.utils.common);$/;"	r
top	js/libs/dat.gui.min.js	/^getOffset:function(a){var d={left:0,top:0};if(a.offsetParent){do d.left+=a.offsetLeft,d.top+=a.offsetTop;while(a=a.offsetParent)}return d},isActive:function(a){return a===document.activeElement&&(a.type||a.href)}};return f}(dat.utils.common);$/;"	r
top	js/libs/dat.gui.min.js	/^window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e){window.setTimeout(e,1E3\/60)}}(),dat.dom.CenteredDiv=function(e,a){var c=function(){this.backgroundElement=document.createElement("div");a.extend(this.backgroundElement.style,{backgroundColor:"rgba(0,0,0,0.8)",top:0,left:0,display:"none",zIndex:"1000",opacity:0,WebkitTransition:"opacity 0.2s linear"});e.makeFullscreen(this.backgroundElement);this.backgroundElement.style.position="fixed";this.domElement=$/;"	r
true	js/libs/dat.gui.min.js	/^true;var e=u&&localStorage.getItem(document.location.href+".isLocal")==="true";Object.defineProperties(this,{parent:{get:function(){return a.parent}},scrollable:{get:function(){return a.scrollable}},autoPlace:{get:function(){return a.autoPlace}},preset:{get:function(){return d.parent?d.getRoot().preset:a.load.preset},set:function(b){d.parent?d.getRoot().preset=b:a.load.preset=b;for(b=0;b<this.__preset_select.length;b++)if(this.__preset_select[b].value==this.preset)this.__preset_select.selectedIndex=$/;"	r
type	js/libs/dat.gui.min.js	/^document.createElement("input");this.__input.type="text";this.__input_textShadow="0 1px 1px ";a.bind(this.__input,"keydown",function(a){a.keyCode===13&&g.call(this)});a.bind(this.__input,"blur",g);a.bind(this.__selector,"mousedown",function(){a.addClass(this,"drag").bind(window,"mouseup",function(){a.removeClass(p.__selector,"drag")})});var t=document.createElement("div");f.extend(this.__selector.style,{width:"122px",height:"102px",padding:"3px",backgroundColor:"#222",boxShadow:"0px 1px 3px rgba(0,0,0,0.3)"});$/;"	r
u	js/libs/dat.gui.min.js	/^0&&o(function(){E(a)});i.each(a,function(a){a.updateDisplay()})}e.inject(c);var w="Default",u;try{u="localStorage"in window&&window.localStorage!==null}catch(K){u=false}var x,F=true,v,A=false,G=[],k=function(a){function b(){localStorage.setItem(document.location.href+".gui",JSON.stringify(d.getSaveObject()))}function c(){var a=d.getRoot();a.width+=1;i.defer(function(){a.width-=1})}var d=this;this.domElement=document.createElement("div");this.__ul=document.createElement("ul");this.domElement.appendChild(this.__ul);$/;"	r
unbind	js/libs/dat.gui.min.js	/^b.attachEvent("on"+a,d);return f},unbind:function(b,a,d,c){b.removeEventListener?b.removeEventListener(a,d,c||false):b.detachEvent&&b.detachEvent("on"+a,d);return f},addClass:function(b,a){if(b.className===void 0)b.className=a;else if(b.className!==a){var d=b.className.split(\/ +\/);if(d.indexOf(a)==-1)d.push(a),b.className=d.join(" ").replace(\/^\\s+\/,"").replace(\/\\s+$\/,"")}return f},removeClass:function(b,a){if(a){if(b.className!==void 0)if(b.className===a)b.removeAttribute("class");else{var d=b.className.split(\/ +\/),$/;"	r
updateDisplay	js/libs/dat.gui.min.js	/^d.superclass=e;c.extend(d.prototype,e.prototype,{setValue:function(a){a=d.superclass.prototype.setValue.call(this,a);this.__onFinishChange&&this.__onFinishChange.call(this,this.getValue());return a},updateDisplay:function(){this.__select.value=this.getValue();return d.superclass.prototype.updateDisplay.call(this)}});return d}(dat.controllers.Controller,dat.dom.dom,dat.utils.common);$/;"	r
updateDisplay	js/libs/dat.gui.min.js	/^this.__onFinishChange.call(this,this.getValue());this.__prev=this.getValue();return a},updateDisplay:function(){this.getValue()===true?(this.__checkbox.setAttribute("checked","checked"),this.__checkbox.checked=true):this.__checkbox.checked=false;return d.superclass.prototype.updateDisplay.call(this)}});return d}(dat.controllers.Controller,dat.dom.dom,dat.utils.common);$/;"	r
updateDisplay	js/libs/dat.gui.min.js	/^updateDisplay:function(){return this},isModified:function(){return this.initialValue!==this.getValue()}});return a}(dat.utils.common);$/;"	r
v	js/libs/dat.gui.min.js	/^1:b<0&&(b=0);e>1?e=1:e<0&&(e=0);p.__color.v=b;p.__color.s=e;p.setValue(p.__color.toOriginal());return false}function s(b){b.preventDefault();var c=a.getHeight(p.__hue_field),d=a.getOffset(p.__hue_field),b=1-(b.clientY-d.top+document.body.scrollTop)\/c;b>1?b=1:b<0&&(b=0);p.__color.h=b*360;p.setValue(p.__color.toOriginal());return false}h.superclass.call(this,e,l);this.__color=new c(this.getValue());this.__temp=new c(0);var p=this;this.domElement=document.createElement("div");a.makeSelectable(this.domElement,$/;"	r
w	js/libs/dat.gui.min.js	/^0&&o(function(){E(a)});i.each(a,function(a){a.updateDisplay()})}e.inject(c);var w="Default",u;try{u="localStorage"in window&&window.localStorage!==null}catch(K){u=false}var x,F=true,v,A=false,G=[],k=function(a){function b(){localStorage.setItem(document.location.href+".gui",JSON.stringify(d.getSaveObject()))}function c(){var a=d.getRoot();a.width+=1;i.defer(function(){a.width-=1})}var d=this;this.domElement=document.createElement("div");this.__ul=document.createElement("ul");this.domElement.appendChild(this.__ul);$/;"	r
webkitTransform	js/libs/dat.gui.min.js	/^0;this.domElement.style.webkitTransform="scale(1.1)";this.layout();a.defer(function(){c.backgroundElement.style.opacity=1;c.domElement.style.opacity=1;c.domElement.style.webkitTransform="scale(1)"})};c.prototype.hide=function(){var a=this,c=function(){a.domElement.style.display="none";a.backgroundElement.style.display="none";e.unbind(a.domElement,"webkitTransitionEnd",c);e.unbind(a.domElement,"transitionend",c);e.unbind(a.domElement,"oTransitionEnd",c)};e.bind(this.domElement,"webkitTransitionEnd",$/;"	r
width	js/libs/dat.gui.min.js	/^b;d.revert()}},width:{get:function(){return a.width},set:function(b){a.width=b;D(d,b)}},name:{get:function(){return a.name},set:function(b){a.name=b;if(m)m.innerHTML=a.name}},closed:{get:function(){return a.closed},set:function(b){a.closed=b;a.closed?g.addClass(d.__ul,k.CLASS_CLOSED):g.removeClass(d.__ul,k.CLASS_CLOSED);this.onResize();if(d.__closeButton)d.__closeButton.innerHTML=b?k.TEXT_OPEN:k.TEXT_CLOSED}},load:{get:function(){return a.load}},useLocalStorage:{get:function(){return e},set:function(a){u&&$/;"	r
width	js/libs/dat.gui.min.js	/^f.extend(this.__field_knob.style,{position:"absolute",width:"12px",height:"12px",border:this.__field_knob_border+(this.__color.v<0.5?"#fff":"#000"),boxShadow:"0px 1px 3px rgba(0,0,0,0.5)",borderRadius:"12px",zIndex:1});f.extend(this.__hue_knob.style,{position:"absolute",width:"15px",height:"2px",borderRight:"4px solid #fff",zIndex:1});f.extend(this.__saturation_field.style,{width:"100px",height:"100px",border:"1px solid #555",marginRight:"3px",display:"inline-block",cursor:"pointer"});f.extend(t.style,$/;"	r
width	js/libs/dat.gui.min.js	/^g.addClass(this.domElement,"dg");this.__folders={};this.__controllers=[];this.__rememberedObjects=[];this.__rememberedObjectIndecesToControllers=[];this.__listening=[];a=a||{};a=i.defaults(a,{autoPlace:true,width:k.DEFAULT_WIDTH});a=i.defaults(a,{resizable:a.autoPlace,hideable:a.autoPlace});if(i.isUndefined(a.load))a.load={preset:w};else if(a.preset)a.load.preset=a.preset;i.isUndefined(a.parent)&&a.hideable&&G.push(this);a.resizable=i.isUndefined(a.parent)&&a.resizable;if(a.autoPlace&&i.isUndefined(a.scrollable))a.scrollable=$/;"	r
write	js/libs/dat.gui.min.js	/^3?false:{space:"RGB",r:a[0],g:a[1],b:a[2]}},write:function(a){return[a.r,a.g,a.b]}},RGBA_ARRAY:{read:function(a){return a.length!=4?false:{space:"RGB",r:a[0],g:a[1],b:a[2],a:a[3]}},write:function(a){return[a.r,a.g,a.b,a.a]}}}},{litmus:a.isObject,conversions:{RGBA_OBJ:{read:function(b){return a.isNumber(b.r)&&a.isNumber(b.g)&&a.isNumber(b.b)&&a.isNumber(b.a)?{space:"RGB",r:b.r,g:b.g,b:b.b,a:b.a}:false},write:function(a){return{r:a.r,g:a.g,b:a.b,a:a.a}}},RGB_OBJ:{read:function(b){return a.isNumber(b.r)&&$/;"	r
write	js/libs/dat.gui.min.js	/^a.isNumber(b.g)&&a.isNumber(b.b)?{space:"RGB",r:b.r,g:b.g,b:b.b}:false},write:function(a){return{r:a.r,g:a.g,b:a.b}}},HSVA_OBJ:{read:function(b){return a.isNumber(b.h)&&a.isNumber(b.s)&&a.isNumber(b.v)&&a.isNumber(b.a)?{space:"HSV",h:b.h,s:b.s,v:b.v,a:b.a}:false},write:function(a){return{h:a.h,s:a.s,v:a.v,a:a.a}}},HSV_OBJ:{read:function(b){return a.isNumber(b.h)&&a.isNumber(b.s)&&a.isNumber(b.v)?{space:"HSV",h:b.h,s:b.s,v:b.v}:false},write:function(a){return{h:a.h,s:a.s,v:a.v}}}}}];return function(){d=$/;"	r
write	js/libs/dat.gui.min.js	/^return a===null?false:{space:"RGB",r:parseFloat(a[1]),g:parseFloat(a[2]),b:parseFloat(a[3])}},write:e},CSS_RGBA:{read:function(a){a=a.match(\/^rgba\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\,\\s*(.+)\\s*\\)\/);return a===null?false:{space:"RGB",r:parseFloat(a[1]),g:parseFloat(a[2]),b:parseFloat(a[3]),a:parseFloat(a[4])}},write:e}}},{litmus:a.isNumber,conversions:{HEX:{read:function(a){return{space:"HEX",hex:a,conversionName:"HEX"}},write:function(a){return a.hex}}}},{litmus:a.isArray,conversions:{RGB_ARRAY:{read:function(a){return a.length!=$/;"	r
z	js/libs/dat.gui.min.js	/^b+"px"}function z(a,b){var c={};i.each(a.__rememberedObjects,function(d,e){var f={};i.each(a.__rememberedObjectIndecesToControllers[e],function(a,c){f[c]=b?a.initialValue:a.getValue()});c[e]=f});return c}function C(a,b,c){var d=document.createElement("option");d.innerHTML=b;d.value=b;a.__preset_select.appendChild(d);if(c)a.__preset_select.selectedIndex=a.__preset_select.length-1}function B(a,b){var c=a.__preset_select[a.__preset_select.selectedIndex];c.innerHTML=b?c.value+"*":c.value}function E(a){a.length!=$/;"	r
zIndex	js/libs/dat.gui.min.js	/^f.extend(this.__field_knob.style,{position:"absolute",width:"12px",height:"12px",border:this.__field_knob_border+(this.__color.v<0.5?"#fff":"#000"),boxShadow:"0px 1px 3px rgba(0,0,0,0.5)",borderRadius:"12px",zIndex:1});f.extend(this.__hue_knob.style,{position:"absolute",width:"15px",height:"2px",borderRight:"4px solid #fff",zIndex:1});f.extend(this.__saturation_field.style,{width:"100px",height:"100px",border:"1px solid #555",marginRight:"3px",display:"inline-block",cursor:"pointer"});f.extend(t.style,$/;"	r
Arial	js/libs/stats.min.js	/^k.id="msText";k.style.cssText="color:#0f0;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px";k.innerHTML="MS";d.appendChild(k);var e=document.createElement("div");e.id="msGraph";e.style.cssText="position:relative;width:74px;height:30px;background-color:#0f0";for(d.appendChild(e);74>e.children.length;)j=document.createElement("span"),j.style.cssText="width:1px;height:30px;float:left;background-color:#131",e.appendChild(j);var t=function(b){s=b;switch(s){case 0:a.style.display=$/;"	r
Arial	js/libs/stats.min.js	/^var Stats=function(){var l=Date.now(),m=l,g=0,n=Infinity,o=0,h=0,p=Infinity,q=0,r=0,s=0,f=document.createElement("div");f.id="stats";f.addEventListener("mousedown",function(b){b.preventDefault();t(++s%2)},!1);f.style.cssText="width:80px;opacity:0.9;cursor:pointer";var a=document.createElement("div");a.id="fps";a.style.cssText="padding:0 0 3px 3px;text-align:left;background-color:#002";f.appendChild(a);var i=document.createElement("div");i.id="fpsText";i.style.cssText="color:#0ff;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px";$/;"	r
Stats	js/libs/stats.min.js	/^var Stats=function(){var l=Date.now(),m=l,g=0,n=Infinity,o=0,h=0,p=Infinity,q=0,r=0,s=0,f=document.createElement("div");f.id="stats";f.addEventListener("mousedown",function(b){b.preventDefault();t(++s%2)},!1);f.style.cssText="width:80px;opacity:0.9;cursor:pointer";var a=document.createElement("div");a.id="fps";a.style.cssText="padding:0 0 3px 3px;text-align:left;background-color:#002";f.appendChild(a);var i=document.createElement("div");i.id="fpsText";i.style.cssText="color:#0ff;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px";$/;"	r
begin	js/libs/stats.min.js	/^"block";d.style.display="none";break;case 1:a.style.display="none",d.style.display="block"}};return{REVISION:11,domElement:f,setMode:t,begin:function(){l=Date.now()},end:function(){var b=Date.now();g=b-l;n=Math.min(n,g);o=Math.max(o,g);k.textContent=g+" MS ("+n+"-"+o+")";var a=Math.min(30,30-30*(g\/200));e.appendChild(e.firstChild).style.height=a+"px";r++;b>m+1E3&&(h=Math.round(1E3*r\/(b-m)),p=Math.min(p,h),q=Math.max(q,h),i.textContent=h+" FPS ("+p+"-"+q+")",a=Math.min(30,30-30*(h\/100)),c.appendChild(c.firstChild).style.height=$/;"	r
break	js/libs/stats.min.js	/^"block";d.style.display="none";break;case 1:a.style.display="none",d.style.display="block"}};return{REVISION:11,domElement:f,setMode:t,begin:function(){l=Date.now()},end:function(){var b=Date.now();g=b-l;n=Math.min(n,g);o=Math.max(o,g);k.textContent=g+" MS ("+n+"-"+o+")";var a=Math.min(30,30-30*(g\/200));e.appendChild(e.firstChild).style.height=a+"px";r++;b>m+1E3&&(h=Math.round(1E3*r\/(b-m)),p=Math.min(p,h),q=Math.max(q,h),i.textContent=h+" FPS ("+p+"-"+q+")",a=Math.min(30,30-30*(h\/100)),c.appendChild(c.firstChild).style.height=$/;"	r
c	js/libs/stats.min.js	/^i.innerHTML="FPS";a.appendChild(i);var c=document.createElement("div");c.id="fpsGraph";c.style.cssText="position:relative;width:74px;height:30px;background-color:#0ff";for(a.appendChild(c);74>c.children.length;){var j=document.createElement("span");j.style.cssText="width:1px;height:30px;float:left;background-color:#113";c.appendChild(j)}var d=document.createElement("div");d.id="ms";d.style.cssText="padding:0 0 3px 3px;text-align:left;background-color:#020;display:none";f.appendChild(d);var k=document.createElement("div");$/;"	r
cssText	js/libs/stats.min.js	/^k.id="msText";k.style.cssText="color:#0f0;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px";k.innerHTML="MS";d.appendChild(k);var e=document.createElement("div");e.id="msGraph";e.style.cssText="position:relative;width:74px;height:30px;background-color:#0f0";for(d.appendChild(e);74>e.children.length;)j=document.createElement("span"),j.style.cssText="width:1px;height:30px;float:left;background-color:#131",e.appendChild(j);var t=function(b){s=b;switch(s){case 0:a.style.display=$/;"	r
display	js/libs/stats.min.js	/^"block";d.style.display="none";break;case 1:a.style.display="none",d.style.display="block"}};return{REVISION:11,domElement:f,setMode:t,begin:function(){l=Date.now()},end:function(){var b=Date.now();g=b-l;n=Math.min(n,g);o=Math.max(o,g);k.textContent=g+" MS ("+n+"-"+o+")";var a=Math.min(30,30-30*(g\/200));e.appendChild(e.firstChild).style.height=a+"px";r++;b>m+1E3&&(h=Math.round(1E3*r\/(b-m)),p=Math.min(p,h),q=Math.max(q,h),i.textContent=h+" FPS ("+p+"-"+q+")",a=Math.min(30,30-30*(h\/100)),c.appendChild(c.firstChild).style.height=$/;"	r
domElement	js/libs/stats.min.js	/^"block";d.style.display="none";break;case 1:a.style.display="none",d.style.display="block"}};return{REVISION:11,domElement:f,setMode:t,begin:function(){l=Date.now()},end:function(){var b=Date.now();g=b-l;n=Math.min(n,g);o=Math.max(o,g);k.textContent=g+" MS ("+n+"-"+o+")";var a=Math.min(30,30-30*(g\/200));e.appendChild(e.firstChild).style.height=a+"px";r++;b>m+1E3&&(h=Math.round(1E3*r\/(b-m)),p=Math.min(p,h),q=Math.max(q,h),i.textContent=h+" FPS ("+p+"-"+q+")",a=Math.min(30,30-30*(h\/100)),c.appendChild(c.firstChild).style.height=$/;"	r
g	js/libs/stats.min.js	/^var Stats=function(){var l=Date.now(),m=l,g=0,n=Infinity,o=0,h=0,p=Infinity,q=0,r=0,s=0,f=document.createElement("div");f.id="stats";f.addEventListener("mousedown",function(b){b.preventDefault();t(++s%2)},!1);f.style.cssText="width:80px;opacity:0.9;cursor:pointer";var a=document.createElement("div");a.id="fps";a.style.cssText="padding:0 0 3px 3px;text-align:left;background-color:#002";f.appendChild(a);var i=document.createElement("div");i.id="fpsText";i.style.cssText="color:#0ff;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px";$/;"	r
m	js/libs/stats.min.js	/^a+"px",m=b,r=0);return b},update:function(){l=this.end()}}};$/;"	r
r	js/libs/stats.min.js	/^a+"px",m=b,r=0);return b},update:function(){l=this.end()}}};$/;"	r
t	js/libs/stats.min.js	/^k.id="msText";k.style.cssText="color:#0f0;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px";k.innerHTML="MS";d.appendChild(k);var e=document.createElement("div");e.id="msGraph";e.style.cssText="position:relative;width:74px;height:30px;background-color:#0f0";for(d.appendChild(e);74>e.children.length;)j=document.createElement("span"),j.style.cssText="width:1px;height:30px;float:left;background-color:#131",e.appendChild(j);var t=function(b){s=b;switch(s){case 0:a.style.display=$/;"	r
update	js/libs/stats.min.js	/^a+"px",m=b,r=0);return b},update:function(){l=this.end()}}};$/;"	r
System	js/libs/system.min.js	/^'use strict';var System={browser:function(){var a=navigator.userAgent;return\/Arora\/i.test(a)?"Arora":\/Chrome\/i.test(a)?"Chrome":\/Epiphany\/i.test(a)?"Epiphany":\/Firefox\/i.test(a)?"Firefox":\/Mobile(\\\/.*)? Safari\/i.test(a)?"Mobile Safari":\/MSIE\/i.test(a)?"Internet Explorer":\/Midori\/i.test(a)?"Midori":\/Opera\/.test(a)?"Opera":\/Safari\/i.test(a)?"Safari":!1}(),os:function(){var a=navigator.userAgent;return\/Android\/i.test(a)?"Android":\/CrOS\/i.test(a)?"Chrome OS":\/iP[ao]d|iPhone\/i.test(a)?"iOS":\/Linux\/i.test(a)?$/;"	r
localStorage	js/libs/system.min.js	/^"Linux":\/Mac OS\/i.test(a)?"Mac OS":\/windows\/i.test(a)?"Windows":!1}(),support:{canvas:!!window.CanvasRenderingContext2D,localStorage:function(){try{return!!window.localStorage.getItem}catch(a){return!1}}(),file:!!window.File&&!!window.FileReader&&!!window.FileList&&!!window.Blob,fileSystem:!!window.requestFileSystem||!!window.webkitRequestFileSystem,getUserMedia:!!window.navigator.getUserMedia||!!window.navigator.webkitGetUserMedia||!!window.navigator.mozGetUserMedia||!!window.navigator.msGetUserMedia,$/;"	r
os	js/libs/system.min.js	/^'use strict';var System={browser:function(){var a=navigator.userAgent;return\/Arora\/i.test(a)?"Arora":\/Chrome\/i.test(a)?"Chrome":\/Epiphany\/i.test(a)?"Epiphany":\/Firefox\/i.test(a)?"Firefox":\/Mobile(\\\/.*)? Safari\/i.test(a)?"Mobile Safari":\/MSIE\/i.test(a)?"Internet Explorer":\/Midori\/i.test(a)?"Midori":\/Opera\/.test(a)?"Opera":\/Safari\/i.test(a)?"Safari":!1}(),os:function(){var a=navigator.userAgent;return\/Android\/i.test(a)?"Android":\/CrOS\/i.test(a)?"Chrome OS":\/iP[ao]d|iPhone\/i.test(a)?"iOS":\/Linux\/i.test(a)?$/;"	r
requestAnimationFrame	js/libs/system.min.js	/^requestAnimationFrame:!!window.mozRequestAnimationFrame||!!window.webkitRequestAnimationFrame||!!window.oRequestAnimationFrame||!!window.msRequestAnimationFrame,sessionStorage:function(){try{return!!window.sessionStorage.getItem}catch(a){return!1}}(),webgl:function(){try{return!!window.WebGLRenderingContext&&!!document.createElement("canvas").getContext("experimental-webgl")}catch(a){return!1}}(),worker:!!window.Worker}};$/;"	r
sessionStorage	js/libs/system.min.js	/^requestAnimationFrame:!!window.mozRequestAnimationFrame||!!window.webkitRequestAnimationFrame||!!window.oRequestAnimationFrame||!!window.msRequestAnimationFrame,sessionStorage:function(){try{return!!window.sessionStorage.getItem}catch(a){return!1}}(),webgl:function(){try{return!!window.WebGLRenderingContext&&!!document.createElement("canvas").getContext("experimental-webgl")}catch(a){return!1}}(),worker:!!window.Worker}};$/;"	r
support	js/libs/system.min.js	/^"Linux":\/Mac OS\/i.test(a)?"Mac OS":\/windows\/i.test(a)?"Windows":!1}(),support:{canvas:!!window.CanvasRenderingContext2D,localStorage:function(){try{return!!window.localStorage.getItem}catch(a){return!1}}(),file:!!window.File&&!!window.FileReader&&!!window.FileList&&!!window.Blob,fileSystem:!!window.requestFileSystem||!!window.webkitRequestFileSystem,getUserMedia:!!window.navigator.getUserMedia||!!window.navigator.webkitGetUserMedia||!!window.navigator.mozGetUserMedia||!!window.navigator.msGetUserMedia,$/;"	r
Back	js/libs/tween.min.js	/^2*Math.PI\/0.4)+1},InOut:function(a){var c,b=0.1;if(0===a)return 0;if(1===a)return 1;!b||1>b?(b=1,c=0.1):c=0.4*Math.asin(1\/b)\/(2*Math.PI);return 1>(a*=2)?-0.5*b*Math.pow(2,10*(a-=1))*Math.sin((a-c)*2*Math.PI\/0.4):0.5*b*Math.pow(2,-10*(a-=1))*Math.sin((a-c)*2*Math.PI\/0.4)+1}},Back:{In:function(a){return a*a*(2.70158*a-1.70158)},Out:function(a){return--a*a*(2.70158*a+1.70158)+1},InOut:function(a){return 1>(a*=2)?0.5*a*a*(3.5949095*a-2.5949095):0.5*((a-=2)*a*(3.5949095*a+2.5949095)+2)}},Bounce:{In:function(a){return 1-$/;"	r
Bernstein	js/libs/tween.min.js	/^1+b)%b],a[e],a[(e+1)%b],a[(e+2)%b],d-e)):0>c?a[0]-(f(a[0],a[0],a[1],a[1],-d)-a[0]):1<c?a[b]-(f(a[b],a[b],a[b-1],a[b-1],d-b)-a[b]):f(a[e?e-1:0],a[e],a[b<e+1?b:e+1],a[b<e+2?b:e+2],d-e)},Utils:{Linear:function(a,c,b){return(c-a)*b+a},Bernstein:function(a,c){var b=TWEEN.Interpolation.Utils.Factorial;return b(a)\/b(c)\/b(a-c)},Factorial:function(){var a=[1];return function(c){var b=1,d;if(a[c])return a[c];for(d=c;1<d;d--)b*=d;return a[c]=b}}(),CatmullRom:function(a,c,b,d,e){var a=0.5*(b-a),d=0.5*(d-c),f=$/;"	r
Bezier	js/libs/tween.min.js	/^TWEEN.Interpolation={Linear:function(a,c){var b=a.length-1,d=b*c,e=Math.floor(d),f=TWEEN.Interpolation.Utils.Linear;return 0>c?f(a[0],a[1],d):1<c?f(a[b],a[b-1],b-d):f(a[e],a[e+1>b?b:e+1],d-e)},Bezier:function(a,c){var b=0,d=a.length-1,e=Math.pow,f=TWEEN.Interpolation.Utils.Bernstein,h;for(h=0;h<=d;h++)b+=e(1-c,d-h)*e(c,h)*a[h]*f(d,h);return b},CatmullRom:function(a,c){var b=a.length-1,d=b*c,e=Math.floor(d),f=TWEEN.Interpolation.Utils.CatmullRom;return a[0]===a[b]?(0>c&&(e=Math.floor(d=b*(1+c))),f(a[(e-$/;"	r
Easing	js/libs/tween.min.js	/^TWEEN.Easing={Linear:{None:function(a){return a}},Quadratic:{In:function(a){return a*a},Out:function(a){return a*(2-a)},InOut:function(a){return 1>(a*=2)?0.5*a*a:-0.5*(--a*(a-2)-1)}},Cubic:{In:function(a){return a*a*a},Out:function(a){return--a*a*a+1},InOut:function(a){return 1>(a*=2)?0.5*a*a*a:0.5*((a-=2)*a*a+2)}},Quartic:{In:function(a){return a*a*a*a},Out:function(a){return 1- --a*a*a*a},InOut:function(a){return 1>(a*=2)?0.5*a*a*a*a:-0.5*((a-=2)*a*a*a-2)}},Quintic:{In:function(a){return a*a*a*$/;"	r
Elastic	js/libs/tween.min.js	/^Math.sqrt(1-a*a)},Out:function(a){return Math.sqrt(1- --a*a)},InOut:function(a){return 1>(a*=2)?-0.5*(Math.sqrt(1-a*a)-1):0.5*(Math.sqrt(1-(a-=2)*a)+1)}},Elastic:{In:function(a){var c,b=0.1;if(0===a)return 0;if(1===a)return 1;!b||1>b?(b=1,c=0.1):c=0.4*Math.asin(1\/b)\/(2*Math.PI);return-(b*Math.pow(2,10*(a-=1))*Math.sin((a-c)*2*Math.PI\/0.4))},Out:function(a){var c,b=0.1;if(0===a)return 0;if(1===a)return 1;!b||1>b?(b=1,c=0.1):c=0.4*Math.asin(1\/b)\/(2*Math.PI);return b*Math.pow(2,-10*a)*Math.sin((a-c)*$/;"	r
InOut	js/libs/tween.min.js	/^2*Math.PI\/0.4)+1},InOut:function(a){var c,b=0.1;if(0===a)return 0;if(1===a)return 1;!b||1>b?(b=1,c=0.1):c=0.4*Math.asin(1\/b)\/(2*Math.PI);return 1>(a*=2)?-0.5*b*Math.pow(2,10*(a-=1))*Math.sin((a-c)*2*Math.PI\/0.4):0.5*b*Math.pow(2,-10*(a-=1))*Math.sin((a-c)*2*Math.PI\/0.4)+1}},Back:{In:function(a){return a*a*(2.70158*a-1.70158)},Out:function(a){return--a*a*(2.70158*a+1.70158)+1},InOut:function(a){return 1>(a*=2)?0.5*a*a*(3.5949095*a-2.5949095):0.5*((a-=2)*a*(3.5949095*a+2.5949095)+2)}},Bounce:{In:function(a){return 1-$/;"	r
InOut	js/libs/tween.min.js	/^TWEEN.Easing.Bounce.Out(1-a)},Out:function(a){return a<1\/2.75?7.5625*a*a:a<2\/2.75?7.5625*(a-=1.5\/2.75)*a+0.75:a<2.5\/2.75?7.5625*(a-=2.25\/2.75)*a+0.9375:7.5625*(a-=2.625\/2.75)*a+0.984375},InOut:function(a){return 0.5>a?0.5*TWEEN.Easing.Bounce.In(2*a):0.5*TWEEN.Easing.Bounce.Out(2*a-1)+0.5}}};$/;"	r
Interpolation	js/libs/tween.min.js	/^TWEEN.Interpolation={Linear:function(a,c){var b=a.length-1,d=b*c,e=Math.floor(d),f=TWEEN.Interpolation.Utils.Linear;return 0>c?f(a[0],a[1],d):1<c?f(a[b],a[b-1],b-d):f(a[e],a[e+1>b?b:e+1],d-e)},Bezier:function(a,c){var b=0,d=a.length-1,e=Math.pow,f=TWEEN.Interpolation.Utils.Bernstein,h;for(h=0;h<=d;h++)b+=e(1-c,d-h)*e(c,h)*a[h]*f(d,h);return b},CatmullRom:function(a,c){var b=a.length-1,d=b*c,e=Math.floor(d),f=TWEEN.Interpolation.Utils.CatmullRom;return a[0]===a[b]?(0>c&&(e=Math.floor(d=b*(1+c))),f(a[(e-$/;"	r
Out	js/libs/tween.min.js	/^Math.sqrt(1-a*a)},Out:function(a){return Math.sqrt(1- --a*a)},InOut:function(a){return 1>(a*=2)?-0.5*(Math.sqrt(1-a*a)-1):0.5*(Math.sqrt(1-(a-=2)*a)+1)}},Elastic:{In:function(a){var c,b=0.1;if(0===a)return 0;if(1===a)return 1;!b||1>b?(b=1,c=0.1):c=0.4*Math.asin(1\/b)\/(2*Math.PI);return-(b*Math.pow(2,10*(a-=1))*Math.sin((a-c)*2*Math.PI\/0.4))},Out:function(a){var c,b=0.1;if(0===a)return 0;if(1===a)return 1;!b||1>b?(b=1,c=0.1):c=0.4*Math.asin(1\/b)\/(2*Math.PI);return b*Math.pow(2,-10*a)*Math.sin((a-c)*$/;"	r
Out	js/libs/tween.min.js	/^TWEEN.Easing.Bounce.Out(1-a)},Out:function(a){return a<1\/2.75?7.5625*a*a:a<2\/2.75?7.5625*(a-=1.5\/2.75)*a+0.75:a<2.5\/2.75?7.5625*(a-=2.25\/2.75)*a+0.9375:7.5625*(a-=2.625\/2.75)*a+0.984375},InOut:function(a){return 0.5>a?0.5*TWEEN.Easing.Bounce.In(2*a):0.5*TWEEN.Easing.Bounce.Out(2*a-1)+0.5}}};$/;"	r
Out	js/libs/tween.min.js	/^TWEEN.Easing={Linear:{None:function(a){return a}},Quadratic:{In:function(a){return a*a},Out:function(a){return a*(2-a)},InOut:function(a){return 1>(a*=2)?0.5*a*a:-0.5*(--a*(a-2)-1)}},Cubic:{In:function(a){return a*a*a},Out:function(a){return--a*a*a+1},InOut:function(a){return 1>(a*=2)?0.5*a*a*a:0.5*((a-=2)*a*a+2)}},Quartic:{In:function(a){return a*a*a*a},Out:function(a){return 1- --a*a*a*a},InOut:function(a){return 1>(a*=2)?0.5*a*a*a*a:-0.5*((a-=2)*a*a*a-2)}},Quintic:{In:function(a){return a*a*a*$/;"	r
Out	js/libs/tween.min.js	/^a*a},Out:function(a){return--a*a*a*a*a+1},InOut:function(a){return 1>(a*=2)?0.5*a*a*a*a*a:0.5*((a-=2)*a*a*a*a+2)}},Sinusoidal:{In:function(a){return 1-Math.cos(a*Math.PI\/2)},Out:function(a){return Math.sin(a*Math.PI\/2)},InOut:function(a){return 0.5*(1-Math.cos(Math.PI*a))}},Exponential:{In:function(a){return 0===a?0:Math.pow(1024,a-1)},Out:function(a){return 1===a?1:1-Math.pow(2,-10*a)},InOut:function(a){return 0===a?0:1===a?1:1>(a*=2)?0.5*Math.pow(1024,a-1):0.5*(-Math.pow(2,-10*(a-1))+2)}},Circular:{In:function(a){return 1-$/;"	r
Quadratic	js/libs/tween.min.js	/^TWEEN.Easing={Linear:{None:function(a){return a}},Quadratic:{In:function(a){return a*a},Out:function(a){return a*(2-a)},InOut:function(a){return 1>(a*=2)?0.5*a*a:-0.5*(--a*(a-2)-1)}},Cubic:{In:function(a){return a*a*a},Out:function(a){return--a*a*a+1},InOut:function(a){return 1>(a*=2)?0.5*a*a*a:0.5*((a-=2)*a*a+2)}},Quartic:{In:function(a){return a*a*a*a},Out:function(a){return 1- --a*a*a*a},InOut:function(a){return 1>(a*=2)?0.5*a*a*a*a:-0.5*((a-=2)*a*a*a-2)}},Quintic:{In:function(a){return a*a*a*$/;"	r
Sinusoidal	js/libs/tween.min.js	/^a*a},Out:function(a){return--a*a*a*a*a+1},InOut:function(a){return 1>(a*=2)?0.5*a*a*a*a*a:0.5*((a-=2)*a*a*a*a+2)}},Sinusoidal:{In:function(a){return 1-Math.cos(a*Math.PI\/2)},Out:function(a){return Math.sin(a*Math.PI\/2)},InOut:function(a){return 0.5*(1-Math.cos(Math.PI*a))}},Exponential:{In:function(a){return 0===a?0:Math.pow(1024,a-1)},Out:function(a){return 1===a?1:1-Math.pow(2,-10*a)},InOut:function(a){return 0===a?0:1===a?1:1>(a*=2)?0.5*Math.pow(1024,a-1):0.5*(-Math.pow(2,-10*(a-1))+2)}},Circular:{In:function(a){return 1-$/;"	r
TWEEN	js/libs/tween.min.js	/^'use strict';var TWEEN=TWEEN||function(){var a=[];return{REVISION:"7",getAll:function(){return a},removeAll:function(){a=[]},add:function(c){a.push(c)},remove:function(c){c=a.indexOf(c);-1!==c&&a.splice(c,1)},update:function(c){if(0===a.length)return!1;for(var b=0,d=a.length,c=void 0!==c?c:Date.now();b<d;)a[b].update(c)?b++:(a.splice(b,1),d--);return!0}}}();$/;"	r
Tween	js/libs/tween.min.js	/^TWEEN.Tween=function(a){var c={},b={},d=1E3,e=0,f=null,h=TWEEN.Easing.Linear.None,r=TWEEN.Interpolation.Linear,k=[],l=null,m=!1,n=null,p=null;this.to=function(a,c){null!==c&&(d=c);b=a;return this};this.start=function(d){TWEEN.add(this);m=!1;f=void 0!==d?d:Date.now();f+=e;for(var g in b)if(null!==a[g]){if(b[g]instanceof Array){if(0===b[g].length)continue;b[g]=[a[g]].concat(b[g])}c[g]=a[g]}return this};this.stop=function(){TWEEN.remove(this);return this};this.delay=function(a){e=a;return this};this.easing=$/;"	r
Utils	js/libs/tween.min.js	/^1+b)%b],a[e],a[(e+1)%b],a[(e+2)%b],d-e)):0>c?a[0]-(f(a[0],a[0],a[1],a[1],-d)-a[0]):1<c?a[b]-(f(a[b],a[b],a[b-1],a[b-1],d-b)-a[b]):f(a[e?e-1:0],a[e],a[b<e+1?b:e+1],a[b<e+2?b:e+2],d-e)},Utils:{Linear:function(a,c,b){return(c-a)*b+a},Bernstein:function(a,c){var b=TWEEN.Interpolation.Utils.Factorial;return b(a)\/b(c)\/b(a-c)},Factorial:function(){var a=[1];return function(c){var b=1,d;if(a[c])return a[c];for(d=c;1<d;d--)b*=d;return a[c]=b}}(),CatmullRom:function(a,c,b,d,e){var a=0.5*(b-a),d=0.5*(d-c),f=$/;"	r
b	js/libs/tween.min.js	/^2*Math.PI\/0.4)+1},InOut:function(a){var c,b=0.1;if(0===a)return 0;if(1===a)return 1;!b||1>b?(b=1,c=0.1):c=0.4*Math.asin(1\/b)\/(2*Math.PI);return 1>(a*=2)?-0.5*b*Math.pow(2,10*(a-=1))*Math.sin((a-c)*2*Math.PI\/0.4):0.5*b*Math.pow(2,-10*(a-=1))*Math.sin((a-c)*2*Math.PI\/0.4)+1}},Back:{In:function(a){return a*a*(2.70158*a-1.70158)},Out:function(a){return--a*a*(2.70158*a+1.70158)+1},InOut:function(a){return 1>(a*=2)?0.5*a*a*(3.5949095*a-2.5949095):0.5*((a-=2)*a*(3.5949095*a+2.5949095)+2)}},Bounce:{In:function(a){return 1-$/;"	r
b	js/libs/tween.min.js	/^Math.sqrt(1-a*a)},Out:function(a){return Math.sqrt(1- --a*a)},InOut:function(a){return 1>(a*=2)?-0.5*(Math.sqrt(1-a*a)-1):0.5*(Math.sqrt(1-(a-=2)*a)+1)}},Elastic:{In:function(a){var c,b=0.1;if(0===a)return 0;if(1===a)return 1;!b||1>b?(b=1,c=0.1):c=0.4*Math.asin(1\/b)\/(2*Math.PI);return-(b*Math.pow(2,10*(a-=1))*Math.sin((a-c)*2*Math.PI\/0.4))},Out:function(a){var c,b=0.1;if(0===a)return 0;if(1===a)return 1;!b||1>b?(b=1,c=0.1):c=0.4*Math.asin(1\/b)\/(2*Math.PI);return b*Math.pow(2,-10*a)*Math.sin((a-c)*$/;"	r
b	js/libs/tween.min.js	/^TWEEN.Tween=function(a){var c={},b={},d=1E3,e=0,f=null,h=TWEEN.Easing.Linear.None,r=TWEEN.Interpolation.Linear,k=[],l=null,m=!1,n=null,p=null;this.to=function(a,c){null!==c&&(d=c);b=a;return this};this.start=function(d){TWEEN.add(this);m=!1;f=void 0!==d?d:Date.now();f+=e;for(var g in b)if(null!==a[g]){if(b[g]instanceof Array){if(0===b[g].length)continue;b[g]=[a[g]].concat(b[g])}c[g]=a[g]}return this};this.stop=function(){TWEEN.remove(this);return this};this.delay=function(a){e=a;return this};this.easing=$/;"	r
c	js/libs/tween.min.js	/^1+b)%b],a[e],a[(e+1)%b],a[(e+2)%b],d-e)):0>c?a[0]-(f(a[0],a[0],a[1],a[1],-d)-a[0]):1<c?a[b]-(f(a[b],a[b],a[b-1],a[b-1],d-b)-a[b]):f(a[e?e-1:0],a[e],a[b<e+1?b:e+1],a[b<e+2?b:e+2],d-e)},Utils:{Linear:function(a,c,b){return(c-a)*b+a},Bernstein:function(a,c){var b=TWEEN.Interpolation.Utils.Factorial;return b(a)\/b(c)\/b(a-c)},Factorial:function(){var a=[1];return function(c){var b=1,d;if(a[c])return a[c];for(d=c;1<d;d--)b*=d;return a[c]=b}}(),CatmullRom:function(a,c,b,d,e){var a=0.5*(b-a),d=0.5*(d-c),f=$/;"	r
d	js/libs/tween.min.js	/^1+b)%b],a[e],a[(e+1)%b],a[(e+2)%b],d-e)):0>c?a[0]-(f(a[0],a[0],a[1],a[1],-d)-a[0]):1<c?a[b]-(f(a[b],a[b],a[b-1],a[b-1],d-b)-a[b]):f(a[e?e-1:0],a[e],a[b<e+1?b:e+1],a[b<e+2?b:e+2],d-e)},Utils:{Linear:function(a,c,b){return(c-a)*b+a},Bernstein:function(a,c){var b=TWEEN.Interpolation.Utils.Factorial;return b(a)\/b(c)\/b(a-c)},Factorial:function(){var a=[1];return function(c){var b=1,d;if(a[c])return a[c];for(d=c;1<d;d--)b*=d;return a[c]=b}}(),CatmullRom:function(a,c,b,d,e){var a=0.5*(b-a),d=0.5*(d-c),f=$/;"	r
d	js/libs/tween.min.js	/^TWEEN.Tween=function(a){var c={},b={},d=1E3,e=0,f=null,h=TWEEN.Easing.Linear.None,r=TWEEN.Interpolation.Linear,k=[],l=null,m=!1,n=null,p=null;this.to=function(a,c){null!==c&&(d=c);b=a;return this};this.start=function(d){TWEEN.add(this);m=!1;f=void 0!==d?d:Date.now();f+=e;for(var g in b)if(null!==a[g]){if(b[g]instanceof Array){if(0===b[g].length)continue;b[g]=[a[g]].concat(b[g])}c[g]=a[g]}return this};this.stop=function(){TWEEN.remove(this);return this};this.delay=function(a){e=a;return this};this.easing=$/;"	r
g	js/libs/tween.min.js	/^function(a){h=a;return this};this.interpolation=function(a){r=a;return this};this.chain=function(){k=arguments;return this};this.onStart=function(a){l=a;return this};this.onUpdate=function(a){n=a;return this};this.onComplete=function(a){p=a;return this};this.update=function(e){if(e<f)return!0;!1===m&&(null!==l&&l.call(a),m=!0);var g=(e-f)\/d,g=1<g?1:g,i=h(g),j;for(j in c){var s=c[j],q=b[j];a[j]=q instanceof Array?r(q,i):s+(q-s)*i}null!==n&&n.call(a,i);if(1==g){null!==p&&p.call(a);g=0;for(i=k.length;g<$/;"	r
getAll	js/libs/tween.min.js	/^'use strict';var TWEEN=TWEEN||function(){var a=[];return{REVISION:"7",getAll:function(){return a},removeAll:function(){a=[]},add:function(c){a.push(c)},remove:function(c){c=a.indexOf(c);-1!==c&&a.splice(c,1)},update:function(c){if(0===a.length)return!1;for(var b=0,d=a.length,c=void 0!==c?c:Date.now();b<d;)a[b].update(c)?b++:(a.splice(b,1),d--);return!0}}}();$/;"	r
h	js/libs/tween.min.js	/^TWEEN.Interpolation={Linear:function(a,c){var b=a.length-1,d=b*c,e=Math.floor(d),f=TWEEN.Interpolation.Utils.Linear;return 0>c?f(a[0],a[1],d):1<c?f(a[b],a[b-1],b-d):f(a[e],a[e+1>b?b:e+1],d-e)},Bezier:function(a,c){var b=0,d=a.length-1,e=Math.pow,f=TWEEN.Interpolation.Utils.Bernstein,h;for(h=0;h<=d;h++)b+=e(1-c,d-h)*e(c,h)*a[h]*f(d,h);return b},CatmullRom:function(a,c){var b=a.length-1,d=b*c,e=Math.floor(d),f=TWEEN.Interpolation.Utils.CatmullRom;return a[0]===a[b]?(0>c&&(e=Math.floor(d=b*(1+c))),f(a[(e-$/;"	r
i	js/libs/tween.min.js	/^i;g++)k[g].start(e);return!1}return!0}};$/;"	r
interpolation	js/libs/tween.min.js	/^function(a){h=a;return this};this.interpolation=function(a){r=a;return this};this.chain=function(){k=arguments;return this};this.onStart=function(a){l=a;return this};this.onUpdate=function(a){n=a;return this};this.onComplete=function(a){p=a;return this};this.update=function(e){if(e<f)return!0;!1===m&&(null!==l&&l.call(a),m=!0);var g=(e-f)\/d,g=1<g?1:g,i=h(g),j;for(j in c){var s=c[j],q=b[j];a[j]=q instanceof Array?r(q,i):s+(q-s)*i}null!==n&&n.call(a,i);if(1==g){null!==p&&p.call(a);g=0;for(i=k.length;g<$/;"	r
j	js/libs/tween.min.js	/^function(a){h=a;return this};this.interpolation=function(a){r=a;return this};this.chain=function(){k=arguments;return this};this.onStart=function(a){l=a;return this};this.onUpdate=function(a){n=a;return this};this.onComplete=function(a){p=a;return this};this.update=function(e){if(e<f)return!0;!1===m&&(null!==l&&l.call(a),m=!0);var g=(e-f)\/d,g=1<g?1:g,i=h(g),j;for(j in c){var s=c[j],q=b[j];a[j]=q instanceof Array?r(q,i):s+(q-s)*i}null!==n&&n.call(a,i);if(1==g){null!==p&&p.call(a);g=0;for(i=k.length;g<$/;"	r
k	js/libs/tween.min.js	/^TWEEN.Tween=function(a){var c={},b={},d=1E3,e=0,f=null,h=TWEEN.Easing.Linear.None,r=TWEEN.Interpolation.Linear,k=[],l=null,m=!1,n=null,p=null;this.to=function(a,c){null!==c&&(d=c);b=a;return this};this.start=function(d){TWEEN.add(this);m=!1;f=void 0!==d?d:Date.now();f+=e;for(var g in b)if(null!==a[g]){if(b[g]instanceof Array){if(0===b[g].length)continue;b[g]=[a[g]].concat(b[g])}c[g]=a[g]}return this};this.stop=function(){TWEEN.remove(this);return this};this.delay=function(a){e=a;return this};this.easing=$/;"	r
2	js/util.js	/^	    new THREE.CubeGeometry(2, 2, 2, 1, 1, 1),$/;"	r
color	js/util.js	/^        color: color,$/;"	r
degreeInRange	js/util.js	/^function degreeInRange(degree){$/;"	r
dice	js/util.js	/^	var dice = new THREE.Mesh($/;"	r
getImageCube	js/util.js	/^function getImageCube(){$/;"	r
getLine	js/util.js	/^function getLine(v0, v1, color){$/;"	r
getStats	js/util.js	/^function getStats(){$/;"	r
line	js/util.js	/^	var line = new THREE.Line(lineGeometry, lineMaterial);$/;"	r
lineGeometry	js/util.js	/^	var lineGeometry = new THREE.Geometry();$/;"	r
lineMaterial	js/util.js	/^	var lineMaterial = new THREE.LineBasicMaterial({$/;"	r
linewidth	js/util.js	/^        linewidth: 3$/;"	r
materials	js/util.js	/^	var materials = [$/;"	r
p	js/util.js	/^function p(v){$/;"	r
path	js/util.js	/^	var path = '.\/me_avater.jpg';$/;"	r
position	js/util.js	/^	stats.domElement.style.position = 'absolute';$/;"	r
stats	js/util.js	/^	stats = new Stats();$/;"	r
theta	js/util.js	/^		theta = 179;$/;"	r
theta	js/util.js	/^		theta = 1;$/;"	r
thetaInRange	js/util.js	/^function thetaInRange(theta){$/;"	r
top	js/util.js	/^	stats.domElement.style.top = '0px';$/;"	r
v1	js/util.js	/^function getLine(v0, v1, color){$/;"	r
40	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	ctx.arc( canvas.width\/2, canvas.width\/2, 40, 0, Math.PI*2, true); $/;"	r
60	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	ctx.arc( canvas.width\/2, canvas.width\/2, 60, 0, Math.PI*2, true); $/;"	r
VirtualJoystick	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^var VirtualJoystick	= function(opts)$/;"	r
_$onMouseDown	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^		this._$onMouseDown	= __bind(this._onMouseDown	, this);$/;"	r
_$onMouseMove	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^		this._$onMouseMove	= __bind(this._onMouseMove	, this);$/;"	r
_$onMouseUp	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^		this._$onMouseUp	= __bind(this._onMouseUp	, this);$/;"	r
_$onTouchEnd	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._$onTouchEnd	= __bind(this._onTouchEnd	, this);$/;"	r
_$onTouchMove	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._$onTouchMove	= __bind(this._onTouchMove	, this);$/;"	r
_$onTouchStart	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._$onTouchStart	= __bind(this._onTouchStart	, this);$/;"	r
__bind	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var __bind	= function(fn, me){ return function(){ return fn.apply(me, arguments); }; };$/;"	r
_baseEl	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._baseEl		= opts.baseElement	|| this._buildJoystickBase();$/;"	r
_baseX	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._baseX	= 0;$/;"	r
_baseX	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._baseX	= this._baseY	= 0;$/;"	r
_baseX	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._baseX	= x;$/;"	r
_baseY	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._baseY	= 0;$/;"	r
_baseY	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._baseY	= y;$/;"	r
_buildJoystickBase	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype._buildJoystickBase	= function()$/;"	r
_buildJoystickStick	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype._buildJoystickStick	= function()$/;"	r
_container	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._container		= opts.container	|| document.body;$/;"	r
_mouseSupport	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._mouseSupport	= opts.mouseSupport !== undefined ? opts.mouseSupport : false;$/;"	r
_onDown	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype._onDown	= function(x, y)$/;"	r
_onMouseDown	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype._onMouseDown	= function(event)$/;"	r
_onMouseMove	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype._onMouseMove	= function(event)$/;"	r
_onMouseUp	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype._onMouseUp	= function(event)$/;"	r
_onMove	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype._onMove	= function(x, y)$/;"	r
_onTouchEnd	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype._onTouchEnd	= function(event)$/;"	r
_onTouchMove	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype._onTouchMove	= function(event)$/;"	r
_onTouchStart	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype._onTouchStart	= function(event)$/;"	r
_onUp	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype._onUp	= function()$/;"	r
_pressed	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._pressed	= false; $/;"	r
_pressed	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._pressed	= false;$/;"	r
_pressed	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._pressed	= true; $/;"	r
_stickEl	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._stickEl		= opts.stickElement	|| this._buildJoystickStick();$/;"	r
_stickX	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^		this._stickX	= x;$/;"	r
_stickX	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._stickX	= 0;$/;"	r
_stickX	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._stickX	= this._stickY	= 0;$/;"	r
_stickX	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._stickX	= x;$/;"	r
_stickY	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^		this._stickY	= y;$/;"	r
_stickY	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._stickY	= 0;$/;"	r
_stickY	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._stickY	= y;$/;"	r
_strokeStyle	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._strokeStyle	= opts.strokeStyle	|| 'cyan';$/;"	r
_touchIdx	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._touchIdx	= null;$/;"	r
_touchIdx	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._touchIdx	= touch.identifier;$/;"	r
addEventListener	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	destObj.addEventListener	= function(event, fct){$/;"	r
canvas	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var canvas	= document.createElement( 'canvas' );$/;"	r
ctx	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var ctx		= canvas.getContext('2d');$/;"	r
deltaX	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var deltaX	= this.deltaX();$/;"	r
deltaX	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype.deltaX	= function(){ return this._stickX - this._baseX;	}$/;"	r
deltaY	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var deltaY	= this.deltaY();$/;"	r
deltaY	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype.deltaY	= function(){ return this._stickY - this._baseY;	}$/;"	r
destroy	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype.destroy	= function()$/;"	r
dispatchEvent	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	destObj.dispatchEvent		= function(event \/* , args... *\/){$/;"	r
display	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._baseEl.style.display	= "";$/;"	r
display	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._baseEl.style.display	= "none";$/;"	r
display	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._stickEl.style.display	= "";$/;"	r
display	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._stickEl.style.display	= "none";$/;"	r
down	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype.down	= function(){$/;"	r
height	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	canvas.height	= 126;$/;"	r
height	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	canvas.height	= 86;$/;"	r
isValid	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var isValid	= this.dispatchEvent('touchStartValidation', event);$/;"	r
left	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^		this._stickEl.style.left	= (x - this._stickEl.width \/2)+"px";$/;"	r
left	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._baseEl.style.left		= (x - this._baseEl.width \/2)+"px";$/;"	r
left	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._stickEl.style.left	= (x - this._stickEl.width \/2)+"px";$/;"	r
left	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype.left	= function(){$/;"	r
lineWidth	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	ctx.lineWidth	= 2; $/;"	r
lineWidth	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	ctx.lineWidth	= 6; $/;"	r
opts	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	opts			= opts			|| {};$/;"	r
position	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._baseEl.style.position	= "absolute"$/;"	r
position	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._container.style.position	= "relative";$/;"	r
position	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._stickEl.style.position	= "absolute"$/;"	r
removeEventListener	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	destObj.removeEventListener	= function(event, fct){$/;"	r
result	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^			var result	= tmpArray[i].apply(this, Array.prototype.slice.call(arguments, 1))$/;"	r
right	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype.right	= function(){$/;"	r
strokeStyle	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	ctx.strokeStyle	= this._strokeStyle; $/;"	r
strokeStyle	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	ctx.strokeStyle = this._strokeStyle; $/;"	r
tmpArray	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^		var tmpArray	= this._events[event].slice(); $/;"	r
top	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^		this._stickEl.style.top		= (y - this._stickEl.height\/2)+"px";$/;"	r
top	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._baseEl.style.top		= (y - this._baseEl.height\/2)+"px";$/;"	r
top	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._stickEl.style.top		= (y - this._stickEl.height\/2)+"px";$/;"	r
touch	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var touch	= event.changedTouches[0];$/;"	r
touch	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var touch	= touchList[i];$/;"	r
touchList	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var touchList	= event.changedTouches;$/;"	r
touchScreenAvailable	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.touchScreenAvailable	= function()$/;"	r
up	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype.up	= function(){$/;"	r
width	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	canvas.width	= 126;$/;"	r
width	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	canvas.width	= 86;$/;"	r
x	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var x		= touch.pageX;$/;"	r
x	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var x	= event.clientX;$/;"	r
y	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var y		= touch.pageY;$/;"	r
y	mouse_and_camera/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var y	= event.clientY;$/;"	r
castShadow	sand.js	/^	sand.castShadow = true;$/;"	r
getSand	sand.js	/^function getSand(){$/;"	r
receiveShadow	sand.js	/^	sand.receiveShadow = true;$/;"	r
sand	sand.js	/^	sand = new THREE.Mesh($/;"	r
sandGeometry	sand.js	/^	    sandGeometry,$/;"	r
sandGeometry	sand.js	/^	var sandGeometry = new THREE.PlaneGeometry(sandWidth, sandWidth, sandWidth, sandWidth);$/;"	r
sandTexture	sand.js	/^	var sandTexture= THREE.ImageUtils.loadTexture( 'sand.jpg' );$/;"	r
sandWidth	sand.js	/^	var sandGeometry = new THREE.PlaneGeometry(sandWidth, sandWidth, sandWidth, sandWidth);$/;"	r
sandWidth	sand.js	/^	var sandWidth = 8;$/;"	r
wrapS	sand.js	/^	sandTexture.wrapS = sandTexture.wrapT = THREE.RepeatWrapping;$/;"	r
x	sand.js	/^	sand.rotation.x = Math.PI \/ -2;$/;"	r
color	template/axis.js	/^        color: color,$/;"	r
getLine	template/axis.js	/^function getLine(v0, v1, color){$/;"	r
line	template/axis.js	/^	var line = new THREE.Line(lineGeometry, lineMaterial);$/;"	r
lineGeometry	template/axis.js	/^	var lineGeometry = new THREE.Geometry();$/;"	r
lineMaterial	template/axis.js	/^	var lineMaterial = new THREE.LineBasicMaterial({$/;"	r
linewidth	template/axis.js	/^        linewidth: 3$/;"	r
v1	template/axis.js	/^function getLine(v0, v1, color){$/;"	r
0	template/init.js	/^\/\/imageCube.position.set(-3,0,0);$/;"	r
0	template/init.js	/^cube2.position.set(3,0,0);$/;"	r
0	template/init.js	/^var lineX = getLine(orig, new THREE.Vector3(10, 0, 0), 0xff0000);$/;"	r
0	template/init.js	/^var lineZ = getLine(orig, new THREE.Vector3(0, 0, 10), 0x0000ff);$/;"	r
0	template/init.js	/^var orig = new THREE.Vector3(0, 0, 0);$/;"	r
1	template/init.js	/^var geometry = new THREE.CubeGeometry(1,1,1);$/;"	r
1	template/init.js	/^var geometry2 = new THREE.CubeGeometry(1,1,1);$/;"	r
10	template/init.js	/^var lineY = getLine(orig, new THREE.Vector3(0, 10, 0), 0x00ff00);$/;"	r
128	template/init.js	/^	new THREE.PlaneGeometry( 128, 128, 128, 128 ),$/;"	r
HEIGHT	template/init.js	/^var HEIGHT= window.innerHeight;$/;"	r
WIDTH	template/init.js	/^var WIDTH= window.innerWidth;$/;"	r
ambientLight	template/init.js	/^var ambientLight = new THREE.AmbientLight(lightColor);$/;"	r
camera	template/init.js	/^var camera = new THREE.PerspectiveCamera(75, WIDTH\/HEIGHT, 0.1, 1000);$/;"	r
cube	template/init.js	/^var cube = new THREE.Mesh(geometry, material);$/;"	r
cube2	template/init.js	/^var cube2 = new THREE.Mesh(geometry2, material2);$/;"	r
directionalLight	template/init.js	/^var directionalLight = new THREE.DirectionalLight(lightColor, 2 );$/;"	r
fog	template/init.js	/^scene.fog = new THREE.FogExp2( fogColor, 0.015 );$/;"	r
fogColor	template/init.js	/^var fogColor = 0xAA9966;$/;"	r
geometry	template/init.js	/^var geometry = new THREE.CubeGeometry(1,1,1);$/;"	r
geometry2	template/init.js	/^var geometry2 = new THREE.CubeGeometry(1,1,1);$/;"	r
grid	template/init.js	/^var grid = new THREE.Mesh($/;"	r
gridWidth	template/init.js	/^var gridWidth = 128;$/;"	r
imageCube	template/init.js	/^var imageCube = getImageCube();$/;"	r
lightColor	template/init.js	/^var lightColor = 0xeeeeee;$/;"	r
lineX	template/init.js	/^var lineX = getLine(orig, new THREE.Vector3(10, 0, 0), 0xff0000);$/;"	r
lineY	template/init.js	/^var lineY = getLine(orig, new THREE.Vector3(0, 10, 0), 0x00ff00);$/;"	r
lineZ	template/init.js	/^var lineZ = getLine(orig, new THREE.Vector3(0, 0, 10), 0x0000ff);$/;"	r
material	template/init.js	/^var material = new THREE.MeshBasicMaterial({color: 0x009900});$/;"	r
material2	template/init.js	/^var material2 = new THREE.MeshLambertMaterial( { color: 0x66ffff } );$/;"	r
orig	template/init.js	/^var orig = new THREE.Vector3(0, 0, 0);$/;"	r
renderer	template/init.js	/^var renderer = new THREE.WebGLRenderer();$/;"	r
sand	template/init.js	/^var sand = getSand();$/;"	r
scene	template/init.js	/^var scene = new THREE.Scene();$/;"	r
wireframe	template/init.js	/^	new THREE.MeshLambertMaterial( { color: 0xdddddd, wireframe: true } )$/;"	r
x	template/init.js	/^camera.position.x = 5;$/;"	r
x	template/init.js	/^grid.rotation.x = Math.PI \/ -2;$/;"	r
y	template/init.js	/^camera.position.y = 5;$/;"	r
z	template/init.js	/^camera.position.z = -5;$/;"	r
z	template/init.js	/^directionalLight.position.z = 10;$/;"	r
castShadow	template/sand.js	/^	sand.castShadow = true;$/;"	r
geometry	template/sand.js	/^	    geometry,$/;"	r
geometry	template/sand.js	/^	var geometry = new THREE.PlaneGeometry(sandWidth, sandWidth, sandWidth, sandWidth);$/;"	r
getSand	template/sand.js	/^function getSand(){$/;"	r
receiveShadow	template/sand.js	/^	sand.receiveShadow = true;$/;"	r
sand	template/sand.js	/^	sand = new THREE.Mesh($/;"	r
sandTexture	template/sand.js	/^	var sandTexture= THREE.ImageUtils.loadTexture( 'sand.jpg' );$/;"	r
sandWidth	template/sand.js	/^	var geometry = new THREE.PlaneGeometry(sandWidth, sandWidth, sandWidth, sandWidth);$/;"	r
sandWidth	template/sand.js	/^	var sandWidth = 8*8;$/;"	r
simplexNoise	template/sand.js	/^	var simplexNoise = new SimplexNoise;$/;"	r
vertex	template/sand.js	/^	    var vertex = geometry.vertices[ i ];$/;"	r
wrapS	template/sand.js	/^	sandTexture.wrapS = sandTexture.wrapT = THREE.RepeatWrapping;$/;"	r
x	template/sand.js	/^	sand.rotation.x = Math.PI \/ -2;$/;"	r
z	template/sand.js	/^	    vertex.z = simplexNoise.noise( vertex.x \/ 20, vertex.y \/ 20 );$/;"	r
update	template/update.js	/^function update(){$/;"	r
2	template/util.js	/^	    new THREE.CubeGeometry(2, 2, 2, 1, 1, 1),$/;"	r
dice	template/util.js	/^	var dice = new THREE.Mesh($/;"	r
getImageCube	template/util.js	/^function getImageCube(){$/;"	r
materials	template/util.js	/^	var materials = [$/;"	r
p	template/util.js	/^function p(v){$/;"	r
path	template/util.js	/^	var path = '.\/me_avater.jpg';$/;"	r
0	three.js	/^						_gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );$/;"	r
0	three.js	/^					_gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );$/;"	r
0	three.js	/^					_gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );$/;"	r
0	three.js	/^					_gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );$/;"	r
0	three.js	/^					where.image.getContext( '2d' ).drawImage( this, 0, 0, width, height );$/;"	r
0	three.js	/^				_context.drawImage( bitmap, 0, 0 );$/;"	r
0	three.js	/^				_gl.copyTexImage2D( _gl.TEXTURE_2D, 0, _gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );$/;"	r
0	three.js	/^				_gl.copyTexImage2D( _gl.TEXTURE_2D, 0, _gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );$/;"	r
0	three.js	/^				_gl.drawArrays( _gl.POINTS, 0, position.numItems \/ 3 );$/;"	r
0	three.js	/^				_gl.drawArrays( _gl.TRIANGLES, 0, position.numItems \/ 3 );$/;"	r
0	three.js	/^				_gl.drawArrays( primitives, 0, position.numItems \/ 3 );$/;"	r
0	three.js	/^				_gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );$/;"	r
0	three.js	/^				_imagedatas[ texture.id ] = context.getImageData( 0, 0, texture.image.width, texture.image.height ).data;$/;"	r
0	three.js	/^				context.drawImage( texture.image, 0, 0 );$/;"	r
0	three.js	/^				handleTriangle( this, face.a, face.b, face.c, 0, 1, 2 );$/;"	r
0	three.js	/^				handleTriangle( this, face.a, face.b, face.d, 0, 1, 3 );$/;"	r
0	three.js	/^				points.push( [ - 1, 0, data[ ( y * width + lx ) * 4 ] \/ 255 * depth ] );$/;"	r
0	three.js	/^				points.push( [ 1, 0, data[ ( y * width + ux ) * 4 ] \/ 255 * depth ] );$/;"	r
0	three.js	/^				t = THREE.Math.clamp( t, 0, 1 );$/;"	r
0	three.js	/^				this.set( 1, 0, 0, 0 );$/;"	r
0	three.js	/^				var normal = [ 0, 0, 0 ];$/;"	r
0	three.js	/^				var origin = [ 0, 0, data[ ( y * width + x ) * 4 ] \/ 255 * depth ];$/;"	r
0	three.js	/^				vertices[ v ].set( 0, 0, 0 );$/;"	r
0	three.js	/^			 0, 0, 0, 1$/;"	r
0	three.js	/^			 0, 1, 0, 0,$/;"	r
0	three.js	/^			-s, 0, c, 0,$/;"	r
0	three.js	/^			0,  0, 0, 1$/;"	r
0	three.js	/^			0,  0, 1, 0,$/;"	r
0	three.js	/^			0, 0,  0, 1$/;"	r
0	three.js	/^			0, 0, 0, 1$/;"	r
0	three.js	/^			0, 0, 1$/;"	r
0	three.js	/^			0, 0, 1, 0,$/;"	r
0	three.js	/^			0, 0, 1, z,$/;"	r
0	three.js	/^			0, 0, z, 0,$/;"	r
0	three.js	/^			0, 1, 0, 0,$/;"	r
0	three.js	/^			0, 1, 0, y,$/;"	r
0	three.js	/^			0, 1, 0,$/;"	r
0	three.js	/^			0, c, -s, 0,$/;"	r
0	three.js	/^			0, s,  c, 0,$/;"	r
0	three.js	/^			0, y, 0, 0,$/;"	r
0	three.js	/^			? setFillStyle( 'rgba(0,0,0,1)' )$/;"	r
0	three.js	/^			_gl.drawArrays( _gl.POINTS, 0, geometryGroup.__webglParticleCount );$/;"	r
0	three.js	/^			_gl.drawArrays( _gl.TRIANGLE_STRIP, 0, geometryGroup.__webglVertexCount );$/;"	r
0	three.js	/^			_gl.drawArrays( primitives, 0, geometryGroup.__webglLineCount );$/;"	r
0	three.js	/^			axis.set( dir.z, 0, - dir.x ).normalize();$/;"	r
0	three.js	/^			face.centroid.set( 0, 0, 0 );$/;"	r
0	three.js	/^			new THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),$/;"	r
0	three.js	/^			new THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )$/;"	r
0	three.js	/^			normal.set( 0, 0, 1 );$/;"	r
0	three.js	/^			normal.set( 1, 0, 0 );$/;"	r
0	three.js	/^			this.boundingBox.max.set( 0, 0, 0 );$/;"	r
0	three.js	/^			this.boundingBox.min.set( 0, 0, 0 );$/;"	r
0	three.js	/^			this.quaternion.set( 0, 0, 0, 1 );$/;"	r
0	three.js	/^			this.quaternion.set( 1, 0, 0, 0 );$/;"	r
0	three.js	/^			tx * x + c, tx * y - s * z, tx * z + s * y, 0,$/;"	r
0	three.js	/^			tx * y + s * z, ty * y + c, ty * z - s * x, 0,$/;"	r
0	three.js	/^			tx * z - s * y, ty * z + s * x, t * z * z + c, 0,$/;"	r
0	three.js	/^		"offsetRepeat" : { type: "v4", value: new THREE.Vector4( 0, 0, 1, 1 ) },$/;"	r
0	three.js	/^		[  t,  0, -1 ], [  t, 0, 1 ], [ -t,  0, -1 ], [ -t,  0,  1 ]$/;"	r
0	three.js	/^		[ 1, 0, 0 ], [ -1, 0, 0 ], [ 0, 1, 0 ], [ 0, -1, 0 ], [ 0, 0, 1 ], [ 0, 0, -1 ]$/;"	r
0	three.js	/^		\/\/ rgb(255,0,0)$/;"	r
0	three.js	/^		_ambientLight.setRGB( 0, 0, 0 );$/;"	r
0	three.js	/^		_context.drawImage( image, 0, 0 );$/;"	r
0	three.js	/^		_context.setTransform( 1, 0, 0, - 1, _canvasWidthHalf, _canvasHeightHalf );$/;"	r
0	three.js	/^		_context.setTransform( 1, 0, 0, 1, 0, 0 );$/;"	r
0	three.js	/^		_directionalLights.setRGB( 0, 0, 0 );$/;"	r
0	three.js	/^		_gl.clearColor( 0, 0, 0, 1 );$/;"	r
0	three.js	/^		_gl.drawArrays( _gl.TRIANGLES, 0, object.count );$/;"	r
0	three.js	/^		_gl.texImage2D( _gl.TEXTURE_2D, 0, _gl.RGB, 16, 16, 0, _gl.RGB, _gl.UNSIGNED_BYTE, null );$/;"	r
0	three.js	/^		_gl.texImage2D( _gl.TEXTURE_2D, 0, _gl.RGBA, 16, 16, 0, _gl.RGBA, _gl.UNSIGNED_BYTE, null );$/;"	r
0	three.js	/^		_gradientMapContext.drawImage( _pixelMap, 0, 0 );$/;"	r
0	three.js	/^		_pixelMapContext.putImageData( _pixelMapImage, 0, 0 );$/;"	r
0	three.js	/^		_pointLights.setRGB( 0, 0, 0 );$/;"	r
0	three.js	/^		ambient: [ 0, 0, 0 ],$/;"	r
0	three.js	/^		context.drawImage( image, 0, 0 );$/;"	r
0	three.js	/^		context.putImageData( imageData, 0, 0 );$/;"	r
0	three.js	/^		ctx.drawImage( image, 0, 0, image.width, image.height, 0, 0, newWidth, newHeight );$/;"	r
0	three.js	/^		e.style.background = "rgba(0,0,0,0.25)";$/;"	r
0	three.js	/^		if (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );$/;"	r
0	three.js	/^		new THREE.Vector3(), new THREE.Vector3( 0, 0, size )$/;"	r
0	three.js	/^		new THREE.Vector3(), new THREE.Vector3( size, 0, 0 ),$/;"	r
0	three.js	/^		return result.set( 0, 0, 0 );$/;"	r
0	three.js	/^		setPoint( "c", 0, 0, -1 );$/;"	r
0	three.js	/^		setPoint( "cf1", -w,  0, 1 );$/;"	r
0	three.js	/^		setPoint( "cf3",  0, -h, 1 );$/;"	r
0	three.js	/^		setPoint( "cf4",  0,  h, 1 );$/;"	r
0	three.js	/^		setPoint( "cn1", -w,  0, -1 );$/;"	r
0	three.js	/^		setPoint( "cn3",  0, -h, -1 );$/;"	r
0	three.js	/^		setPoint( "cn4",  0,  h, -1 );$/;"	r
0	three.js	/^		setPoint( "t", 0, 0,  1 );$/;"	r
0	three.js	/^		setPoint( "u3",        0, h * 2,   -1 );$/;"	r
0	three.js	/^		setStrokeStyle( 'rgba( 255, 0, 0, 0.5 )' );$/;"	r
0	three.js	/^		this.center.set( 0, 0, 0 );$/;"	r
0	three.js	/^		this.setViewport( 0, 0, _canvas.width, _canvas.height );$/;"	r
0	three.js	/^		var data = context.getImageData( 0, 0, width, height ).data;$/;"	r
0	three.js	/^		var header = new Int32Array( buffer, 0, headerLengthInt );$/;"	r
0	three.js	/^		var keyframe = animation.startFrame + THREE.Math.clamp( Math.floor( animation.time \/ frameTime ), 0, animation.length - 1 );$/;"	r
0	three.js	/^		var v1 = new THREE.Vector3( 0, 0, 1 );$/;"	r
0	three.js	/^		var v1 = new THREE.Vector3( 1, 0, 0 );$/;"	r
0	three.js	/^	\/\/ Center geometry so that 0,0,0 is in center of bounding box$/;"	r
0	three.js	/^	_pixelMapContext.fillRect( 0, 0, 2, 2 );$/;"	r
0	three.js	/^	_pixelMapContext.fillStyle = 'rgba(0,0,0,1)';$/;"	r
0	three.js	/^	_pixelMapImage = _pixelMapContext.getImageData( 0, 0, 2, 2 );$/;"	r
0	three.js	/^	cameraNX.lookAt( new THREE.Vector3( -1, 0, 0 ) );$/;"	r
0	three.js	/^	cameraNY.up.set( 0, 0, -1 );$/;"	r
0	three.js	/^	cameraNZ.lookAt( new THREE.Vector3( 0, 0, -1 ) );$/;"	r
0	three.js	/^	cameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );$/;"	r
0	three.js	/^	cameraPY.up.set( 0, 0, 1 );$/;"	r
0	three.js	/^	cameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );$/;"	r
0	three.js	/^	lineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ) );$/;"	r
0	three.js	/^	this.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );$/;"	r
0	three.js	/^	this.objects.splice( l, 0, { distance: distance, object: object } );$/;"	r
0	three.js	/^	this.right = new THREE.Vector3( 1, 0, 0 );$/;"	r
0	three.js	/^	this.rotation3d.set( 0, 0, this.rotation, this.rotation3d.order );$/;"	r
0	three.js	/^	this.shadowCascadeBias = [ 0, 0, 0 ];$/;"	r
0	three.js	/^	this.shadowCascadeOffset = new THREE.Vector3( 0, 0, -1000 );$/;"	r
0	three.js	/^	var keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time \/ frameTime ), 0, this.length - 1 );$/;"	r
0	three.js	/^	var n = new THREE.Vector3( 0, 0, 1 );$/;"	r
0	three.js	/^	var normal = new THREE.Vector3( 0, 0, 1 );$/;"	r
1	three.js	/^				"wrapRGB"  : { type: "v3", value: new THREE.Vector3( 1, 1, 1 ) }$/;"	r
1	three.js	/^				_gl.vertexAttribPointer( attributes.lineDistance, 1, _gl.FLOAT, false, 0, 0 );$/;"	r
1	three.js	/^				bone.scale.set( 1, 1, 1 );$/;"	r
1	three.js	/^				handleTriangle( this, face.b, face.c, face.d, 1, 2, 3 );$/;"	r
1	three.js	/^				points.push( [ - 1, 1, data[ ( uy * width + lx ) * 4 ] \/ 255 * depth ] );$/;"	r
1	three.js	/^				points.push( [ 0, 1, data[ ( uy * width + x ) * 4 ] \/ 255 * depth ] );$/;"	r
1	three.js	/^				points.push( [ 1, 1, data[ ( uy * width + ux ) * 4 ] \/ 255 * depth ] );$/;"	r
1	three.js	/^			"wrapRGB"  : { type: "v3", value: new THREE.Vector3( 1, 1, 1 ) }$/;"	r
1	three.js	/^			1, 0,  0, 0,$/;"	r
1	three.js	/^			1, 0, 0, 0,$/;"	r
1	three.js	/^			1, 0, 0, x,$/;"	r
1	three.js	/^			1, 0, 0,$/;"	r
1	three.js	/^			normal.set( 0, 1, 0 );$/;"	r
1	three.js	/^			var n1 = new THREE.Vector3( 0, 1, 0 );$/;"	r
1	three.js	/^			var n2 = new THREE.Vector3( 0, 1, 0 );$/;"	r
1	three.js	/^			var n3 = new THREE.Vector3( 0, 1, 0 );$/;"	r
1	three.js	/^		[  0, -1,  t ], [  0, 1, t ], [  0, -1, -t ], [  0,  1, -t ],$/;"	r
1	three.js	/^		[ 1,  1,  1 ], [ -1, -1, 1 ], [ -1, 1, -1 ], [ 1, -1, -1 ]$/;"	r
1	three.js	/^		[ 2, 1, 0 ], [ 0, 3, 2 ], [ 1, 3, 0 ], [ 2, 3, 1 ]$/;"	r
1	three.js	/^		_gl.clearColor( 1, 1, 1, 1 );$/;"	r
1	three.js	/^		new THREE.Vector3(   1,   1,   1 ),$/;"	r
1	three.js	/^		new THREE.Vector3(   1,   1, - 1 ),$/;"	r
1	three.js	/^		new THREE.Vector3( - 1,   1,   1 ),$/;"	r
1	three.js	/^		new THREE.Vector3( - 1,   1, - 1 ),$/;"	r
1	three.js	/^		pointsFrustum[ 2 ].set( -1,  1, nearZ );$/;"	r
1	three.js	/^		pointsFrustum[ 3 ].set(  1,  1, nearZ );$/;"	r
1	three.js	/^		pointsFrustum[ 6 ].set( -1,  1, farZ );$/;"	r
1	three.js	/^		pointsFrustum[ 7 ].set(  1,  1, farZ );$/;"	r
1	three.js	/^		var screenPosition = new THREE.Vector3( 1, 1, 0 ),$/;"	r
1	three.js	/^		var v1 = new THREE.Vector3( 0, 1, 0 );$/;"	r
1	three.js	/^	THREE.Mesh.call( this, new THREE.CubeGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );$/;"	r
1	three.js	/^	_clipBox = new THREE.Box3( new THREE.Vector3( -1, -1, -1 ), new THREE.Vector3( 1, 1, 1 ) ),$/;"	r
1	three.js	/^	buildPlane( 'x', 'y',   1, - 1, this.width, this.height, depth_half, 4 ); \/\/ pz$/;"	r
1	three.js	/^	buildPlane( 'x', 'z',   1,   1, this.width, this.depth, height_half, 2 ); \/\/ py$/;"	r
1	three.js	/^	buildPlane( 'x', 'z',   1, - 1, this.width, this.depth, - height_half, 3 ); \/\/ ny$/;"	r
1	three.js	/^	buildPlane( 'z', 'y',   1, - 1, this.depth, this.height, - width_half, 1 ); \/\/ nx$/;"	r
1	three.js	/^	cameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );$/;"	r
1	three.js	/^	lineGeometry.vertices.push( new THREE.Vector3( 0, 1, 0 ) );$/;"	r
1	three.js	/^	this.position.set( 0, 1, 0 );$/;"	r
1	three.js	/^	this.scale = new THREE.Vector3( 1, 1, 1 );$/;"	r
1	three.js	/^	this.up = new THREE.Vector3( 0, 1, 0 );$/;"	r
1	three.js	/^	this.wrapRGB = new THREE.Vector3( 1, 1, 1 );$/;"	r
1	three.js	/^	var geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );$/;"	r
100	three.js	/^	this.position.set( 0, 100, 0 );$/;"	r
11	three.js	/^		[ 0, 11,  5 ], [ 0,  5,  1 ], [  0,  1,  7 ], [  0,  7, 10 ], [  0, 10, 11 ],$/;"	r
2	three.js	/^				_context.fillRect( -1, -1, 2, 2 );$/;"	r
2	three.js	/^				_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );$/;"	r
2	three.js	/^				_gl.vertexAttribPointer( attributes.uv2, 2, _gl.FLOAT, false, 0, 0 );$/;"	r
2	three.js	/^			_gl.vertexAttribPointer( program.attributes.uv, 2, _gl.FLOAT, false, 0, 0 );$/;"	r
2	three.js	/^		[ 0, 2, 4 ], [ 0, 4, 3 ], [ 0, 3, 5 ], [ 0, 5, 2 ], [ 1, 2, 5 ], [ 1, 5, 3 ], [ 1, 3, 4 ], [ 1, 4, 2 ]$/;"	r
2	three.js	/^		_gl.vertexAttribPointer( attributes.position, 2, _gl.FLOAT, false, 2 * 8, 0 );$/;"	r
2	three.js	/^		_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 2 * 8, 8 );$/;"	r
2	three.js	/^		_gl.vertexAttribPointer( attributes.vertex, 2, _gl.FLOAT, false, 2 * 8, 0 );$/;"	r
2	three.js	/^	this.unpackAlignment = 4; \/\/ valid values: 1, 2, 4, 8 (see http:\/\/www.khronos.org\/opengles\/sdk\/docs\/man\/xhtml\/glPixelStorei.xml)$/;"	r
2000	three.js	/^ * flipcode.com by John W. Ratcliff  \/\/ July 22, 2000$/;"	r
255	three.js	/^			setStrokeStyle( 'rgb(255,255,0)' );$/;"	r
255	three.js	/^			setStrokeStyle( 'rgba( 0, 255, 0, 0.5 )' );$/;"	r
255	three.js	/^		setFillStyle( 'rgba( 0, 255, 255, 0.5 )' );$/;"	r
3	three.js	/^						_gl.vertexAttribPointer( attributes[ "morphNormal" + m ], 3, _gl.FLOAT, false, 0, 0 );$/;"	r
3	three.js	/^						_gl.vertexAttribPointer( attributes[ "morphTarget" + m ], 3, _gl.FLOAT, false, 0, 0 );$/;"	r
3	three.js	/^					_gl.vertexAttribPointer( attributes[ "morphNormal" + m ], 3, _gl.FLOAT, false, 0, 0 );$/;"	r
3	three.js	/^					_gl.vertexAttribPointer( attributes[ "morphTarget" + m ], 3, _gl.FLOAT, false, 0, 0 );$/;"	r
3	three.js	/^				_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );$/;"	r
3	three.js	/^				_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );$/;"	r
3	three.js	/^				_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );$/;"	r
3	three.js	/^			_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );$/;"	r
3	three.js	/^			_gl.vertexAttribPointer( program.attributes.color, 3, _gl.FLOAT, false, 0, 0 );$/;"	r
3	three.js	/^			_gl.vertexAttribPointer( program.attributes.normal, 3, _gl.FLOAT, false, 0, 0 );$/;"	r
3	three.js	/^			_gl.vertexAttribPointer( program.attributes.position, 3, _gl.FLOAT, false, 0, 0 );$/;"	r
4	three.js	/^				_gl.vertexAttribPointer( attributes.skinIndex, 4, _gl.FLOAT, false, 0, 0 );$/;"	r
4	three.js	/^				_gl.vertexAttribPointer( attributes.skinWeight, 4, _gl.FLOAT, false, 0, 0 );$/;"	r
4	three.js	/^				_gl.vertexAttribPointer( attributes.tangent, 4, _gl.FLOAT, false, 0, 0 );$/;"	r
4	three.js	/^	var geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );$/;"	r
5	three.js	/^		[ 1,  5,  9 ], [ 5, 11,  4 ], [ 11, 10,  2 ], [ 10,  7,  6 ], [  7,  1,  8 ],$/;"	r
5	three.js	/^	var coneGeometry = new THREE.CylinderGeometry( 0, 0.05, 0.25, 5, 1 );$/;"	r
512	three.js	/^	this.shadowCascadeHeight = [ 512, 512, 512 ];$/;"	r
512	three.js	/^	this.shadowCascadeWidth = [ 512, 512, 512 ];$/;"	r
6	three.js	/^						_gl.drawElements( _gl.TRIANGLES, 6, _gl.UNSIGNED_SHORT, 0 );$/;"	r
6	three.js	/^				_gl.drawElements( _gl.TRIANGLES, 6, _gl.UNSIGNED_SHORT, 0 );$/;"	r
9	three.js	/^		[ 3,  9,  4 ], [ 3,  4,  2 ], [  3,  2,  6 ], [  3,  6,  8 ], [  3,  8,  9 ],$/;"	r
9	three.js	/^		[ 4,  9,  5 ], [ 2,  4, 11 ], [  6,  2, 10 ], [  8,  6,  7 ], [  9,  8,  1 ]$/;"	r
ARC	three.js	/^	ARC: 'arc',								\/\/ Circle$/;"	r
AddEquation	three.js	/^THREE.AddEquation = 100;$/;"	r
AddOperation	three.js	/^THREE.AddOperation = 2;$/;"	r
AdditiveBlending	three.js	/^THREE.AdditiveBlending = 2;$/;"	r
AlphaFormat	three.js	/^THREE.AlphaFormat = 1019;$/;"	r
AmbientLight	three.js	/^THREE.AmbientLight = function ( hex ) {$/;"	r
Animation	three.js	/^THREE.Animation = function ( root, name, interpolationType ) {$/;"	r
AnimationHandler	three.js	/^THREE.AnimationHandler = (function() {$/;"	r
ArcCurve	three.js	/^THREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {$/;"	r
AreaLight	three.js	/^THREE.AreaLight = function ( hex, intensity ) {$/;"	r
ArrowHelper	three.js	/^THREE.ArrowHelper = function ( dir, origin, length, hex ) {$/;"	r
AxisHelper	three.js	/^THREE.AxisHelper = function ( size ) {$/;"	r
BEZIER_CURVE_TO	three.js	/^	BEZIER_CURVE_TO: 'bezierCurveTo', 		\/\/ Bezier cubic curve$/;"	r
BackSide	three.js	/^THREE.BackSide = 1;$/;"	r
BasicShadowMap	three.js	/^THREE.BasicShadowMap = 0;$/;"	r
Bone	three.js	/^THREE.Bone = function( belongsToSkin ) {$/;"	r
BoundingBoxHelper	three.js	/^THREE.BoundingBoxHelper = function ( object, hex ) {$/;"	r
Box2	three.js	/^THREE.Box2 = function ( min, max ) {$/;"	r
Box3	three.js	/^THREE.Box3 = function ( min, max ) {$/;"	r
BoxHelper	three.js	/^THREE.BoxHelper = function ( object ) {$/;"	r
BufferGeometry	three.js	/^THREE.BufferGeometry = function () {$/;"	r
ByteType	three.js	/^THREE.ByteType = 1010;$/;"	r
CATMULLROM	three.js	/^	that.CATMULLROM = 1;$/;"	r
CATMULLROM_FORWARD	three.js	/^	that.CATMULLROM_FORWARD = 2;$/;"	r
CSPLINE_THRU	three.js	/^	CSPLINE_THRU: 'splineThru',				\/\/ Catmull-rom spline$/;"	r
Camera	three.js	/^THREE.Camera = function () {$/;"	r
CameraHelper	three.js	/^THREE.CameraHelper = function ( camera ) {$/;"	r
CanvasRenderer	three.js	/^THREE.CanvasRenderer = function ( parameters ) {$/;"	r
CircleGeometry	three.js	/^THREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {$/;"	r
ClampToEdgeWrapping	three.js	/^THREE.ClampToEdgeWrapping = 1001;$/;"	r
Clock	three.js	/^THREE.Clock = function ( autoStart ) {$/;"	r
ClosedSplineCurve3	three.js	/^THREE.ClosedSplineCurve3 = THREE.Curve.create($/;"	r
Color	three.js	/^THREE.Color = function ( value ) {$/;"	r
ColorKeywords	three.js	/^THREE.ColorKeywords = { "aliceblue": 0xF0F8FF, "antiquewhite": 0xFAEBD7, "aqua": 0x00FFFF, "aquamarine": 0x7FFFD4, "azure": 0xF0FFFF,$/;"	r
CombinedCamera	three.js	/^THREE.CombinedCamera = function ( width, height, fov, near, far, orthoNear, orthoFar ) {$/;"	r
CompressedTexture	three.js	/^THREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {$/;"	r
CubeCamera	three.js	/^THREE.CubeCamera = function ( near, far, cubeResolution ) {$/;"	r
CubeGeometry	three.js	/^THREE.CubeGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {$/;"	r
CubeReflectionMapping	three.js	/^THREE.CubeReflectionMapping = function () {};$/;"	r
CubeRefractionMapping	three.js	/^THREE.CubeRefractionMapping = function () {};$/;"	r
CubicBezierCurve	three.js	/^THREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {$/;"	r
CubicBezierCurve3	three.js	/^THREE.CubicBezierCurve3 = THREE.Curve.create($/;"	r
CullFaceBack	three.js	/^THREE.CullFaceBack = 1;$/;"	r
CullFaceFront	three.js	/^THREE.CullFaceFront = 2;$/;"	r
CullFaceFrontBack	three.js	/^THREE.CullFaceFrontBack = 3;$/;"	r
CullFaceNone	three.js	/^THREE.CullFaceNone = 0;$/;"	r
Curve	three.js	/^THREE.Curve = function () {$/;"	r
CurvePath	three.js	/^THREE.CurvePath = function () {$/;"	r
CustomBlending	three.js	/^THREE.CustomBlending = 5;$/;"	r
CylinderGeometry	three.js	/^THREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded ) {$/;"	r
DDPF_ALPHA	three.js	/^			DDPF_ALPHA = 0x2,$/;"	r
DDPF_ALPHAPIXELS	three.js	/^		var DDPF_ALPHAPIXELS = 0x1,$/;"	r
DDPF_FOURCC	three.js	/^			DDPF_FOURCC = 0x4,$/;"	r
DDPF_LUMINANCE	three.js	/^			DDPF_LUMINANCE = 0x20000;$/;"	r
DDPF_RGB	three.js	/^			DDPF_RGB = 0x40,$/;"	r
DDPF_YUV	three.js	/^			DDPF_YUV = 0x200,$/;"	r
DDSCAPS2_CUBEMAP	three.js	/^		var DDSCAPS2_CUBEMAP = 0x200,$/;"	r
DDSCAPS2_CUBEMAP_NEGATIVEX	three.js	/^			DDSCAPS2_CUBEMAP_NEGATIVEX = 0x800,$/;"	r
DDSCAPS2_CUBEMAP_NEGATIVEY	three.js	/^			DDSCAPS2_CUBEMAP_NEGATIVEY = 0x2000,$/;"	r
DDSCAPS2_CUBEMAP_NEGATIVEZ	three.js	/^			DDSCAPS2_CUBEMAP_NEGATIVEZ = 0x8000,$/;"	r
DDSCAPS2_CUBEMAP_POSITIVEX	three.js	/^			DDSCAPS2_CUBEMAP_POSITIVEX = 0x400,$/;"	r
DDSCAPS2_CUBEMAP_POSITIVEY	three.js	/^			DDSCAPS2_CUBEMAP_POSITIVEY = 0x1000,$/;"	r
DDSCAPS2_CUBEMAP_POSITIVEZ	three.js	/^			DDSCAPS2_CUBEMAP_POSITIVEZ = 0x4000,$/;"	r
DDSCAPS2_VOLUME	three.js	/^			DDSCAPS2_VOLUME = 0x200000;$/;"	r
DDSCAPS_COMPLEX	three.js	/^		var DDSCAPS_COMPLEX = 0x8,$/;"	r
DDSCAPS_MIPMAP	three.js	/^			DDSCAPS_MIPMAP = 0x400000,$/;"	r
DDSCAPS_TEXTURE	three.js	/^			DDSCAPS_TEXTURE = 0x1000;$/;"	r
DDSD_CAPS	three.js	/^		var DDSD_CAPS = 0x1,$/;"	r
DDSD_DEPTH	three.js	/^			DDSD_DEPTH = 0x800000;$/;"	r
DDSD_HEIGHT	three.js	/^			DDSD_HEIGHT = 0x2,$/;"	r
DDSD_LINEARSIZE	three.js	/^			DDSD_LINEARSIZE = 0x80000,$/;"	r
DDSD_MIPMAPCOUNT	three.js	/^			DDSD_MIPMAPCOUNT = 0x20000,$/;"	r
DDSD_PITCH	three.js	/^			DDSD_PITCH = 0x8,$/;"	r
DDSD_PIXELFORMAT	three.js	/^			DDSD_PIXELFORMAT = 0x1000,$/;"	r
DDSD_WIDTH	three.js	/^			DDSD_WIDTH = 0x4,$/;"	r
DDS_MAGIC	three.js	/^		var DDS_MAGIC = 0x20534444;$/;"	r
DataTexture	three.js	/^THREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {$/;"	r
DefaultLoadingManager	three.js	/^THREE.DefaultLoadingManager = new THREE.LoadingManager();$/;"	r
DefaultOrder	three.js	/^THREE.Euler.DefaultOrder = 'XYZ';$/;"	r
DepthPassPlugin	three.js	/^THREE.DepthPassPlugin = function () {$/;"	r
DirectionalLight	three.js	/^THREE.DirectionalLight = function ( hex, intensity ) {$/;"	r
DirectionalLightHelper	three.js	/^THREE.DirectionalLightHelper = function ( light, size ) {$/;"	r
DoubleSide	three.js	/^THREE.DoubleSide = 2;$/;"	r
DstAlphaFactor	three.js	/^THREE.DstAlphaFactor = 206;$/;"	r
DstColorFactor	three.js	/^THREE.DstColorFactor = 208;$/;"	r
ELLIPSE	three.js	/^	ELLIPSE: 'ellipse'$/;"	r
EPSILON	three.js	/^	var EPSILON = 0.0000000001;$/;"	r
EllipseCurve	three.js	/^THREE.EllipseCurve = function ( aX, aY, xRadius, yRadius,$/;"	r
Euler	three.js	/^THREE.Euler = function ( x, y, z, order ) {$/;"	r
EventDispatcher	three.js	/^THREE.EventDispatcher = function () {}$/;"	r
ExtrudeGeometry	three.js	/^THREE.ExtrudeGeometry = function ( shapes, options ) {$/;"	r
FOURCC_DXT1	three.js	/^		var FOURCC_DXT1 = fourCCToInt32("DXT1");$/;"	r
FOURCC_DXT3	three.js	/^		var FOURCC_DXT3 = fourCCToInt32("DXT3");$/;"	r
FOURCC_DXT5	three.js	/^		var FOURCC_DXT5 = fourCCToInt32("DXT5");$/;"	r
Face3	three.js	/^THREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {$/;"	r
Face4	three.js	/^THREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {$/;"	r
FaceColors	three.js	/^THREE.FaceColors = 1;$/;"	r
FaceNormalsHelper	three.js	/^THREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {$/;"	r
FlatShading	three.js	/^THREE.FlatShading = 1;$/;"	r
FloatType	three.js	/^THREE.FloatType = 1015;$/;"	r
Fog	three.js	/^THREE.Fog = function ( hex, near, far ) {$/;"	r
FogExp2	three.js	/^THREE.FogExp2 = function ( hex, density ) {$/;"	r
FontUtils	three.js	/^THREE.FontUtils = {$/;"	r
FrenetFrames	three.js	/^THREE.TubeGeometry.FrenetFrames = function(path, segments, closed) {$/;"	r
FrontFaceDirectionCCW	three.js	/^THREE.FrontFaceDirectionCCW = 1;$/;"	r
FrontFaceDirectionCW	three.js	/^THREE.FrontFaceDirectionCW = 0;$/;"	r
FrontSide	three.js	/^THREE.FrontSide = 0;$/;"	r
Frustum	three.js	/^THREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {$/;"	r
Geometry	three.js	/^THREE.Geometry = function () {$/;"	r
GeometryIdCount	three.js	/^THREE.GeometryIdCount = 0;$/;"	r
GeometryLoader	three.js	/^THREE.GeometryLoader = function ( manager ) {$/;"	r
GeometryUtils	three.js	/^THREE.GeometryUtils = {$/;"	r
GridHelper	three.js	/^THREE.GridHelper = function ( size, step ) {$/;"	r
Gyroscope	three.js	/^THREE.Gyroscope = function () {$/;"	r
HemisphereLight	three.js	/^THREE.HemisphereLight = function ( skyColorHex, groundColorHex, intensity ) {$/;"	r
HemisphereLightHelper	three.js	/^THREE.HemisphereLightHelper = function ( light, sphereSize, arrowLength, domeSize ) {$/;"	r
IcosahedronGeometry	three.js	/^THREE.IcosahedronGeometry = function ( radius, detail ) {$/;"	r
ImageLoader	three.js	/^THREE.ImageLoader = function ( manager ) {$/;"	r
ImageUtils	three.js	/^THREE.ImageUtils = {$/;"	r
ImmediateRenderObject	three.js	/^THREE.ImmediateRenderObject = function () {$/;"	r
Infinity	three.js	/^		_min.set( Infinity, Infinity, Infinity );$/;"	r
Infinity	three.js	/^	this.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );$/;"	r
IntType	three.js	/^THREE.IntType = 1013;$/;"	r
JIT	three.js	/^		data.JIT = {};$/;"	r
JITCompile	three.js	/^	this.JITCompile = JITCompile !== undefined ? JITCompile : true;$/;"	r
JIThierarchy	three.js	/^	var JIThierarchy = this.data.JIT.hierarchy;$/;"	r
JSONLoader	three.js	/^THREE.JSONLoader = function ( showStatus ) {$/;"	r
KeyFrameAnimation	three.js	/^THREE.KeyFrameAnimation = function( root, data, JITCompile ) {$/;"	r
LINEAR	three.js	/^	that.LINEAR = 0;$/;"	r
LINE_TO	three.js	/^	LINE_TO: 'lineTo',$/;"	r
LOD	three.js	/^THREE.LOD = function () {$/;"	r
LatheGeometry	three.js	/^THREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {$/;"	r
LensFlare	three.js	/^THREE.LensFlare = function ( texture, size, distance, blending, color ) {$/;"	r
LensFlarePlugin	three.js	/^THREE.LensFlarePlugin = function () {$/;"	r
Light	three.js	/^THREE.Light = function ( hex ) {$/;"	r
Line	three.js	/^THREE.Line = function ( geometry, material, type ) {$/;"	r
Line3	three.js	/^THREE.Line3 = function ( start, end ) {$/;"	r
LineBasicMaterial	three.js	/^THREE.LineBasicMaterial = function ( parameters ) {$/;"	r
LineCurve	three.js	/^THREE.LineCurve = function ( v1, v2 ) {$/;"	r
LineCurve3	three.js	/^THREE.LineCurve3 = THREE.Curve.create($/;"	r
LineDashedMaterial	three.js	/^THREE.LineDashedMaterial = function ( parameters ) {$/;"	r
LinePieces	three.js	/^THREE.LinePieces = 1;$/;"	r
LineStrip	three.js	/^THREE.LineStrip = 0;$/;"	r
LinearFilter	three.js	/^THREE.LinearFilter = 1006;$/;"	r
LinearMipMapLinearFilter	three.js	/^THREE.LinearMipMapLinearFilter = 1008;$/;"	r
LinearMipMapNearestFilter	three.js	/^THREE.LinearMipMapNearestFilter = 1007;$/;"	r
Loader	three.js	/^THREE.Loader = function ( showStatus ) {$/;"	r
LoadingManager	three.js	/^THREE.LoadingManager = function ( onLoad, onProgress, onError ) {$/;"	r
LuminanceAlphaFormat	three.js	/^THREE.LuminanceAlphaFormat = 1023;$/;"	r
LuminanceFormat	three.js	/^THREE.LuminanceFormat = 1022;$/;"	r
MOVE_TO	three.js	/^	MOVE_TO: 'moveTo',$/;"	r
Material	three.js	/^THREE.Material = function () {$/;"	r
MaterialIdCount	three.js	/^THREE.MaterialIdCount = 0;$/;"	r
MaterialLoader	three.js	/^THREE.MaterialLoader = function ( manager ) {$/;"	r
Math	three.js	/^THREE.Math = {$/;"	r
Matrix3	three.js	/^THREE.Matrix3 = function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {$/;"	r
Matrix4	three.js	/^THREE.Matrix4 = function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {$/;"	r
Mesh	three.js	/^THREE.Mesh = function ( geometry, material ) {$/;"	r
MeshBasicMaterial	three.js	/^THREE.MeshBasicMaterial = function ( parameters ) {$/;"	r
MeshDepthMaterial	three.js	/^THREE.MeshDepthMaterial = function ( parameters ) {$/;"	r
MeshFaceMaterial	three.js	/^THREE.MeshFaceMaterial = function ( materials ) {$/;"	r
MeshLambertMaterial	three.js	/^THREE.MeshLambertMaterial = function ( parameters ) {$/;"	r
MeshNormalMaterial	three.js	/^THREE.MeshNormalMaterial = function ( parameters ) {$/;"	r
MeshPhongMaterial	three.js	/^THREE.MeshPhongMaterial = function ( parameters ) {$/;"	r
MirroredRepeatWrapping	three.js	/^THREE.MirroredRepeatWrapping = 1002;$/;"	r
MixOperation	three.js	/^THREE.MixOperation = 1;$/;"	r
MorphAnimMesh	three.js	/^THREE.MorphAnimMesh = function ( geometry, material ) {$/;"	r
MorphBlendMesh	three.js	/^THREE.MorphBlendMesh = function( geometry, material ) {$/;"	r
MultiplyBlending	three.js	/^THREE.MultiplyBlending = 4;$/;"	r
MultiplyOperation	three.js	/^THREE.MultiplyOperation = 0;$/;"	r
NearestFilter	three.js	/^THREE.NearestFilter = 1003;$/;"	r
NearestMipMapLinearFilter	three.js	/^THREE.NearestMipMapLinearFilter = 1005;$/;"	r
NearestMipMapNearestFilter	three.js	/^THREE.NearestMipMapNearestFilter = 1004;$/;"	r
NoBlending	three.js	/^THREE.NoBlending = 0;$/;"	r
NoColors	three.js	/^THREE.NoColors = 0;$/;"	r
NoShading	three.js	/^THREE.NoShading = 0;$/;"	r
NormalBlending	three.js	/^THREE.NormalBlending = 1;$/;"	r
Object3D	three.js	/^THREE.Object3D = function () {$/;"	r
Object3DIdCount	three.js	/^THREE.Object3DIdCount = 0;$/;"	r
ObjectLoader	three.js	/^THREE.ObjectLoader = function ( manager ) {$/;"	r
OctahedronGeometry	three.js	/^THREE.OctahedronGeometry = function ( radius, detail ) {$/;"	r
OneFactor	three.js	/^THREE.OneFactor = 201;$/;"	r
OneMinusDstAlphaFactor	three.js	/^THREE.OneMinusDstAlphaFactor = 207;$/;"	r
OneMinusDstColorFactor	three.js	/^THREE.OneMinusDstColorFactor = 209;$/;"	r
OneMinusSrcAlphaFactor	three.js	/^THREE.OneMinusSrcAlphaFactor = 205;$/;"	r
OneMinusSrcColorFactor	three.js	/^THREE.OneMinusSrcColorFactor = 203;$/;"	r
OrthographicCamera	three.js	/^THREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {$/;"	r
PCFShadowMap	three.js	/^THREE.PCFShadowMap = 1;$/;"	r
PCFSoftShadowMap	three.js	/^THREE.PCFSoftShadowMap = 2;$/;"	r
PI2	three.js	/^	PI2: Math.PI * 2,$/;"	r
ParametricGeometry	three.js	/^THREE.ParametricGeometry = function ( func, slices, stacks, useTris ) {$/;"	r
Particle	three.js	/^THREE.Particle = function ( material ) {$/;"	r
ParticleBasicMaterial	three.js	/^THREE.ParticleBasicMaterial = function ( parameters ) {$/;"	r
ParticleCanvasMaterial	three.js	/^THREE.ParticleCanvasMaterial = function ( parameters ) {$/;"	r
ParticleSystem	three.js	/^THREE.ParticleSystem = function ( geometry, material ) {$/;"	r
Path	three.js	/^THREE.Path = function ( points ) {$/;"	r
PathActions	three.js	/^THREE.PathActions = {$/;"	r
PerspectiveCamera	three.js	/^THREE.PerspectiveCamera = function ( fov, aspect, near, far ) {$/;"	r
Plane	three.js	/^THREE.Plane = function ( normal, constant ) {$/;"	r
PlaneGeometry	three.js	/^THREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {$/;"	r
PointLight	three.js	/^THREE.PointLight = function ( hex, intensity, distance ) {$/;"	r
PointLightHelper	three.js	/^THREE.PointLightHelper = function ( light, sphereSize ) {$/;"	r
PolyhedronGeometry	three.js	/^THREE.PolyhedronGeometry = function ( vertices, faces, radius, detail ) {$/;"	r
Projector	three.js	/^THREE.Projector = function () {$/;"	r
QUADRATIC_CURVE_TO	three.js	/^	QUADRATIC_CURVE_TO: 'quadraticCurveTo', \/\/ Bezier quadratic curve$/;"	r
QuadraticBezierCurve	three.js	/^THREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {$/;"	r
QuadraticBezierCurve3	three.js	/^THREE.QuadraticBezierCurve3 = THREE.Curve.create($/;"	r
Quaternion	three.js	/^THREE.Quaternion = function ( x, y, z, w ) {$/;"	r
RAD_TO_DEGREES	three.js	/^	var RAD_TO_DEGREES = 180 \/ Math.PI;$/;"	r
RGBAFormat	three.js	/^THREE.RGBAFormat = 1021;$/;"	r
RGBA_PVRTC_2BPPV1_Format	three.js	/^THREE.RGBA_PVRTC_2BPPV1_Format = 2103;$/;"	r
RGBA_PVRTC_4BPPV1_Format	three.js	/^THREE.RGBA_PVRTC_4BPPV1_Format = 2102;$/;"	r
RGBA_S3TC_DXT1_Format	three.js	/^THREE.RGBA_S3TC_DXT1_Format = 2002;$/;"	r
RGBA_S3TC_DXT3_Format	three.js	/^THREE.RGBA_S3TC_DXT3_Format = 2003;$/;"	r
RGBA_S3TC_DXT5_Format	three.js	/^THREE.RGBA_S3TC_DXT5_Format = 2004;$/;"	r
RGBFormat	three.js	/^THREE.RGBFormat = 1020;$/;"	r
RGB_PVRTC_2BPPV1_Format	three.js	/^THREE.RGB_PVRTC_2BPPV1_Format = 2101;$/;"	r
RGB_PVRTC_4BPPV1_Format	three.js	/^THREE.RGB_PVRTC_4BPPV1_Format = 2100;$/;"	r
RGB_S3TC_DXT1_Format	three.js	/^THREE.RGB_S3TC_DXT1_Format = 2001;$/;"	r
Ray	three.js	/^THREE.Ray = function ( origin, direction ) {$/;"	r
Raycaster	three.js	/^	THREE.Raycaster = function ( origin, direction, near, far ) {$/;"	r
RenderableFace3	three.js	/^THREE.RenderableFace3 = function () {$/;"	r
RenderableFace4	three.js	/^THREE.RenderableFace4 = function () {$/;"	r
RenderableLine	three.js	/^THREE.RenderableLine = function () {$/;"	r
RenderableObject	three.js	/^THREE.RenderableObject = function () {$/;"	r
RenderableParticle	three.js	/^THREE.RenderableParticle = function () {$/;"	r
RenderableVertex	three.js	/^THREE.RenderableVertex = function () {$/;"	r
RepeatWrapping	three.js	/^THREE.RepeatWrapping = 1000;$/;"	r
ReverseSubtractEquation	three.js	/^THREE.ReverseSubtractEquation = 102;$/;"	r
Ribbon	three.js	/^THREE.Ribbon = function ( geometry, material ) {$/;"	r
RingGeometry	three.js	/^THREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {$/;"	r
RotationOrders	three.js	/^THREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];$/;"	r
Scene	three.js	/^THREE.Scene = function () {$/;"	r
SceneLoader	three.js	/^THREE.SceneLoader = function () {$/;"	r
SceneUtils	three.js	/^THREE.SceneUtils = {$/;"	r
ShaderChunk	three.js	/^THREE.ShaderChunk = {$/;"	r
ShaderFlares	three.js	/^THREE.ShaderFlares = {$/;"	r
ShaderLib	three.js	/^THREE.ShaderLib = {$/;"	r
ShaderMaterial	three.js	/^THREE.ShaderMaterial = function ( parameters ) {$/;"	r
ShaderSprite	three.js	/^THREE.ShaderSprite = {$/;"	r
ShadowMapPlugin	three.js	/^THREE.ShadowMapPlugin = function () {$/;"	r
Shape	three.js	/^THREE.Shape = function () {$/;"	r
ShapeGeometry	three.js	/^THREE.ShapeGeometry = function ( shapes, options ) {$/;"	r
ShortType	three.js	/^THREE.ShortType = 1011;$/;"	r
SkinnedMesh	three.js	/^THREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {$/;"	r
SmoothShading	three.js	/^THREE.SmoothShading = 2;$/;"	r
Sphere	three.js	/^THREE.Sphere = function ( center, radius ) {$/;"	r
SphereGeometry	three.js	/^THREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {$/;"	r
SphericalReflectionMapping	three.js	/^THREE.SphericalReflectionMapping = function () {};$/;"	r
SphericalRefractionMapping	three.js	/^THREE.SphericalRefractionMapping = function () {};$/;"	r
Spline	three.js	/^THREE.Spline = function ( points ) {$/;"	r
SplineCurve	three.js	/^THREE.SplineCurve = function ( points \/* array of Vector2 *\/ ) {$/;"	r
SplineCurve3	three.js	/^THREE.SplineCurve3 = THREE.Curve.create($/;"	r
SpotLight	three.js	/^THREE.SpotLight = function ( hex, intensity, distance, angle, exponent ) {$/;"	r
SpotLightHelper	three.js	/^THREE.SpotLightHelper = function ( light ) {$/;"	r
Sprite	three.js	/^THREE.Sprite = function ( material ) {$/;"	r
SpriteAlignment	three.js	/^THREE.SpriteAlignment = {};$/;"	r
SpriteMaterial	three.js	/^THREE.SpriteMaterial = function ( parameters ) {$/;"	r
SpritePlugin	three.js	/^THREE.SpritePlugin = function () {$/;"	r
SrcAlphaFactor	three.js	/^THREE.SrcAlphaFactor = 204;$/;"	r
SrcAlphaSaturateFactor	three.js	/^THREE.SrcAlphaSaturateFactor = 210;$/;"	r
SrcColorFactor	three.js	/^THREE.SrcColorFactor = 202;$/;"	r
SubtractEquation	three.js	/^THREE.SubtractEquation = 101;$/;"	r
SubtractiveBlending	three.js	/^THREE.SubtractiveBlending = 3;$/;"	r
T	three.js	/^				"mat3 tsn = mat3( S, T, N );",$/;"	r
THREE	three.js	/^var THREE = THREE || { REVISION: '59' };$/;"	r
TetrahedronGeometry	three.js	/^THREE.TetrahedronGeometry = function ( radius, detail ) {$/;"	r
TextGeometry	three.js	/^THREE.TextGeometry = function ( text, parameters ) {$/;"	r
Texture	three.js	/^THREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {$/;"	r
TextureIdCount	three.js	/^THREE.TextureIdCount = 0;$/;"	r
TextureLoader	three.js	/^THREE.TextureLoader = function ( manager ) {$/;"	r
ThreeFont	three.js	/^		var ThreeFont = this;$/;"	r
TorusGeometry	three.js	/^THREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {$/;"	r
TorusKnotGeometry	three.js	/^THREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {$/;"	r
Triangle	three.js	/^THREE.Triangle = function ( a, b, c ) {$/;"	r
Triangulate	three.js	/^	namespace.Triangulate = process;$/;"	r
TubeGeometry	three.js	/^THREE.TubeGeometry = function( path, segments, radius, radialSegments, closed ) {$/;"	r
UV	three.js	/^THREE.UV = function ( u, v ) {$/;"	r
UVMapping	three.js	/^THREE.UVMapping = function () {};$/;"	r
UniformsLib	three.js	/^THREE.UniformsLib = {$/;"	r
UniformsUtils	three.js	/^THREE.UniformsUtils = {$/;"	r
UnsignedByteType	three.js	/^THREE.UnsignedByteType = 1009;$/;"	r
UnsignedIntType	three.js	/^THREE.UnsignedIntType = 1014;$/;"	r
UnsignedShort4444Type	three.js	/^THREE.UnsignedShort4444Type = 1016;$/;"	r
UnsignedShort5551Type	three.js	/^THREE.UnsignedShort5551Type = 1017;$/;"	r
UnsignedShort565Type	three.js	/^THREE.UnsignedShort565Type = 1018;$/;"	r
UnsignedShortType	three.js	/^THREE.UnsignedShortType = 1012;$/;"	r
Utils	three.js	/^THREE.Curve.Utils = {$/;"	r
Utils	three.js	/^THREE.Shape.Utils = {$/;"	r
Vector2	three.js	/^THREE.Vector2 = function ( x, y ) {$/;"	r
Vector3	three.js	/^THREE.Vector3 = function ( x, y, z ) {$/;"	r
Vector4	three.js	/^THREE.Vector4 = function ( x, y, z, w ) {$/;"	r
Vertex	three.js	/^THREE.Vertex = function ( v ) {$/;"	r
VertexColors	three.js	/^THREE.VertexColors = 2;$/;"	r
VertexNormalsHelper	three.js	/^THREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {$/;"	r
VertexTangentsHelper	three.js	/^THREE.VertexTangentsHelper = function ( object, size, hex, linewidth ) {$/;"	r
WebGLRenderTarget	three.js	/^THREE.WebGLRenderTarget = function ( width, height, options ) {$/;"	r
WebGLRenderTargetCube	three.js	/^THREE.WebGLRenderTargetCube = function ( width, height, options ) {$/;"	r
WebGLRenderer	three.js	/^THREE.WebGLRenderer = function ( parameters ) {$/;"	r
WireframeHelper	three.js	/^THREE.WireframeHelper = function ( object ) {$/;"	r
WorldUVGenerator	three.js	/^THREE.ExtrudeGeometry.WorldUVGenerator = {$/;"	r
XHRLoader	three.js	/^THREE.XHRLoader = function ( manager ) {$/;"	r
ZeroFactor	three.js	/^THREE.ZeroFactor = 200;$/;"	r
__addObject	three.js	/^THREE.Scene.prototype.__addObject = function ( object ) {$/;"	r
__colorArray	three.js	/^			geometryGroup.__colorArray = new Float32Array( nvertices * 3 );$/;"	r
__colorArray	three.js	/^		geometry.__colorArray = new Float32Array( nvertices * 3 );$/;"	r
__faceArray	three.js	/^		geometryGroup.__faceArray = new Uint16Array( ntris * 3 );$/;"	r
__inittedArrays	three.js	/^		geometryGroup.__inittedArrays = true;$/;"	r
__lights	three.js	/^	this.__lights = [];$/;"	r
__lineArray	three.js	/^		geometryGroup.__lineArray = new Uint16Array( nlines * 2 );$/;"	r
__lineDistanceArray	three.js	/^		geometry.__lineDistanceArray = new Float32Array( nvertices * 1 );$/;"	r
__morphNormalsArrays	three.js	/^			geometryGroup.__morphNormalsArrays = [];$/;"	r
__morphTargetsArrays	three.js	/^			geometryGroup.__morphTargetsArrays = [];$/;"	r
__normalArray	three.js	/^			geometryGroup.__normalArray = new Float32Array( nvertices * 3 );$/;"	r
__normalArray	three.js	/^		geometry.__normalArray = new Float32Array( nvertices * 3 );$/;"	r
__objects	three.js	/^	this.__objects = [];$/;"	r
__objectsAdded	three.js	/^	this.__objectsAdded = [];$/;"	r
__objectsRemoved	three.js	/^	this.__objectsRemoved = [];$/;"	r
__oldAnisotropy	three.js	/^				texture.__oldAnisotropy = texture.anisotropy;$/;"	r
__original	three.js	/^					attribute.__original = originalAttribute;$/;"	r
__originalFaceNormal	three.js	/^				face.__originalFaceNormal = face.normal.clone();$/;"	r
__projector	three.js	/^THREE.ShadowMapPlugin.__projector = new THREE.Projector();$/;"	r
__removeObject	three.js	/^THREE.Scene.prototype.__removeObject = function ( object ) {$/;"	r
__skinIndexArray	three.js	/^			geometryGroup.__skinIndexArray = new Float32Array( nvertices * 4 );$/;"	r
__skinWeightArray	three.js	/^			geometryGroup.__skinWeightArray = new Float32Array( nvertices * 4 );$/;"	r
__sortArray	three.js	/^		geometry.__sortArray = [];$/;"	r
__tangentArray	three.js	/^			geometryGroup.__tangentArray = new Float32Array( nvertices * 4 );$/;"	r
__tmpVertices	three.js	/^			this.__tmpVertices = new Array( this.vertices.length );$/;"	r
__tmpVertices	three.js	/^		this.__tmpVertices = undefined;$/;"	r
__uv2Array	three.js	/^				geometryGroup.__uv2Array = new Float32Array( nvertices * 2 );$/;"	r
__uvArray	three.js	/^				geometryGroup.__uvArray = new Float32Array( nvertices * 2 );$/;"	r
__v1	three.js	/^THREE.ExtrudeGeometry.__v1 = new THREE.Vector2();$/;"	r
__v2	three.js	/^THREE.ExtrudeGeometry.__v2 = new THREE.Vector2();$/;"	r
__v3	three.js	/^THREE.ExtrudeGeometry.__v3 = new THREE.Vector2();$/;"	r
__v4	three.js	/^THREE.ExtrudeGeometry.__v4 = new THREE.Vector2();$/;"	r
__v5	three.js	/^THREE.ExtrudeGeometry.__v5 = new THREE.Vector2();$/;"	r
__v6	three.js	/^THREE.ExtrudeGeometry.__v6 = new THREE.Vector2();$/;"	r
__vertexArray	three.js	/^		geometry.__vertexArray = new Float32Array( nvertices * 3 );$/;"	r
__vertexArray	three.js	/^		geometryGroup.__vertexArray = new Float32Array( nvertices * 3 );$/;"	r
__webglActive	three.js	/^			object.__webglActive = true;$/;"	r
__webglColorBuffer	three.js	/^		geometry.__webglColorBuffer = _gl.createBuffer();$/;"	r
__webglColorBuffer	three.js	/^		geometryGroup.__webglColorBuffer = _gl.createBuffer();$/;"	r
__webglCustomAttributesList	three.js	/^				geometry.__webglCustomAttributesList = [];$/;"	r
__webglCustomAttributesList	three.js	/^				geometryGroup.__webglCustomAttributesList = [];$/;"	r
__webglFaceBuffer	three.js	/^		geometryGroup.__webglFaceBuffer = _gl.createBuffer();$/;"	r
__webglFaceCount	three.js	/^		geometryGroup.__webglFaceCount = ntris * 3;$/;"	r
__webglFlares	three.js	/^			scene.__webglFlares = [];$/;"	r
__webglFramebuffer	three.js	/^				renderTarget.__webglFramebuffer = [];$/;"	r
__webglFramebuffer	three.js	/^				renderTarget.__webglFramebuffer = _gl.createFramebuffer();$/;"	r
__webglInit	three.js	/^				object.geometry.__webglInit = true;$/;"	r
__webglInit	three.js	/^				texture.__webglInit = true;$/;"	r
__webglInit	three.js	/^			object.__webglInit = true;$/;"	r
__webglInit	three.js	/^			texture.__webglInit = false;$/;"	r
__webglInit	three.js	/^		geometry.__webglInit = undefined;$/;"	r
__webglInitialized	three.js	/^					attribute.__webglInitialized = true;$/;"	r
__webglLineBuffer	three.js	/^		geometryGroup.__webglLineBuffer = _gl.createBuffer();$/;"	r
__webglLineCount	three.js	/^		geometry.__webglLineCount = nvertices;$/;"	r
__webglLineCount	three.js	/^		geometryGroup.__webglLineCount = nlines * 2;$/;"	r
__webglLineDistanceBuffer	three.js	/^		geometry.__webglLineDistanceBuffer = _gl.createBuffer();$/;"	r
__webglMorphNormalsBuffers	three.js	/^			geometryGroup.__webglMorphNormalsBuffers = [];$/;"	r
__webglMorphTargetInfluences	three.js	/^				object.__webglMorphTargetInfluences = new Float32Array( _this.maxMorphTargets );$/;"	r
__webglMorphTargetsBuffers	three.js	/^			geometryGroup.__webglMorphTargetsBuffers = [];$/;"	r
__webglNormalBuffer	three.js	/^		geometry.__webglNormalBuffer = _gl.createBuffer();$/;"	r
__webglNormalBuffer	three.js	/^		geometryGroup.__webglNormalBuffer = _gl.createBuffer();$/;"	r
__webglObjects	three.js	/^			scene.__webglObjects = [];$/;"	r
__webglObjectsImmediate	three.js	/^			scene.__webglObjectsImmediate = [];$/;"	r
__webglParticleCount	three.js	/^		geometry.__webglParticleCount = nvertices;$/;"	r
__webglRenderbuffer	three.js	/^					renderTarget.__webglRenderbuffer = _gl.createRenderbuffer();$/;"	r
__webglRenderbuffer	three.js	/^					renderTarget.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;$/;"	r
__webglRenderbuffer	three.js	/^				renderTarget.__webglRenderbuffer = [];$/;"	r
__webglSkinIndicesBuffer	three.js	/^		geometryGroup.__webglSkinIndicesBuffer = _gl.createBuffer();$/;"	r
__webglSkinWeightsBuffer	three.js	/^		geometryGroup.__webglSkinWeightsBuffer = _gl.createBuffer();$/;"	r
__webglSprites	three.js	/^			scene.__webglSprites = [];$/;"	r
__webglTangentBuffer	three.js	/^		geometryGroup.__webglTangentBuffer = _gl.createBuffer();$/;"	r
__webglTexture	three.js	/^				texture.__webglTexture = _gl.createTexture();$/;"	r
__webglTexture	three.js	/^			renderTarget.__webglTexture = _gl.createTexture();$/;"	r
__webglTextureCube	three.js	/^					texture.image.__webglTextureCube = _gl.createTexture();$/;"	r
__webglUV2Buffer	three.js	/^		geometryGroup.__webglUV2Buffer = _gl.createBuffer();$/;"	r
__webglUVBuffer	three.js	/^		geometryGroup.__webglUVBuffer = _gl.createBuffer();$/;"	r
__webglVertexBuffer	three.js	/^		geometry.__webglVertexBuffer = _gl.createBuffer();$/;"	r
__webglVertexBuffer	three.js	/^		geometryGroup.__webglVertexBuffer = _gl.createBuffer();$/;"	r
__webglVertexCount	three.js	/^		geometry.__webglVertexCount = nvertices;$/;"	r
_alpha	three.js	/^	_alpha = parameters.alpha !== undefined ? parameters.alpha : true,$/;"	r
_ambientLight	three.js	/^	_ambientLight = new THREE.Color(),$/;"	r
_antialias	three.js	/^	_antialias = parameters.antialias !== undefined ? parameters.antialias : false,$/;"	r
_area	three.js	/^				face._area = THREE.GeometryUtils.triangleArea( vA, vB, vC );$/;"	r
_area	three.js	/^				face._area = face._area1 + face._area2;$/;"	r
_area1	three.js	/^					face._area1 = area1;$/;"	r
_area1	three.js	/^				face._area1 = THREE.GeometryUtils.triangleArea( vA, vB, vD );$/;"	r
_area2	three.js	/^					face._area2 = area2;$/;"	r
_area2	three.js	/^				face._area2 = THREE.GeometryUtils.triangleArea( vB, vC, vD );$/;"	r
_array	three.js	/^					uniform._array = [];$/;"	r
_array	three.js	/^					uniform._array = new Float32Array( 16 );$/;"	r
_array	three.js	/^					uniform._array = new Float32Array( 16 * value.length );$/;"	r
_array	three.js	/^					uniform._array = new Float32Array( 2 * value.length );$/;"	r
_array	three.js	/^					uniform._array = new Float32Array( 3 * value.length );$/;"	r
_array	three.js	/^					uniform._array = new Float32Array( 4 * value.length );$/;"	r
_boundingBox	three.js	/^	_boundingBox = new THREE.Box3(),$/;"	r
_camera	three.js	/^		_camera = camera;$/;"	r
_camera	three.js	/^	_camera,$/;"	r
_canvas	three.js	/^	_canvas = parameters.canvas !== undefined$/;"	r
_canvas	three.js	/^	var _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),$/;"	r
_canvasHeight	three.js	/^		_canvasHeight = height * this.devicePixelRatio;$/;"	r
_canvasHeightHalf	three.js	/^		_canvasHeightHalf = Math.floor( _canvasHeight \/ 2 );$/;"	r
_canvasWidth	three.js	/^		_canvasWidth = width * this.devicePixelRatio;$/;"	r
_canvasWidth	three.js	/^	_canvasWidth, _canvasHeight, _canvasWidthHalf, _canvasHeightHalf,$/;"	r
_canvasWidthHalf	three.js	/^		_canvasWidthHalf = Math.floor( _canvasWidth \/ 2 );$/;"	r
_centroid	three.js	/^	_centroid = new THREE.Vector3(),$/;"	r
_clearAlpha	three.js	/^		_clearAlpha = alpha !== undefined ? alpha : 1;$/;"	r
_clearAlpha	three.js	/^		_clearAlpha = parameters.clearAlpha;$/;"	r
_clearAlpha	three.js	/^	_clearAlpha = 0,$/;"	r
_clearAlpha	three.js	/^	_clearAlpha = 0;$/;"	r
_clearBox	three.js	/^	_clearBox = new THREE.Box2(),$/;"	r
_clearColor	three.js	/^	_clearColor = new THREE.Color( 0x000000 ),$/;"	r
_clipBox	three.js	/^	_clipBox = new THREE.Box2(),$/;"	r
_clipBox	three.js	/^	_clipBox = new THREE.Box3( new THREE.Vector3( -1, -1, -1 ), new THREE.Vector3( 1, 1, 1 ) ),$/;"	r
_clippedVertex1PositionScreen	three.js	/^	_clippedVertex1PositionScreen = new THREE.Vector4(),$/;"	r
_clippedVertex2PositionScreen	three.js	/^	_clippedVertex2PositionScreen = new THREE.Vector4();$/;"	r
_color	three.js	/^	_color = new THREE.Color(),$/;"	r
_color1	three.js	/^	_color1 = new THREE.Color(),$/;"	r
_color2	three.js	/^				_image = getGradientTexture( _color1, _color2, _color3, _color4 );$/;"	r
_color2	three.js	/^			_image = getGradientTexture( _color1, _color2, _color3, _color4 );$/;"	r
_color2	three.js	/^	_color2 = new THREE.Color(),$/;"	r
_color3	three.js	/^	_color3 = new THREE.Color(),$/;"	r
_color4	three.js	/^	_color4 = new THREE.Color(),$/;"	r
_compressedTextureFormats	three.js	/^	var _compressedTextureFormats = _glExtensionCompressedTextureS3TC ? _gl.getParameter( _gl.COMPRESSED_TEXTURE_FORMATS ) : [];$/;"	r
_context	three.js	/^	_context = _canvas.getContext( '2d' ),$/;"	r
_contextDashSize	three.js	/^			_contextDashSize = dashSizeValue;$/;"	r
_contextDashSize	three.js	/^	_contextDashSize = null,$/;"	r
_contextFillStyle	three.js	/^			_contextFillStyle = value;$/;"	r
_contextFillStyle	three.js	/^		_contextFillStyle = null;$/;"	r
_contextFillStyle	three.js	/^	_contextFillStyle = null,$/;"	r
_contextGapSize	three.js	/^			_contextGapSize = gapSizeValue;$/;"	r
_contextGapSize	three.js	/^	_contextGapSize = 0,$/;"	r
_contextGlobalAlpha	three.js	/^			_contextGlobalAlpha = value;$/;"	r
_contextGlobalAlpha	three.js	/^		_contextGlobalAlpha = 1;$/;"	r
_contextGlobalAlpha	three.js	/^	_contextGlobalAlpha = 1,$/;"	r
_contextGlobalCompositeOperation	three.js	/^			_contextGlobalCompositeOperation = value;$/;"	r
_contextGlobalCompositeOperation	three.js	/^		_contextGlobalCompositeOperation = 0;$/;"	r
_contextGlobalCompositeOperation	three.js	/^	_contextGlobalCompositeOperation = 0,$/;"	r
_contextLineCap	three.js	/^			_contextLineCap = value;$/;"	r
_contextLineCap	three.js	/^		_contextLineCap = null;$/;"	r
_contextLineCap	three.js	/^	_contextLineCap = null,$/;"	r
_contextLineJoin	three.js	/^			_contextLineJoin = value;$/;"	r
_contextLineJoin	three.js	/^		_contextLineJoin = null;$/;"	r
_contextLineJoin	three.js	/^	_contextLineJoin = null,$/;"	r
_contextLineWidth	three.js	/^			_contextLineWidth = value;$/;"	r
_contextLineWidth	three.js	/^		_contextLineWidth = null;$/;"	r
_contextLineWidth	three.js	/^	_contextLineWidth = null,$/;"	r
_contextStrokeStyle	three.js	/^			_contextStrokeStyle = value;$/;"	r
_contextStrokeStyle	three.js	/^		_contextStrokeStyle = null;$/;"	r
_contextStrokeStyle	three.js	/^	_contextStrokeStyle = null,$/;"	r
_currentCamera	three.js	/^			_currentCamera = null;$/;"	r
_currentCamera	three.js	/^	_currentCamera = null,$/;"	r
_currentFramebuffer	three.js	/^			_currentFramebuffer = framebuffer;$/;"	r
_currentFramebuffer	three.js	/^	_currentFramebuffer = null,$/;"	r
_currentGeometryGroupHash	three.js	/^			_currentGeometryGroupHash = -1;$/;"	r
_currentGeometryGroupHash	three.js	/^			_currentGeometryGroupHash = geometryGroupHash;$/;"	r
_currentGeometryGroupHash	three.js	/^			_currentGeometryGroupHash = geometryHash;$/;"	r
_currentGeometryGroupHash	three.js	/^		_currentGeometryGroupHash = -1;$/;"	r
_currentGeometryGroupHash	three.js	/^	_currentGeometryGroupHash = null,$/;"	r
_currentHeight	three.js	/^		_currentHeight = height;$/;"	r
_currentHeight	three.js	/^	_currentHeight = 0,$/;"	r
_currentMaterialId	three.js	/^			_currentMaterialId = -1;$/;"	r
_currentMaterialId	three.js	/^			_currentMaterialId = material.id;$/;"	r
_currentMaterialId	three.js	/^		_currentMaterialId = -1;$/;"	r
_currentMaterialId	three.js	/^	_currentMaterialId = -1,$/;"	r
_currentProgram	three.js	/^			_currentProgram = null;$/;"	r
_currentProgram	three.js	/^			_currentProgram = program;$/;"	r
_currentProgram	three.js	/^		_currentProgram = null;$/;"	r
_currentProgram	three.js	/^	_currentProgram = null,$/;"	r
_currentWidth	three.js	/^		_currentWidth = width;$/;"	r
_currentWidth	three.js	/^	_currentWidth = 0,$/;"	r
_depthMaterial	three.js	/^		_depthMaterial = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms } );$/;"	r
_depthMaterial	three.js	/^	_depthMaterial, _depthMaterialMorph, _depthMaterialSkin, _depthMaterialMorphSkin,$/;"	r
_depthMaterialMorph	three.js	/^		_depthMaterialMorph = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, morphTargets: true } );$/;"	r
_depthMaterialMorphSkin	three.js	/^		_depthMaterialMorphSkin = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, morphTargets: true, skinning: true } );$/;"	r
_depthMaterialSkin	three.js	/^		_depthMaterialSkin = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, skinning: true } );$/;"	r
_diffuseColor	three.js	/^	_diffuseColor = new THREE.Color(),$/;"	r
_direction	three.js	/^	_direction = new THREE.Vector3(),$/;"	r
_directionalLights	three.js	/^	_directionalLights = new THREE.Color(),$/;"	r
_elemBox	three.js	/^	_elemBox = new THREE.Box2(),$/;"	r
_elements	three.js	/^		_elements = _renderData.elements;$/;"	r
_emissiveColor	three.js	/^	_emissiveColor = new THREE.Color(),$/;"	r
_enabledAttributes	three.js	/^	_enabledAttributes = {},$/;"	r
_euler	three.js	/^	_euler: undefined,$/;"	r
_euler	three.js	/^	this.quaternion._euler = this.rotation;$/;"	r
_face	three.js	/^								_face = getNextFace3InPool();$/;"	r
_face	three.js	/^								_face = getNextFace4InPool();$/;"	r
_face	three.js	/^	_face, _face3Count, _face3Pool = [], _face3PoolLength = 0,$/;"	r
_face3Count	three.js	/^		_face3Count = 0;$/;"	r
_face3Pool	three.js	/^	_face, _face3Count, _face3Pool = [], _face3PoolLength = 0,$/;"	r
_face3PoolLength	three.js	/^	_face, _face3Count, _face3Pool = [], _face3PoolLength = 0,$/;"	r
_face4Count	three.js	/^		_face4Count = 0;$/;"	r
_face4Count	three.js	/^	_face4Count, _face4Pool = [], _face4PoolLength = 0,$/;"	r
_face4Pool	three.js	/^	_face4Count, _face4Pool = [], _face4PoolLength = 0,$/;"	r
_face4PoolLength	three.js	/^	_face4Count, _face4Pool = [], _face4PoolLength = 0,$/;"	r
_far	three.js	/^			_far = _camera.far;$/;"	r
_fragmentShaderPrecisionHighpFloat	three.js	/^	var _fragmentShaderPrecisionHighpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.HIGH_FLOAT );$/;"	r
_fragmentShaderPrecisionHighpInt	three.js	/^	var _fragmentShaderPrecisionHighpInt = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.HIGH_INT );$/;"	r
_fragmentShaderPrecisionLowpFloat	three.js	/^	var _fragmentShaderPrecisionLowpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.LOW_FLOAT );$/;"	r
_fragmentShaderPrecisionLowpInt	three.js	/^	var _fragmentShaderPrecisionLowpInt = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.LOW_INT );$/;"	r
_fragmentShaderPrecisionMediumpFloat	three.js	/^	var _fragmentShaderPrecisionMediumpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.MEDIUM_FLOAT );$/;"	r
_fragmentShaderPrecisionMediumpInt	three.js	/^	var _fragmentShaderPrecisionMediumpInt = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.MEDIUM_INT );$/;"	r
_frustum	three.js	/^	_frustum = new THREE.Frustum(),$/;"	r
_geometryGroupCounter	three.js	/^	_geometryGroupCounter = 0,$/;"	r
_gl	three.js	/^			object.immediateRenderCallback( program, _gl, _frustum );$/;"	r
_gl	three.js	/^		_gl = renderer.context;$/;"	r
_gl	three.js	/^	var _gl, _renderer, _precision, _lensFlare = {};$/;"	r
_gl	three.js	/^	var _gl, _renderer, _precision, _sprite = {};$/;"	r
_gl	three.js	/^	var _gl,$/;"	r
_gl	three.js	/^	var _gl;$/;"	r
_glExtensionCompressedTextureS3TC	three.js	/^		_glExtensionCompressedTextureS3TC = _gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || _gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || _gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );$/;"	r
_glExtensionCompressedTextureS3TC	three.js	/^	var _glExtensionCompressedTextureS3TC;$/;"	r
_glExtensionStandardDerivatives	three.js	/^		_glExtensionStandardDerivatives = _gl.getExtension( 'OES_standard_derivatives' );$/;"	r
_glExtensionStandardDerivatives	three.js	/^	var _glExtensionStandardDerivatives;$/;"	r
_glExtensionTextureFilterAnisotropic	three.js	/^		_glExtensionTextureFilterAnisotropic = _gl.getExtension( 'EXT_texture_filter_anisotropic' ) || _gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || _gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );$/;"	r
_glExtensionTextureFilterAnisotropic	three.js	/^	var _glExtensionTextureFilterAnisotropic;$/;"	r
_glExtensionTextureFloat	three.js	/^		_glExtensionTextureFloat = _gl.getExtension( 'OES_texture_float' );$/;"	r
_glExtensionTextureFloat	three.js	/^	var _glExtensionTextureFloat;$/;"	r
_glExtensionTextureFloatLinear	three.js	/^		_glExtensionTextureFloatLinear = _gl.getExtension( 'OES_texture_float_linear' );$/;"	r
_glExtensionTextureFloatLinear	three.js	/^	var _glExtensionTextureFloatLinear;$/;"	r
_gradientMap	three.js	/^	_gradientMap = document.createElement( 'canvas' );$/;"	r
_gradientMap	three.js	/^	_gradientMap, _gradientMapContext, _gradientMapQuality = 16;$/;"	r
_gradientMapContext	three.js	/^	_gradientMapContext = _gradientMap.getContext( '2d' );$/;"	r
_gradientMapQuality	three.js	/^	_gradientMap, _gradientMapContext, _gradientMapQuality = 16;$/;"	r
_image	three.js	/^				_image = getGradientTexture( _color1, _color2, _color3, _color4 );$/;"	r
_image	three.js	/^			_image = getGradientTexture( _color1, _color2, _color3, _color4 );$/;"	r
_image	three.js	/^	_image, _uvs,$/;"	r
_lensFlare	three.js	/^	var _gl, _renderer, _precision, _lensFlare = {};$/;"	r
_lightColor	three.js	/^	_lightColor = new THREE.Color(),$/;"	r
_lights	three.js	/^		_lights = _renderData.lights;$/;"	r
_lights	three.js	/^	_lights = {$/;"	r
_lightsNeedUpdate	three.js	/^					_lightsNeedUpdate = false;$/;"	r
_lightsNeedUpdate	three.js	/^			_lightsNeedUpdate = true;$/;"	r
_lightsNeedUpdate	three.js	/^		_lightsNeedUpdate = true;$/;"	r
_lightsNeedUpdate	three.js	/^	_lightsNeedUpdate = true,$/;"	r
_line	three.js	/^						_line = getNextLineInPool();$/;"	r
_line	three.js	/^	_line, _lineCount, _linePool = [], _linePoolLength = 0,$/;"	r
_lineCount	three.js	/^		_lineCount = 0;$/;"	r
_linePool	three.js	/^	_line, _lineCount, _linePool = [], _linePoolLength = 0,$/;"	r
_linePoolLength	three.js	/^	_line, _lineCount, _linePool = [], _linePoolLength = 0,$/;"	r
_matrixPosition	three.js	/^	_matrixPosition = new THREE.Vector3();$/;"	r
_max	three.js	/^	_max = new THREE.Vector3(),$/;"	r
_maxAnisotropy	three.js	/^	var _maxAnisotropy = _glExtensionTextureFilterAnisotropic ? _gl.getParameter( _glExtensionTextureFilterAnisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT ) : 0;$/;"	r
_maxCubemapSize	three.js	/^	var _maxCubemapSize = _gl.getParameter( _gl.MAX_CUBE_MAP_TEXTURE_SIZE );$/;"	r
_maxTextureSize	three.js	/^	var _maxTextureSize = _gl.getParameter( _gl.MAX_TEXTURE_SIZE );$/;"	r
_maxTextures	three.js	/^	var _maxTextures = _gl.getParameter( _gl.MAX_TEXTURE_IMAGE_UNITS );$/;"	r
_maxVertexTextures	three.js	/^	var _maxVertexTextures = _gl.getParameter( _gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );$/;"	r
_min	three.js	/^	_min = new THREE.Vector3(),$/;"	r
_modelMatrix	three.js	/^			_modelMatrix = object.matrixWorld;$/;"	r
_modelMatrix	three.js	/^	_modelMatrix,$/;"	r
_modelViewMatrix	three.js	/^			object._modelViewMatrix = new THREE.Matrix4();$/;"	r
_modelViewProjectionMatrix	three.js	/^	_modelViewProjectionMatrix = new THREE.Matrix4(),$/;"	r
_near	three.js	/^			_color1.r = _color1.g = _color1.b = 1 - smoothstep( v1.positionScreen.z * v1.positionScreen.w, _near, _far );$/;"	r
_near	three.js	/^			_color2.r = _color2.g = _color2.b = 1 - smoothstep( v2.positionScreen.z * v2.positionScreen.w, _near, _far );$/;"	r
_near	three.js	/^			_color3.r = _color3.g = _color3.b = 1 - smoothstep( v3.positionScreen.z * v3.positionScreen.w, _near, _far );$/;"	r
_near	three.js	/^			_color3.r = _color3.g = _color3.b = 1 - smoothstep( v4.positionScreen.z * v4.positionScreen.w, _near, _far );$/;"	r
_near	three.js	/^			_color4.r = _color4.g = _color4.b = 1 - smoothstep( v3.positionScreen.z * v3.positionScreen.w, _near, _far );$/;"	r
_near	three.js	/^			_near = _camera.near;$/;"	r
_near	three.js	/^	_near, _far,$/;"	r
_normalMatrix	three.js	/^			object._normalMatrix = new THREE.Matrix3();$/;"	r
_normalMatrix	three.js	/^	_normalMatrix = new THREE.Matrix3(),$/;"	r
_normalViewMatrix	three.js	/^	_normalViewMatrix = new THREE.Matrix3(),$/;"	r
_object	three.js	/^		_object = getNextObjectInPool();$/;"	r
_object	three.js	/^	var _object, _objectCount, _objectPool = [], _objectPoolLength = 0,$/;"	r
_objectCount	three.js	/^		_objectCount = 0;$/;"	r
_objectPool	three.js	/^	var _object, _objectCount, _objectPool = [], _objectPoolLength = 0,$/;"	r
_objectPoolLength	three.js	/^	var _object, _objectCount, _objectPool = [], _objectPoolLength = 0,$/;"	r
_oldBlendDst	three.js	/^				_oldBlendDst = blendDst;$/;"	r
_oldBlendDst	three.js	/^			_oldBlendDst = null;$/;"	r
_oldBlendDst	three.js	/^	_oldBlendDst = -1,$/;"	r
_oldBlendEquation	three.js	/^				_oldBlendEquation = blendEquation;$/;"	r
_oldBlendEquation	three.js	/^			_oldBlendEquation = null;$/;"	r
_oldBlendEquation	three.js	/^	_oldBlendEquation = -1,$/;"	r
_oldBlendSrc	three.js	/^				_oldBlendSrc = blendSrc;$/;"	r
_oldBlendSrc	three.js	/^			_oldBlendSrc = null;$/;"	r
_oldBlendSrc	three.js	/^	_oldBlendSrc = -1,$/;"	r
_oldBlending	three.js	/^			_oldBlending = -1;$/;"	r
_oldBlending	three.js	/^			_oldBlending = blending;$/;"	r
_oldBlending	three.js	/^		_oldBlending = -1;$/;"	r
_oldBlending	three.js	/^	_oldBlending = -1,$/;"	r
_oldDepthTest	three.js	/^			_oldDepthTest = -1;$/;"	r
_oldDepthTest	three.js	/^			_oldDepthTest = depthTest;$/;"	r
_oldDepthTest	three.js	/^		_oldDepthTest = -1;$/;"	r
_oldDepthTest	three.js	/^	_oldDepthTest = -1,$/;"	r
_oldDepthWrite	three.js	/^			_oldDepthWrite = -1;$/;"	r
_oldDepthWrite	three.js	/^			_oldDepthWrite = depthWrite;$/;"	r
_oldDepthWrite	three.js	/^		_oldDepthWrite = -1;$/;"	r
_oldDepthWrite	three.js	/^	_oldDepthWrite = -1,$/;"	r
_oldDoubleSided	three.js	/^			_oldDoubleSided = -1;$/;"	r
_oldDoubleSided	three.js	/^			_oldDoubleSided = doubleSided;$/;"	r
_oldDoubleSided	three.js	/^		_oldDoubleSided = -1;$/;"	r
_oldDoubleSided	three.js	/^	_oldDoubleSided = -1,$/;"	r
_oldFlipSided	three.js	/^			_oldFlipSided = -1;$/;"	r
_oldFlipSided	three.js	/^			_oldFlipSided = flipSided;$/;"	r
_oldFlipSided	three.js	/^		_oldFlipSided = -1;$/;"	r
_oldFlipSided	three.js	/^	_oldFlipSided = -1,$/;"	r
_oldLineWidth	three.js	/^			_oldLineWidth = width;$/;"	r
_oldLineWidth	three.js	/^	_oldLineWidth = null,$/;"	r
_oldPolygonOffset	three.js	/^			_oldPolygonOffset = polygonoffset;$/;"	r
_oldPolygonOffset	three.js	/^	_oldPolygonOffset = null,$/;"	r
_oldPolygonOffsetFactor	three.js	/^			_oldPolygonOffsetFactor = factor;$/;"	r
_oldPolygonOffsetFactor	three.js	/^	_oldPolygonOffsetFactor = null,$/;"	r
_oldPolygonOffsetUnits	three.js	/^			_oldPolygonOffsetUnits = units;$/;"	r
_oldPolygonOffsetUnits	three.js	/^	_oldPolygonOffsetUnits = null,$/;"	r
_order	three.js	/^		this._order = euler._order;$/;"	r
_order	three.js	/^		this._order = order || this._order;$/;"	r
_order	three.js	/^		this._order = order;$/;"	r
_order	three.js	/^		this._order = value;$/;"	r
_order	three.js	/^	this._order = order || THREE.Euler.DefaultOrder;$/;"	r
_particle	three.js	/^					_particle = getNextParticleInPool();$/;"	r
_particle	three.js	/^	_particle, _particleCount, _particlePool = [], _particlePoolLength = 0,$/;"	r
_particleCount	three.js	/^		_particleCount = 0;$/;"	r
_particlePool	three.js	/^	_particle, _particleCount, _particlePool = [], _particlePoolLength = 0,$/;"	r
_particlePoolLength	three.js	/^	_particle, _particleCount, _particlePool = [], _particlePoolLength = 0,$/;"	r
_patterns	three.js	/^	_patterns = {}, _imagedatas = {},$/;"	r
_pixelMap	three.js	/^	_pixelMap = document.createElement( 'canvas' );$/;"	r
_pixelMap	three.js	/^	_pixelMap, _pixelMapContext, _pixelMapImage, _pixelMapData,$/;"	r
_pixelMapContext	three.js	/^	_pixelMapContext = _pixelMap.getContext( '2d' );$/;"	r
_pixelMapData	three.js	/^	_pixelMapData = _pixelMapImage.data;$/;"	r
_pixelMapImage	three.js	/^	_pixelMapImage = _pixelMapContext.getImageData( 0, 0, 2, 2 );$/;"	r
_pointLights	three.js	/^	_pointLights = new THREE.Color(),$/;"	r
_points3	three.js	/^	_points3 = new Array( 3 ),$/;"	r
_points4	three.js	/^	_points4 = new Array( 4 ),$/;"	r
_precision	three.js	/^			_precision = "lowp";$/;"	r
_precision	three.js	/^			_precision = "mediump";$/;"	r
_precision	three.js	/^		_precision = "lowp";$/;"	r
_precision	three.js	/^		_precision = renderer.getPrecision();$/;"	r
_precision	three.js	/^	_precision = parameters.precision !== undefined ? parameters.precision : 'highp',$/;"	r
_premultipliedAlpha	three.js	/^	_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,$/;"	r
_preserveDrawingBuffer	three.js	/^	_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,$/;"	r
_programs	three.js	/^			_programs = newPrograms;$/;"	r
_programs	three.js	/^	_programs = [],$/;"	r
_programs_counter	three.js	/^	_programs_counter = 0,$/;"	r
_projScreenMatrix	three.js	/^	_projScreenMatrix = new THREE.Matrix4(),$/;"	r
_projScreenMatrix	three.js	/^	_projScreenMatrix = new THREE.Matrix4();$/;"	r
_projScreenMatrixPS	three.js	/^	_projScreenMatrixPS = new THREE.Matrix4(),$/;"	r
_projector	three.js	/^	_projector = new THREE.Projector(),$/;"	r
_quaternion	three.js	/^	_quaternion: undefined,$/;"	r
_quaternion	three.js	/^	this.rotation._quaternion = this.quaternion;$/;"	r
_renderData	three.js	/^		_renderData = _projector.projectScene( scene, camera, this.sortObjects, this.sortElements );$/;"	r
_renderData	three.js	/^	_renderData = { objects: [], sprites: [], lights: [], elements: [] },$/;"	r
_renderData	three.js	/^	_renderData, _elements, _lights,$/;"	r
_renderer	three.js	/^		_renderer = renderer;$/;"	r
_renderer	three.js	/^	_renderer,$/;"	r
_shadowPass	three.js	/^		_depthMaterial._shadowPass = true;$/;"	r
_shadowPass	three.js	/^		_depthMaterialMorph._shadowPass = true;$/;"	r
_shadowPass	three.js	/^		_depthMaterialMorphSkin._shadowPass = true;$/;"	r
_shadowPass	three.js	/^		_depthMaterialSkin._shadowPass = true;$/;"	r
_sprite	three.js	/^	var _gl, _renderer, _precision, _sprite = {};$/;"	r
_stencil	three.js	/^	_stencil = parameters.stencil !== undefined ? parameters.stencil : true,$/;"	r
_supportsBoneTextures	three.js	/^	var _supportsBoneTextures = _supportsVertexTextures && _glExtensionTextureFloat;$/;"	r
_supportsVertexTextures	three.js	/^	var _supportsVertexTextures = ( _maxVertexTextures > 0 );$/;"	r
_this	three.js	/^		var _this = this;$/;"	r
_this	three.js	/^	var _this = this,$/;"	r
_typeface_js	three.js	/^self._typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };$/;"	r
_updateEuler	three.js	/^	_updateEuler: function ( callback ) {$/;"	r
_updateQuaternion	three.js	/^	_updateQuaternion: function () {$/;"	r
_usedTextureUnits	three.js	/^		_usedTextureUnits = 0;$/;"	r
_usedTextureUnits	three.js	/^	_usedTextureUnits = 0,$/;"	r
_uv1x	three.js	/^					_uv1x = 0.5 * _vector3.x + 0.5;$/;"	r
_uv1x	three.js	/^	_uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y,$/;"	r
_uv1y	three.js	/^					_uv1y = 0.5 * _vector3.y + 0.5;$/;"	r
_uv2x	three.js	/^					_uv2x = 0.5 * _vector3.x + 0.5;$/;"	r
_uv2y	three.js	/^					_uv2y = 0.5 * _vector3.y + 0.5;$/;"	r
_uv3x	three.js	/^					_uv3x = 0.5 * _vector3.x + 0.5;$/;"	r
_uv3y	three.js	/^					_uv3y = 0.5 * _vector3.y + 0.5;$/;"	r
_uvs	three.js	/^					_uvs = element.uvs[ 0 ];$/;"	r
_v1	three.js	/^				_v1 = element.v1; _v2 = element.v2; _v3 = element.v3; _v4 = element.v4;$/;"	r
_v1	three.js	/^				_v1 = element.v1; _v2 = element.v2; _v3 = element.v3;$/;"	r
_v1	three.js	/^				_v1 = element.v1; _v2 = element.v2;$/;"	r
_v1	three.js	/^				_v1 = element;$/;"	r
_v1	three.js	/^	_v1, _v2, _v3, _v4,$/;"	r
_v1x	three.js	/^		_v1x = v1.positionScreen.x; _v1y = v1.positionScreen.y;$/;"	r
_v1x	three.js	/^	_v1x, _v1y, _v2x, _v2y, _v3x, _v3y,$/;"	r
_v1y	three.js	/^					patternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap );$/;"	r
_v1y	three.js	/^					patternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[ uv1 ].x, _uvs[ uv1 ].y, _uvs[ uv2 ].x, _uvs[ uv2 ].y, _uvs[ uv3 ].x, _uvs[ uv3 ].y, material.map );$/;"	r
_v1y	three.js	/^				clipImage( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, 0, 0, 1, 0, 0, 1, _image );$/;"	r
_v1y	three.js	/^				clipImage( _v1x, _v1y, _v2x, _v2y, _v4x, _v4y, 0, 0, 1, 0, 0, 1, _image );$/;"	r
_v1y	three.js	/^				drawQuad( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _v4x, _v4y );$/;"	r
_v1y	three.js	/^				drawTriangle( _v1x, _v1y, _v2x, _v2y, _v4x, _v4y );$/;"	r
_v1y	three.js	/^			clipImage( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, 0, 0, 1, 0, 0, 1, _image );$/;"	r
_v1y	three.js	/^			clipImage( _v1x, _v1y, _v2x, _v2y, _v4x, _v4y, 0, 0, 1, 0, 0, 1, _image );$/;"	r
_v1y	three.js	/^			drawQuad( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _v4x, _v4y );$/;"	r
_v1y	three.js	/^			drawTriangle( _v1x, _v1y, _v2x, _v2y, _v4x, _v4y );$/;"	r
_v1y	three.js	/^		drawTriangle( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y );$/;"	r
_v2	three.js	/^					renderFace3( _v1, _v2, _v3, 0, 1, 2, element, material );$/;"	r
_v2	three.js	/^					renderFace4( _v1, _v2, _v3, _v4, _v5, _v6, element, material );$/;"	r
_v2	three.js	/^					renderLine( _v1, _v2, element, material );$/;"	r
_v2x	three.js	/^		_v2x = v2.positionScreen.x; _v2y = v2.positionScreen.y;$/;"	r
_v3x	three.js	/^		_v3x = v3.positionScreen.x; _v3y = v3.positionScreen.y;$/;"	r
_v4x	three.js	/^		_v4x = v4.positionScreen.x; _v4y = v4.positionScreen.y;$/;"	r
_v4x	three.js	/^	_v4x, _v4y, _v5x, _v5y, _v6x, _v6y,$/;"	r
_v5	three.js	/^	_v5 = new THREE.RenderableVertex(),$/;"	r
_v5x	three.js	/^		_v5x = v5.positionScreen.x; _v5y = v5.positionScreen.y;$/;"	r
_v5y	three.js	/^				clipImage( _v5x, _v5y, _v3x, _v3y, _v6x, _v6y, 1, 0, 1, 1, 0, 1, _image );$/;"	r
_v5y	three.js	/^				drawTriangle( _v5x, _v5y, _v3x, _v3y, _v6x, _v6y );$/;"	r
_v5y	three.js	/^			clipImage( _v5x, _v5y, _v3x, _v3y, _v6x, _v6y, 1, 0, 1, 1, 0, 1, _image );$/;"	r
_v5y	three.js	/^			drawTriangle( _v5x, _v5y, _v3x, _v3y, _v6x, _v6y );$/;"	r
_v6	three.js	/^	_v6 = new THREE.RenderableVertex(),$/;"	r
_v6x	three.js	/^		_v6x = v6.positionScreen.x; _v6y = v6.positionScreen.y;$/;"	r
_vector3	three.js	/^	_vector3 = new THREE.Vector3(), \/\/ Needed for PointLight$/;"	r
_vector3	three.js	/^	_vector3 = new THREE.Vector3(),$/;"	r
_vector4	three.js	/^	_vector4 = new THREE.Vector4(),$/;"	r
_vertex	three.js	/^					_vertex = getNextVertexInPool();$/;"	r
_vertex	three.js	/^	_vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0,$/;"	r
_vertexCount	three.js	/^			_vertexCount = 0;$/;"	r
_vertexPool	three.js	/^	_vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0,$/;"	r
_vertexPoolLength	three.js	/^	_vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0,$/;"	r
_vertexShaderPrecisionHighpFloat	three.js	/^	var _vertexShaderPrecisionHighpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.HIGH_FLOAT );$/;"	r
_vertexShaderPrecisionHighpInt	three.js	/^	var _vertexShaderPrecisionHighpInt = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.HIGH_INT );$/;"	r
_vertexShaderPrecisionLowpFloat	three.js	/^	var _vertexShaderPrecisionLowpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.LOW_FLOAT );$/;"	r
_vertexShaderPrecisionLowpInt	three.js	/^	var _vertexShaderPrecisionLowpInt = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.LOW_INT );$/;"	r
_vertexShaderPrecisionMediumpFloat	three.js	/^	var _vertexShaderPrecisionMediumpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.MEDIUM_FLOAT );$/;"	r
_vertexShaderPrecisionMediumpInt	three.js	/^	var _vertexShaderPrecisionMediumpInt = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.MEDIUM_INT );$/;"	r
_viewMatrix	three.js	/^	_viewMatrix = new THREE.Matrix4(),$/;"	r
_viewProjectionMatrix	three.js	/^	_viewProjectionMatrix = new THREE.Matrix4(),$/;"	r
_viewportHeight	three.js	/^		_viewportHeight = height !== undefined ? height : _canvas.height;$/;"	r
_viewportHeight	three.js	/^	_viewportHeight = 0,$/;"	r
_viewportWidth	three.js	/^		_viewportWidth = width !== undefined ? width : _canvas.width;$/;"	r
_viewportWidth	three.js	/^	_viewportWidth = 0,$/;"	r
_viewportX	three.js	/^		_viewportX = x !== undefined ? x : 0;$/;"	r
_viewportX	three.js	/^	_viewportX = 0,$/;"	r
_viewportY	three.js	/^		_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );$/;"	r
_viewportY	three.js	/^		_viewportY = y !== undefined ? y : 0;$/;"	r
_viewportY	three.js	/^	_viewportY = 0,$/;"	r
_w	three.js	/^			this._w = ( m21 - m12 ) \/ s;$/;"	r
_w	three.js	/^			this._w = (m13 - m31 ) \/ s;$/;"	r
_w	three.js	/^			this._w = (m32 - m23 ) \/ s;$/;"	r
_w	three.js	/^			this._w = -qb._w;$/;"	r
_w	three.js	/^			this._w = 0.25 \/ s;$/;"	r
_w	three.js	/^			this._w = 0.5 * ( w + this._w );$/;"	r
_w	three.js	/^			this._w = 1;$/;"	r
_w	three.js	/^			this._w = c1 * c2 * c3 + s1 * s2 * s3;$/;"	r
_w	three.js	/^			this._w = c1 * c2 * c3 - s1 * s2 * s3;$/;"	r
_w	three.js	/^			this._w = this._w * l;$/;"	r
_w	three.js	/^			this._w = w;$/;"	r
_w	three.js	/^		this._w = ( w * ratioA + this._w * ratioB );$/;"	r
_w	three.js	/^		this._w = Math.cos( halfAngle );$/;"	r
_w	three.js	/^		this._w = array[ 3 ];$/;"	r
_w	three.js	/^		this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;$/;"	r
_w	three.js	/^		this._w = quaternion._w;$/;"	r
_w	three.js	/^		this._w = value;$/;"	r
_w	three.js	/^		this._w = w;$/;"	r
_w	three.js	/^	this._w = ( w !== undefined ) ? w : 1;$/;"	r
_x	three.js	/^				this._x = 0;$/;"	r
_x	three.js	/^				this._x = Math.atan2( - m23, m22 );$/;"	r
_x	three.js	/^				this._x = Math.atan2( - m23, m33 );$/;"	r
_x	three.js	/^				this._x = Math.atan2( m32, m22 );$/;"	r
_x	three.js	/^				this._x = Math.atan2( m32, m33 );$/;"	r
_x	three.js	/^			this._x = ( m13 + m31 ) \/ s;$/;"	r
_x	three.js	/^			this._x = ( m32 - m23 ) * s;$/;"	r
_x	three.js	/^			this._x = (m12 + m21 ) \/ s;$/;"	r
_x	three.js	/^			this._x = -qb._x;$/;"	r
_x	three.js	/^			this._x = 0.25 * s;$/;"	r
_x	three.js	/^			this._x = 0.5 * ( x + this._x );$/;"	r
_x	three.js	/^			this._x = 0;$/;"	r
_x	three.js	/^			this._x = Math.asin(  clamp( 2 * ( q.x * q.w + q.y * q.z ) ) );$/;"	r
_x	three.js	/^			this._x = Math.asin(  clamp( 2 * ( q.x * q.w - q.y * q.z ) ) );$/;"	r
_x	three.js	/^			this._x = Math.asin( - clamp( m23 ) );$/;"	r
_x	three.js	/^			this._x = Math.asin( clamp( m32 ) );$/;"	r
_x	three.js	/^			this._x = Math.atan2( 2 * ( q.x * q.w + q.y * q.z ), ( sqw - sqx + sqy - sqz ) );$/;"	r
_x	three.js	/^			this._x = Math.atan2( 2 * ( q.x * q.w + q.z * q.y ), ( sqw - sqx - sqy + sqz ) );$/;"	r
_x	three.js	/^			this._x = Math.atan2( 2 * ( q.x * q.w - q.y * q.z ), ( sqw - sqx - sqy + sqz ) );$/;"	r
_x	three.js	/^			this._x = Math.atan2( 2 * ( q.x * q.w - q.z * q.y ), ( sqw - sqx + sqy - sqz ) );$/;"	r
_x	three.js	/^			this._x = s1 * c2 * c3 + c1 * s2 * s3;$/;"	r
_x	three.js	/^			this._x = s1 * c2 * c3 - c1 * s2 * s3;$/;"	r
_x	three.js	/^			this._x = this._x * l;$/;"	r
_x	three.js	/^			this._x = x;$/;"	r
_x	three.js	/^		this._x = ( x * ratioA + this._x * ratioB );$/;"	r
_x	three.js	/^		this._x = array[ 0 ];$/;"	r
_x	three.js	/^		this._x = axis.x * s;$/;"	r
_x	three.js	/^		this._x = euler._x;$/;"	r
_x	three.js	/^		this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;$/;"	r
_x	three.js	/^		this._x = quaternion._x;$/;"	r
_x	three.js	/^		this._x = value;$/;"	r
_x	three.js	/^		this._x = x;$/;"	r
_x	three.js	/^	_x: 0, _y: 0, _z: 0, _order: THREE.Euler.DefaultOrder,$/;"	r
_x	three.js	/^	_x: 0,_y: 0, _z: 0, _w: 0,$/;"	r
_x	three.js	/^	this._x = x || 0;$/;"	r
_y	three.js	/^				this._y = 0;$/;"	r
_y	three.js	/^				this._y = Math.atan2( - m31, m11 );$/;"	r
_y	three.js	/^				this._y = Math.atan2( - m31, m33 );$/;"	r
_y	three.js	/^				this._y = Math.atan2( m13, m11 );$/;"	r
_y	three.js	/^				this._y = Math.atan2( m13, m33 );$/;"	r
_y	three.js	/^			this._y = ( m13 - m31 ) * s;$/;"	r
_y	three.js	/^			this._y = ( m23 + m32 ) \/ s;$/;"	r
_y	three.js	/^			this._y = (m12 + m21 ) \/ s;$/;"	r
_y	three.js	/^			this._y = -qb._y;$/;"	r
_y	three.js	/^			this._y = 0.25 * s;$/;"	r
_y	three.js	/^			this._y = 0.5 * ( y + this._y );$/;"	r
_y	three.js	/^			this._y = 0;$/;"	r
_y	three.js	/^			this._y = Math.asin(  clamp( 2 * ( q.x * q.z + q.y * q.w ) ) );$/;"	r
_y	three.js	/^			this._y = Math.asin(  clamp( 2 * ( q.y * q.w - q.x * q.z ) ) );$/;"	r
_y	three.js	/^			this._y = Math.asin( - clamp( m31 ) );$/;"	r
_y	three.js	/^			this._y = Math.asin( clamp( m13 ) );$/;"	r
_y	three.js	/^			this._y = Math.atan2( 2 * ( q.x * q.z + q.y * q.w ), ( sqw + sqx - sqy - sqz ) );$/;"	r
_y	three.js	/^			this._y = Math.atan2( 2 * ( q.x * q.z + q.y * q.w ), ( sqw - sqx - sqy + sqz ) );$/;"	r
_y	three.js	/^			this._y = Math.atan2( 2 * ( q.y * q.w - q.x * q.z ), ( sqw + sqx - sqy - sqz ) );$/;"	r
_y	three.js	/^			this._y = Math.atan2( 2 * ( q.y * q.w - q.z * q.x ), ( sqw - sqx - sqy + sqz ) );$/;"	r
_y	three.js	/^			this._y = c1 * s2 * c3 + s1 * c2 * s3;$/;"	r
_y	three.js	/^			this._y = c1 * s2 * c3 - s1 * c2 * s3;$/;"	r
_y	three.js	/^			this._y = this._y * l;$/;"	r
_y	three.js	/^			this._y = y;$/;"	r
_y	three.js	/^		this._y = ( y * ratioA + this._y * ratioB );$/;"	r
_y	three.js	/^		this._y = array[ 1 ];$/;"	r
_y	three.js	/^		this._y = axis.y * s;$/;"	r
_y	three.js	/^		this._y = euler._y;$/;"	r
_y	three.js	/^		this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;$/;"	r
_y	three.js	/^		this._y = quaternion._y;$/;"	r
_y	three.js	/^		this._y = value;$/;"	r
_y	three.js	/^		this._y = y;$/;"	r
_y	three.js	/^	this._y = y || 0;$/;"	r
_z	three.js	/^				this._z = 0;$/;"	r
_z	three.js	/^				this._z = Math.atan2( - m12, m11 );$/;"	r
_z	three.js	/^				this._z = Math.atan2( - m12, m22 );$/;"	r
_z	three.js	/^				this._z = Math.atan2( m21, m11 );$/;"	r
_z	three.js	/^				this._z = Math.atan2( m21, m22 );$/;"	r
_z	three.js	/^			this._z = ( m21 - m12 ) * s;$/;"	r
_z	three.js	/^			this._z = (m13 + m31 ) \/ s;$/;"	r
_z	three.js	/^			this._z = (m23 + m32 ) \/ s;$/;"	r
_z	three.js	/^			this._z = -qb._z;$/;"	r
_z	three.js	/^			this._z = 0.25 * s;$/;"	r
_z	three.js	/^			this._z = 0.5 * ( z + this._z );$/;"	r
_z	three.js	/^			this._z = 0;$/;"	r
_z	three.js	/^			this._z = Math.asin(  clamp( 2 * ( q.x * q.y + q.z * q.w ) ) );$/;"	r
_z	three.js	/^			this._z = Math.asin(  clamp( 2 * ( q.z * q.w - q.x * q.y ) ) );$/;"	r
_z	three.js	/^			this._z = Math.asin( - clamp( m12 ) );$/;"	r
_z	three.js	/^			this._z = Math.asin( clamp( m21 ) );$/;"	r
_z	three.js	/^			this._z = Math.atan2( 2 * ( q.x * q.y + q.z * q.w ), ( sqw + sqx - sqy - sqz ) );$/;"	r
_z	three.js	/^			this._z = Math.atan2( 2 * ( q.x * q.y + q.z * q.w ), ( sqw - sqx + sqy - sqz ) );$/;"	r
_z	three.js	/^			this._z = Math.atan2( 2 * ( q.z * q.w - q.x * q.y ), ( sqw + sqx - sqy - sqz ) );$/;"	r
_z	three.js	/^			this._z = Math.atan2( 2 * ( q.z * q.w - q.x * q.y ), ( sqw - sqx + sqy - sqz ) );$/;"	r
_z	three.js	/^			this._z = c1 * c2 * s3 + s1 * s2 * c3;$/;"	r
_z	three.js	/^			this._z = c1 * c2 * s3 - s1 * s2 * c3;$/;"	r
_z	three.js	/^			this._z = this._z * l;$/;"	r
_z	three.js	/^			this._z = z;$/;"	r
_z	three.js	/^		this._z = ( z * ratioA + this._z * ratioB );$/;"	r
_z	three.js	/^		this._z = array[ 2 ];$/;"	r
_z	three.js	/^		this._z = axis.z * s;$/;"	r
_z	three.js	/^		this._z = euler._z;$/;"	r
_z	three.js	/^		this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;$/;"	r
_z	three.js	/^		this._z = quaternion._z;$/;"	r
_z	three.js	/^		this._z = value;$/;"	r
_z	three.js	/^		this._z = z;$/;"	r
_z	three.js	/^	this._z = z || 0;$/;"	r
a	three.js	/^							a = index + geometry.attributes.index.array[ i ];$/;"	r
a	three.js	/^							a = index;$/;"	r
a	three.js	/^						a = vertices[ face.a ];$/;"	r
a	three.js	/^						if ( THREE.Triangle.containsPoint( intersectPoint, a, b, c ) === false ) {$/;"	r
a	three.js	/^						if ( THREE.Triangle.containsPoint( intersectPoint, a, b, d ) === false &&$/;"	r
a	three.js	/^				a = 1 - a;$/;"	r
a	three.js	/^				a = json.skinIndices[ i     ];$/;"	r
a	three.js	/^				a = verts[ u ];$/;"	r
a	three.js	/^				face.a = changes[ face.a ];$/;"	r
a	three.js	/^				face.a = faces[ offset ++ ];$/;"	r
a	three.js	/^				triA.a = a;$/;"	r
a	three.js	/^				triB.a = b;$/;"	r
a	three.js	/^				var a = face.a;$/;"	r
a	three.js	/^				var a = ix + gridX1 * iy;$/;"	r
a	three.js	/^				var a = layeroffset + j + slen1,$/;"	r
a	three.js	/^				var a, b, c, d;$/;"	r
a	three.js	/^				var a, b, c, s, t;$/;"	r
a	three.js	/^				var a, b, c;$/;"	r
a	three.js	/^			a = i * sliceCount + j;$/;"	r
a	three.js	/^			a = this.grid[ i ][ j ];		\/\/ *** NOT NECESSARILY PLANAR ! ***$/;"	r
a	three.js	/^			var a = ( this.tubularSegments + 1 ) * j + i - 1;$/;"	r
a	three.js	/^			var a = THREE.Math.random16();$/;"	r
a	three.js	/^			var a = base;$/;"	r
a	three.js	/^			var a = ix + gridX1 * iz;$/;"	r
a	three.js	/^			var a = this.grid[ i ][ j ];$/;"	r
a	three.js	/^		a = ( v2 * x1 - v1 * x2 ) * idet;$/;"	r
a	three.js	/^		a, b, c, d,$/;"	r
a	three.js	/^		a, ca, cal, value,$/;"	r
a	three.js	/^		a,$/;"	r
a	three.js	/^		function handleTriangle( context, a, b, c, ua, ub, uc ) {$/;"	r
a	three.js	/^		var a = ( right + left ) \/ ( right - left );$/;"	r
a	three.js	/^		var a = 0.0;$/;"	r
a	three.js	/^		var a = Math.cos( x ), b = Math.sin( x );$/;"	r
a	three.js	/^		var a = THREE.ExtrudeGeometry.__v1,$/;"	r
a	three.js	/^		var a = face[ 0 ] + shapesOffset;$/;"	r
a	three.js	/^		var a = prepare( that.vertices[ face.a ] );$/;"	r
a	three.js	/^		var a = te[0], b = te[1], c = te[2],$/;"	r
a	three.js	/^		var a, attribute, type;$/;"	r
a	three.js	/^		var a, b, c, d, e, f, det, idet,$/;"	r
a	three.js	/^		var result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );$/;"	r
a	three.js	/^	clamp: function ( x, a, b ) {$/;"	r
a	three.js	/^	return function ( point, a, b, c ) {$/;"	r
a	three.js	/^	return function ( point, a, b, c, optionalTarget ) {$/;"	r
a	three.js	/^	this.a = ( a !== undefined ) ? a : new THREE.Vector3();$/;"	r
a	three.js	/^	this.a = a;$/;"	r
a	three.js	/^	var a, b, c, d;$/;"	r
a01	three.js	/^		var a01 = - this.direction.dot( segDir );$/;"	r
a1	three.js	/^	mapLinear: function ( x, a1, a2, b1, b2 ) {$/;"	r
a11	three.js	/^		var a11 = ae[0], a12 = ae[4], a13 = ae[8], a14 = ae[12];$/;"	r
a21	three.js	/^		var a21 = ae[1], a22 = ae[5], a23 = ae[9], a24 = ae[13];$/;"	r
a31	three.js	/^		var a31 = ae[2], a32 = ae[6], a33 = ae[10], a34 = ae[14];$/;"	r
a41	three.js	/^		var a41 = ae[3], a42 = ae[7], a43 = ae[11], a44 = ae[15];$/;"	r
aCP1y	three.js	/^THREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,$/;"	r
aCP2x	three.js	/^											   aCP2x, aCP2y,$/;"	r
aCPy	three.js	/^THREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {$/;"	r
aCROSSbp	three.js	/^			aCROSSbp = aX*bpy - aY*bpx;$/;"	r
aClockwise	three.js	/^				aClockwise = !!args[ 5 ];$/;"	r
aClockwise	three.js	/^				aClockwise = !!args[ 6 ];$/;"	r
aClockwise	three.js	/^	this.aClockwise = aClockwise;$/;"	r
aEndAngle	three.js	/^	this.aEndAngle = aEndAngle;$/;"	r
aHole	three.js	/^			var aHole = holes[h];$/;"	r
aRadius	three.js	/^				aRadius = args[ 2 ],$/;"	r
aRadius	three.js	/^	this.absarc(aX + x0, aY + y0, aRadius,$/;"	r
aStartAngle	three.js	/^									  aStartAngle, aEndAngle, aClockwise ) {$/;"	r
aStartAngle	three.js	/^									aStartAngle, aEndAngle, aClockwise );$/;"	r
aStartAngle	three.js	/^							aStartAngle, aEndAngle,$/;"	r
aStartAngle	three.js	/^				aStartAngle = args[ 3 ], aEndAngle = args[ 4 ],$/;"	r
aStartAngle	three.js	/^				aStartAngle = args[ 4 ], aEndAngle = args[ 5 ],$/;"	r
aStartAngle	three.js	/^		aStartAngle, aEndAngle, aClockwise );$/;"	r
aStartAngle	three.js	/^	this.aStartAngle = aStartAngle;$/;"	r
aX	three.js	/^											   aX, aY ) {$/;"	r
aX	three.js	/^			var aX = args[ 0 ], aY = args[ 1 ],$/;"	r
aX	three.js	/^		aX = cx - bx;  aY = cy - by;$/;"	r
aX	three.js	/^		var aX, aY, bX, bY, cX, cY;$/;"	r
aX	three.js	/^	THREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );$/;"	r
aX	three.js	/^	this.aX = aX;$/;"	r
aY	three.js	/^	this.aY = aY;$/;"	r
aY	three.js	/^	this.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);$/;"	r
aY	three.js	/^	var curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,$/;"	r
aY	three.js	/^ THREE.Path.prototype.absarc = function ( aX, aY, aRadius,$/;"	r
aY	three.js	/^THREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {$/;"	r
aY	three.js	/^THREE.EllipseCurve = function ( aX, aY, xRadius, yRadius,$/;"	r
aY	three.js	/^THREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,$/;"	r
aY	three.js	/^THREE.Path.prototype.arc = function ( aX, aY, aRadius,$/;"	r
aY	three.js	/^THREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,$/;"	r
ab	three.js	/^			ab = new THREE.Vector3();$/;"	r
absarc	three.js	/^ THREE.Path.prototype.absarc = function ( aX, aY, aRadius,$/;"	r
absellipse	three.js	/^THREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,$/;"	r
ac	three.js	/^			var ac = a * c, ad = a * d, bc = b * c, bd = b * d;$/;"	r
action	three.js	/^				action = outline[ i ++ ];$/;"	r
action	three.js	/^		action = item.action;$/;"	r
actions	three.js	/^				tmpShape.actions = tmpPath.actions;$/;"	r
actions	three.js	/^		tmpShape.actions = tmpPath.actions;$/;"	r
actions	three.js	/^	this.actions = [];$/;"	r
active	three.js	/^		active: false,$/;"	r
active	three.js	/^		animation.active = false;$/;"	r
active	three.js	/^		animation.active = true;$/;"	r
activeCubeFace	three.js	/^		renderTarget.activeCubeFace = 0;$/;"	r
activeCubeFace	three.js	/^		renderTarget.activeCubeFace = 1;$/;"	r
activeCubeFace	three.js	/^		renderTarget.activeCubeFace = 2;$/;"	r
activeCubeFace	three.js	/^		renderTarget.activeCubeFace = 3;$/;"	r
activeCubeFace	three.js	/^		renderTarget.activeCubeFace = 4;$/;"	r
activeCubeFace	three.js	/^		renderTarget.activeCubeFace = 5;$/;"	r
activeCubeFace	three.js	/^	this.activeCubeFace = 0; \/\/ PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5$/;"	r
activeInfluenceIndices	three.js	/^			var influence, activeInfluenceIndices = [];$/;"	r
add	three.js	/^	add: function ( color ) {$/;"	r
add	three.js	/^	add: function ( object ) {$/;"	r
add	three.js	/^	add: function ( v, w ) {$/;"	r
add	three.js	/^	that.add = function( data ) {$/;"	r
add	three.js	/^THREE.CurvePath.prototype.add = function ( curve ) {$/;"	r
add	three.js	/^THREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {$/;"	r
addBone	three.js	/^THREE.SkinnedMesh.prototype.addBone = function( bone ) {$/;"	r
addBuffer	three.js	/^	function addBuffer( objlist, buffer, object ) {$/;"	r
addBufferImmediate	three.js	/^	function addBufferImmediate( objlist, object ) {$/;"	r
addColors	three.js	/^	addColors: function ( color1, color2 ) {$/;"	r
addEventListener	three.js	/^		object.addEventListener = THREE.EventDispatcher.prototype.addEventListener;$/;"	r
addEventListener	three.js	/^	addEventListener: function ( type, listener ) {$/;"	r
addGeometryHandler	three.js	/^	addGeometryHandler: function ( typeID, loaderClass ) {$/;"	r
addHierarchyHandler	three.js	/^	addHierarchyHandler: function ( typeID, loaderClass ) {$/;"	r
addLevel	three.js	/^THREE.LOD.prototype.addLevel = function ( object, distance ) {$/;"	r
addLine	three.js	/^	function addLine( a, b, hex ) {$/;"	r
addLineNumbers	three.js	/^	function addLineNumbers ( string ) {$/;"	r
addObject	three.js	/^	function addObject( object, scene ) {$/;"	r
addPoint	three.js	/^	function addPoint( id, hex ) {$/;"	r
addPostPlugin	three.js	/^	this.addPostPlugin = function ( plugin ) {$/;"	r
addPrePlugin	three.js	/^	this.addPrePlugin = function ( plugin ) {$/;"	r
addScalar	three.js	/^	addScalar: function ( s ) {$/;"	r
addShape	three.js	/^THREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {$/;"	r
addShape	three.js	/^THREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {$/;"	r
addShapeList	three.js	/^THREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {$/;"	r
addShapeList	three.js	/^THREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {$/;"	r
addStatusElement	three.js	/^	addStatusElement: function () {$/;"	r
addToUpdate	three.js	/^	that.addToUpdate = function( animation ) {$/;"	r
addVectors	three.js	/^	addVectors: function ( a, b ) {$/;"	r
addWrapPath	three.js	/^THREE.CurvePath.prototype.addWrapPath = function ( bendpath ) {$/;"	r
ae	three.js	/^			var ae = a * e, af = a * f, be = b * e, bf = b * f;$/;"	r
ae	three.js	/^		var ae = a.elements;$/;"	r
ahole	three.js	/^			ahole = holes[ h ];$/;"	r
ahole	three.js	/^		ahole = holes[ h ];$/;"	r
ahole	three.js	/^	var ahole, h, hl; \/\/ looping of holes$/;"	r
ai	three.js	/^			var ai = this.__objectsAdded.indexOf( object );$/;"	r
aj	three.js	/^			var aj = prepare( a.clone().lerp( c, i \/ cols ) );$/;"	r
alignment	three.js	/^		_sprite.uniforms.alignment            = _gl.getUniformLocation( _sprite.program, "alignment" );$/;"	r
alignment	three.js	/^	this.alignment = THREE.SpriteAlignment.center.clone();$/;"	r
allPointsMap	three.js	/^			allPointsMap = {},$/;"	r
allocateBones	three.js	/^	function allocateBones ( object ) {$/;"	r
allocateLights	three.js	/^	function allocateLights( lights ) {$/;"	r
allocateShadows	three.js	/^	function allocateShadows( lights ) {$/;"	r
allpoints	three.js	/^			allpoints = shapeWithoutHoles.allpoints,$/;"	r
allpoints	three.js	/^			allpoints: allpoints$/;"	r
allpoints	three.js	/^		\/\/console.log( "allpoints",allpoints, allpoints.length );$/;"	r
allpoints	three.js	/^		var allpoints = shape.concat();$/;"	r
allpts	three.js	/^		var allpts = pts.concat();$/;"	r
alpha1	three.js	/^				alpha1 = Math.max( alpha1, bc1far \/ ( bc1far - bc2far ) );$/;"	r
alpha1	three.js	/^				alpha1 = Math.max( alpha1, bc1near \/ ( bc1near - bc2near ) );$/;"	r
alpha1	three.js	/^		var alpha1 = 0, alpha2 = 1,$/;"	r
alpha2	three.js	/^				alpha2 = Math.min( alpha2, bc1far \/ ( bc1far - bc2far ) );$/;"	r
alpha2	three.js	/^				alpha2 = Math.min( alpha2, bc1near \/ ( bc1near - bc2near ) );$/;"	r
alphaTest	three.js	/^			alphaTest: material.alphaTest,$/;"	r
alphaTest	three.js	/^		_sprite.uniforms.alphaTest 		  	  = _gl.getUniformLocation( _sprite.program, "alphaTest" );$/;"	r
alphaTest	three.js	/^		material.alphaTest = this.alphaTest;$/;"	r
alphaTest	three.js	/^	this.alphaTest = 0;$/;"	r
alphatest_fragment	three.js	/^	alphatest_fragment: [$/;"	r
ambient	three.js	/^					ambient: json.ambient,$/;"	r
ambient	three.js	/^				var ambient = matJSON.parameters.ambient;$/;"	r
ambient	three.js	/^			mpars.ambient = rgb2hex( m.colorAmbient );$/;"	r
ambient	three.js	/^		ambient: [ 0, 0, 0 ],$/;"	r
ambient	three.js	/^	this.ambient = new THREE.Color( 0xffffff );$/;"	r
amount	three.js	/^				var amount = normal.dot( _vector3.subVectors( lightPosition, position ).normalize() );$/;"	r
amount	three.js	/^				var amount = normal.dot( lightPosition );$/;"	r
amount	three.js	/^	parameters.amount = parameters.height !== undefined ? parameters.height : 50;$/;"	r
amount	three.js	/^	var amount = options.amount !== undefined ? options.amount : 100;$/;"	r
angle	three.js	/^						angle = Math.atan2( this.target.x, this.target.z );$/;"	r
angle	three.js	/^						object.rotation.set( 0, angle, 0 );$/;"	r
angle	three.js	/^				angle = aStartAngle + t * deltaAngle;$/;"	r
angle	three.js	/^			angle = Math.PI;$/;"	r
angle	three.js	/^			var angle;$/;"	r
angle	three.js	/^		var angle, x, y, z,		\/\/ variables for result$/;"	r
angle	three.js	/^	light.angle = this.angle;$/;"	r
angle	three.js	/^	this.angle = ( angle !== undefined ) ? angle : Math.PI \/ 3;$/;"	r
angle	three.js	/^	var angle = this.aStartAngle + t * deltaAngle;$/;"	r
angleTo	three.js	/^	angleTo: function ( v ) {$/;"	r
anglea	three.js	/^		var anglea = Math.atan2( pt_j.y - pt_i.y, pt_j.x - pt_i.x );$/;"	r
angleb	three.js	/^		var angleb = Math.atan2( pt_k.y - pt_i.y, pt_k.x - pt_i.x );$/;"	r
anglec	three.js	/^		var anglec = ( anglea + angleb ) \/ 2;$/;"	r
animation	three.js	/^			var animation = animations[ label ];$/;"	r
animation	three.js	/^		geometry.animation = json.animation;$/;"	r
animation	three.js	/^		var animation = this.animationsList[ i ];$/;"	r
animation	three.js	/^	var animation = this.animationsMap[ name ];$/;"	r
animation	three.js	/^	var animation = this.geometry.animations[ label ];$/;"	r
animation	three.js	/^	var animation = {$/;"	r
animationCache	three.js	/^				node.animationCache = {};$/;"	r
animationCache	three.js	/^				object.animationCache = {};$/;"	r
animationCache	three.js	/^			animationCache = node.animationCache;$/;"	r
animationCache	three.js	/^		animationCache = object.animationCache;$/;"	r
animationCache	three.js	/^	var animationCache;$/;"	r
animations	three.js	/^	var firstAnimation, animations = geometry.animations;$/;"	r
animationsList	three.js	/^	this.animationsList = [];$/;"	r
animationsMap	three.js	/^	this.animationsMap = {};$/;"	r
anisotropy	three.js	/^		texture.anisotropy = this.anisotropy;$/;"	r
anisotropy	three.js	/^		tmp.anisotropy = this.anisotropy;$/;"	r
anisotropy	three.js	/^	this.anisotropy = anisotropy !== undefined ? anisotropy : 1;$/;"	r
anisotropy	three.js	/^	this.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;$/;"	r
apply	three.js	/^	apply: function ( object ) {$/;"	r
applyAxisAngle	three.js	/^	applyAxisAngle: function () {$/;"	r
applyEuler	three.js	/^	applyEuler: function () {$/;"	r
applyMatrix	three.js	/^	applyMatrix: function ( matrix ) {$/;"	r
applyMatrix	three.js	/^	applyMatrix: function () {$/;"	r
applyMatrix3	three.js	/^	applyMatrix3: function ( m ) {$/;"	r
applyMatrix4	three.js	/^	applyMatrix4: function ( m ) {$/;"	r
applyMatrix4	three.js	/^	applyMatrix4: function ( matrix ) {$/;"	r
applyMatrix4	three.js	/^	applyMatrix4: function ( matrix4 ) {$/;"	r
applyMatrix4	three.js	/^	applyMatrix4: function() {$/;"	r
applyProjection	three.js	/^	applyProjection: function ( m ) {$/;"	r
applyQuaternion	three.js	/^	applyQuaternion: function ( q ) {$/;"	r
apx	three.js	/^			apx = px - ax;  apy = py - ay;$/;"	r
apx	three.js	/^		var apx, apy, bpx, bpy, cpx, cpy;$/;"	r
arc	three.js	/^							data.arc$/;"	r
arc	three.js	/^	this.arc = arc || Math.PI * 2;$/;"	r
arc	three.js	/^THREE.Path.prototype.arc = function ( aX, aY, aRadius,$/;"	r
arcLengths	three.js	/^	var arcLengths = this.getLengths();$/;"	r
areCustomAttributesDirty	three.js	/^	function areCustomAttributesDirty( material ) {$/;"	r
area	three.js	/^	area: function() {$/;"	r
area	three.js	/^	namespace.Triangulate.area = area;$/;"	r
area	three.js	/^	var area = function ( contour ) {$/;"	r
area1	three.js	/^					area1 = THREE.GeometryUtils.triangleArea( vA, vB, vD );$/;"	r
area1	three.js	/^					area1 = face._area1;$/;"	r
area1	three.js	/^				area1 = THREE.GeometryUtils.triangleArea( vA, vB, vD ),$/;"	r
area1	three.js	/^			var area1, area2;$/;"	r
area2	three.js	/^					area2 = THREE.GeometryUtils.triangleArea( vB, vC, vD );$/;"	r
area2	three.js	/^					area2 = face._area2;$/;"	r
area2	three.js	/^				area2 = THREE.GeometryUtils.triangleArea( vB, vC, vD );$/;"	r
areaa	three.js	/^			var areaa = THREE.FontUtils.Triangulate.area( areaapts );$/;"	r
areaa2	three.js	/^			var areaa2 = THREE.FontUtils.Triangulate.area( areaapts );$/;"	r
areaapts	three.js	/^			areaapts = [$/;"	r
areaapts	three.js	/^			var areaapts = [$/;"	r
areab	three.js	/^			\/\/console.log(areaa,areab ,areaa2,areab2, ( areaa + areab ),  ( areaa2 + areab2 ));$/;"	r
areab	three.js	/^			var areab = THREE.FontUtils.Triangulate.area( areabpts );$/;"	r
areab2	three.js	/^			var areab2 = THREE.FontUtils.Triangulate.area( areabpts );$/;"	r
areabpts	three.js	/^			areabpts = [$/;"	r
areabpts	three.js	/^			var areabpts = [$/;"	r
args	three.js	/^		args = item.args;$/;"	r
args	three.js	/^	this.actions.push( { action: THREE.PathActions.BEZIER_CURVE_TO, args: args } );$/;"	r
args	three.js	/^	this.actions.push( { action: THREE.PathActions.CSPLINE_THRU, args: args } );$/;"	r
args	three.js	/^	this.actions.push( { action: THREE.PathActions.ELLIPSE, args: args } );$/;"	r
args	three.js	/^	this.actions.push( { action: THREE.PathActions.LINE_TO, args: args } );$/;"	r
args	three.js	/^	this.actions.push( { action: THREE.PathActions.MOVE_TO, args: args } );$/;"	r
args	three.js	/^	this.actions.push( { action: THREE.PathActions.QUADRATIC_CURVE_TO, args: args } );$/;"	r
args	three.js	/^	var args = Array.prototype.slice.call( arguments );$/;"	r
array	three.js	/^					array: new Float32Array( nVertexElements )$/;"	r
array	three.js	/^					attribute.array = new Float32Array( nvertices * size );$/;"	r
array	three.js	/^				array: new Float32Array( nTangentElements )$/;"	r
array	three.js	/^				attributeItem.array = null;$/;"	r
array	three.js	/^		var array = [];$/;"	r
aspect	three.js	/^		var aspect = this.fullWidth \/ this.fullHeight;$/;"	r
aspect	three.js	/^	makePerspective: function ( fov, aspect, near, far ) {$/;"	r
aspect	three.js	/^	this.aspect = aspect !== undefined ? aspect : 1;$/;"	r
aspect	three.js	/^	this.cameraP.aspect = width \/ height;$/;"	r
aspect	three.js	/^	var aspect = this.cameraP.aspect;$/;"	r
aspect	three.js	/^	var aspect = width\/height;$/;"	r
aspect	three.js	/^	var cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );$/;"	r
aspect	three.js	/^	var cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );$/;"	r
aspect	three.js	/^	var cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );$/;"	r
aspect	three.js	/^	var cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );$/;"	r
aspect	three.js	/^	var cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );$/;"	r
aspect	three.js	/^	var cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );$/;"	r
aspect	three.js	/^THREE.PerspectiveCamera = function ( fov, aspect, near, far ) {$/;"	r
async_callback_gate	three.js	/^		function async_callback_gate() {$/;"	r
at	three.js	/^	at: function ( t, optionalTarget ) {$/;"	r
attach	three.js	/^	attach: function ( child, scene, parent ) {$/;"	r
attribute	three.js	/^					attribute = geometryGroup.__webglCustomAttributesList[ i ];$/;"	r
attribute	three.js	/^				var attribute = material.attributes[ a ];$/;"	r
attribute	three.js	/^				var attribute = {};$/;"	r
attribute	three.js	/^			attribute = geometry.attributes[ a ];$/;"	r
attributeItem	three.js	/^							attributeItem = geometryAttributes[ attributeName ];$/;"	r
attributeItem	three.js	/^						attributeItem = geometryAttributes[ attributeName ];$/;"	r
attributeItem	three.js	/^					attributeItem = geometryAttributes[ attributeName ];$/;"	r
attributeItem	three.js	/^			attributeItem = attributes[ attributeName ];$/;"	r
attributeItem	three.js	/^		var attributeItem, attributeName, attributePointer, attributeSize;$/;"	r
attributeName	three.js	/^		var attributeName, attributeItem;$/;"	r
attributePointer	three.js	/^							attributePointer = programAttributes[ attributeName ];$/;"	r
attributePointer	three.js	/^						attributePointer = programAttributes[ attributeName ];$/;"	r
attributePointer	three.js	/^					attributePointer = programAttributes[ attributeName ];$/;"	r
attributeSize	three.js	/^								_gl.vertexAttribPointer( attributePointer, attributeSize, _gl.FLOAT, false, 0, startIndex * attributeSize * 4 ); \/\/ 4 bytes per Float32$/;"	r
attributeSize	three.js	/^							_gl.vertexAttribPointer( attributePointer, attributeSize, _gl.FLOAT, false, 0, 0 );$/;"	r
attributeSize	three.js	/^							attributeSize = attributeItem.itemSize;$/;"	r
attributeSize	three.js	/^						_gl.vertexAttribPointer( attributePointer, attributeSize, _gl.FLOAT, false, 0, 0 );$/;"	r
attributeSize	three.js	/^						attributeSize = attributeItem.itemSize;$/;"	r
attributeSize	three.js	/^					attributeSize = attributeItem.itemSize;$/;"	r
attributes	three.js	/^			attributes = _lensFlare.attributes;$/;"	r
attributes	three.js	/^		_lensFlare.attributes = {};$/;"	r
attributes	three.js	/^		_sprite.attributes = {};$/;"	r
attributes	three.js	/^		program.attributes = {};$/;"	r
attributes	three.js	/^		var attributes = _sprite.attributes,$/;"	r
attributes	three.js	/^		var attributes = geometry.attributes;$/;"	r
attributes	three.js	/^		var attributes = material.program.attributes;$/;"	r
attributes	three.js	/^		var attributes = program.attributes;$/;"	r
attributes	three.js	/^	material.attributes = this.attributes;$/;"	r
attributes	three.js	/^	this.attributes = null;$/;"	r
attributes	three.js	/^	this.attributes = {};$/;"	r
autoClear	three.js	/^	this.autoClear = true;$/;"	r
autoClearColor	three.js	/^	this.autoClearColor = true;$/;"	r
autoClearDepth	three.js	/^	this.autoClearDepth = true;$/;"	r
autoClearStencil	three.js	/^	this.autoClearStencil = true;$/;"	r
autoClose	three.js	/^	this.autoClose = false; \/\/ Automatically closes the path$/;"	r
autoCreateAnimations	three.js	/^THREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {$/;"	r
autoScaleCubemaps	three.js	/^	this.autoScaleCubemaps = true;$/;"	r
autoStart	three.js	/^	this.autoStart = ( autoStart !== undefined ) ? autoStart : true;$/;"	r
autoUpdate	three.js	/^	object.autoUpdate = this.autoUpdate;$/;"	r
autoUpdate	three.js	/^	this.autoUpdate = true; \/\/ checked by the renderer$/;"	r
autoUpdateObjects	three.js	/^	this.autoUpdateObjects = true;$/;"	r
ax	three.js	/^		ax = contour[ verts[ u ] ].x;$/;"	r
ax	three.js	/^		var ax = geometry.vertices[ indexA ].x,$/;"	r
ax	three.js	/^		var ax, ay, bx, by;$/;"	r
axis	three.js	/^	var axis = new THREE.Vector3();$/;"	r
ay	three.js	/^			ay = geometry.vertices[ indexA ].y,$/;"	r
ay	three.js	/^		ay = contour[ verts[ u ] ].y;$/;"	r
az	three.js	/^			az = geometry.vertices[ indexA ].z,$/;"	r
azi	three.js	/^		var azi = azimuth( face.centroid );$/;"	r
azimuth	three.js	/^	function azimuth( vector ) {$/;"	r
b	three.js	/^							b = index + 1;$/;"	r
b	three.js	/^							b = index + geometry.attributes.index.array[ i + 1 ];$/;"	r
b	three.js	/^						     THREE.Triangle.containsPoint( intersectPoint, b, c, d ) === false ) {$/;"	r
b	three.js	/^						b = vertices[ face.b ];$/;"	r
b	three.js	/^					b = layeroffset + k + slen1,$/;"	r
b	three.js	/^				\/\/ check dups in (a, b, c, d) and convert to -> face3$/;"	r
b	three.js	/^				b = 1 - b;$/;"	r
b	three.js	/^				b = json.skinIndices[ i + 1 ];$/;"	r
b	three.js	/^				b = verts[ v ];$/;"	r
b	three.js	/^				f4( a, b, c, d, contour, s, sl, j, k );$/;"	r
b	three.js	/^				face.b = changes[ face.b ];$/;"	r
b	three.js	/^				face.b = faces[ offset ++ ];$/;"	r
b	three.js	/^				faces.push( new THREE.Face3( a, b, c ) );$/;"	r
b	three.js	/^				faces.push( new THREE.Face4( a, b, d, c ) );$/;"	r
b	three.js	/^				geometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );$/;"	r
b	three.js	/^				triA.b = b;$/;"	r
b	three.js	/^				triB.b = c;$/;"	r
b	three.js	/^				var b = face.b;$/;"	r
b	three.js	/^				var b = ix + gridX1 * ( iy + 1 );$/;"	r
b	three.js	/^			b = THREE.ExtrudeGeometry.__v2,$/;"	r
b	three.js	/^			b = i * sliceCount + j + 1;$/;"	r
b	three.js	/^			b = this.grid[ ip ][ j ];$/;"	r
b	three.js	/^			this.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) \/ 100;$/;"	r
b	three.js	/^			this.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) \/ 255;$/;"	r
b	three.js	/^			this.b = hue2rgb( q, p, h - 1 \/ 3 );$/;"	r
b	three.js	/^			this.faces.push( new THREE.Face4( a, b, c, d ) );$/;"	r
b	three.js	/^			var b = ( this.tubularSegments + 1 ) * ( j - 1 ) + i - 1;$/;"	r
b	three.js	/^			var b = THREE.Math.random16();$/;"	r
b	three.js	/^			var b = base + np;$/;"	r
b	three.js	/^			var b = ix + gridX1 * ( iz + 1 );$/;"	r
b	three.js	/^			var b = this.grid[ ip ][ j ];$/;"	r
b	three.js	/^			var face = new THREE.Face4( a, b, c, d );$/;"	r
b	three.js	/^			var face = new THREE.Face4( a, b, c, d, [ normals[ a ], normals[ b ], normals[ c ], normals[ d ] ] );$/;"	r
b	three.js	/^		_context.transform( a, b, c, d, e, f );$/;"	r
b	three.js	/^		b = ( v2 * y1 - v1 * y2 ) * idet;$/;"	r
b	three.js	/^		function handleTriangle( a, b, c ) {$/;"	r
b	three.js	/^		return function ( a, b, c ) {$/;"	r
b	three.js	/^		scope.faces.push( new THREE.Face3( a, b, c, null, null, material ) );$/;"	r
b	three.js	/^		this.b = ( hex & 255 ) \/ 255;$/;"	r
b	three.js	/^		this.b = Math.sqrt( color.b );$/;"	r
b	three.js	/^		this.b = Math.sqrt( this.b );$/;"	r
b	three.js	/^		this.b = b * b;$/;"	r
b	three.js	/^		this.b = b;$/;"	r
b	three.js	/^		this.b = color.b * color.b;$/;"	r
b	three.js	/^		this.b = color.b;$/;"	r
b	three.js	/^		this.b = color1.b + color2.b;$/;"	r
b	three.js	/^		this.faces.push( new THREE.Face3( a, b, c, null, null, material ) );$/;"	r
b	three.js	/^		var b = ( top + bottom ) \/ ( top - bottom );$/;"	r
b	three.js	/^		var b = Math.floor( color.b * 255 );$/;"	r
b	three.js	/^		var b = face[ 1 ] + shapesOffset;$/;"	r
b	three.js	/^		var b = prepare( that.vertices[ face.b ] );$/;"	r
b	three.js	/^	function addLine( a, b, hex ) {$/;"	r
b	three.js	/^	function f3( a, b, c, isBottom ) {$/;"	r
b	three.js	/^	function f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {$/;"	r
b	three.js	/^	multiplyToArray: function ( a, b, r ) {$/;"	r
b	three.js	/^	return function ( a, b, c, optionalTarget ) {$/;"	r
b	three.js	/^	set: function ( a, b, c ) {$/;"	r
b	three.js	/^	this.b = ( b !== undefined ) ? b : new THREE.Vector3();$/;"	r
b	three.js	/^	this.b = b;$/;"	r
b	three.js	/^	var b, bone, gbone, p, q, s;$/;"	r
b	three.js	/^	var b, bs, t, z,$/;"	r
b	three.js	/^ 		scope.faces.push( new THREE.Face4( a, b, c, d, null, null, extrudeMaterial ) );$/;"	r
b	three.js	/^THREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {$/;"	r
b	three.js	/^THREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {$/;"	r
b	three.js	/^THREE.Triangle = function ( a, b, c ) {$/;"	r
b	three.js	/^\/\/    like so: [ a, b, c, d, a ], see first is the same as last.$/;"	r
b0	three.js	/^		var b0 = diff.dot( this.direction );$/;"	r
b1	three.js	/^		var b1 = - diff.dot( segDir );$/;"	r
b11	three.js	/^		var b11 = be[0], b12 = be[4], b13 = be[8], b14 = be[12];$/;"	r
b2	three.js	/^	b2: function ( t, p0, p1, p2 ) {$/;"	r
b21	three.js	/^		var b21 = be[1], b22 = be[5], b23 = be[9], b24 = be[13];$/;"	r
b2p0	three.js	/^	b2p0: function ( t, p ) {$/;"	r
b2p1	three.js	/^	b2p1: function ( t, p ) {$/;"	r
b2p2	three.js	/^	b2p2: function ( t, p ) {$/;"	r
b3	three.js	/^	b3: function ( t, p0, p1, p2, p3 ) {$/;"	r
b31	three.js	/^		var b31 = be[2], b32 = be[6], b33 = be[10], b34 = be[14];$/;"	r
b3p0	three.js	/^	b3p0: function ( t, p ) {$/;"	r
b3p1	three.js	/^	b3p1: function ( t, p ) {$/;"	r
b3p2	three.js	/^	b3p2: function ( t, p ) {$/;"	r
b3p3	three.js	/^	b3p3: function ( t, p ) {$/;"	r
b41	three.js	/^		var b41 = be[3], b42 = be[7], b43 = be[11], b44 = be[15];$/;"	r
bCROSScp	three.js	/^			bCROSScp = bX*cpy - bY*cpx;$/;"	r
bX	three.js	/^		bX = ax - cx;  bY = ay - cy;$/;"	r
background	three.js	/^		e.style.background = "rgba(0,0,0,0.25)";$/;"	r
barycoordFromPoint	three.js	/^	barycoordFromPoint: function ( point, optionalTarget ) {$/;"	r
barycoordFromPoint	three.js	/^THREE.Triangle.barycoordFromPoint = function() {$/;"	r
base	three.js	/^			var base = j + np * i;$/;"	r
base	three.js	/^			var id, base = "morphNormal";$/;"	r
base	three.js	/^			var id, base = "morphTarget";$/;"	r
bb	three.js	/^			var bb = this.boundingBox;$/;"	r
bb	three.js	/^		var bb = geometry.boundingBox;$/;"	r
bc1far	three.js	/^		bc1far =  - s1.z + s1.w,$/;"	r
bc1near	three.js	/^		bc1near =  s1.z + s1.w,$/;"	r
bc2far	three.js	/^		bc2far =  - s2.z + s2.w;$/;"	r
bc2near	three.js	/^		bc2near =  s2.z + s2.w,$/;"	r
be	three.js	/^		var be = b.elements;$/;"	r
belongsToAttribute	three.js	/^					attribute.buffer.belongsToAttribute = a;$/;"	r
bends	three.js	/^		bends = this.bends;$/;"	r
bends	three.js	/^	this.bends = [];$/;"	r
bevelEnabled	three.js	/^		bevelEnabled = false; \/\/ bevels not supported for path extrusion$/;"	r
bevelEnabled	three.js	/^	var bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; \/\/ false$/;"	r
bevelPoints	three.js	/^	var bevelPoints = [];$/;"	r
bevelSegments	three.js	/^		bevelSegments = 0;$/;"	r
bevelSegments	three.js	/^	var bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;$/;"	r
bevelSize	three.js	/^		bevelSize = 0;$/;"	r
bevelSize	three.js	/^	var bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; \/\/ 8$/;"	r
bevelThickness	three.js	/^		bevelThickness = 0;$/;"	r
bevelThickness	three.js	/^	var bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; \/\/ 10$/;"	r
bezierCurveTo	three.js	/^THREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,$/;"	r
binarySearch	three.js	/^			function binarySearch( start, end ) {$/;"	r
binarySearchIndices	three.js	/^		function binarySearchIndices( value ) {$/;"	r
binormal	three.js	/^		binormal = binormals[ i ];$/;"	r
binormal	three.js	/^		binormal = new THREE.Vector3(),$/;"	r
binormal	three.js	/^		binormal = new THREE.Vector3();$/;"	r
binormal	three.js	/^		binormal,$/;"	r
binormals	three.js	/^		binormals = [],$/;"	r
binormals	three.js	/^		binormals = frames.binormals;$/;"	r
binormals	three.js	/^	this.binormals = binormals;$/;"	r
bitan	three.js	/^	var bitan = new THREE.Vector3();$/;"	r
bitmap	three.js	/^				bitmap = material.map.image;$/;"	r
bitmap	three.js	/^		bitmap, bitmapWidth, bitmapHeight;$/;"	r
bitmapHeight	three.js	/^				bitmapHeight = bitmap.height >> 1;$/;"	r
bitmapWidth	three.js	/^				bitmapWidth = bitmap.width >> 1;$/;"	r
bits	three.js	/^		var bits = 0;$/;"	r
bj	three.js	/^			var bj = prepare( b.clone().lerp( c, i \/ cols ) );$/;"	r
bl	three.js	/^			for ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {$/;"	r
bl	three.js	/^		for ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {$/;"	r
blendDst	three.js	/^		material.blendDst = this.blendDst;$/;"	r
blendDst	three.js	/^	this.blendDst = THREE.OneMinusSrcAlphaFactor;$/;"	r
blendEquation	three.js	/^		material.blendEquation = this.blendEquation;$/;"	r
blendEquation	three.js	/^	this.blendEquation = THREE.AddEquation;$/;"	r
blendEquation	three.js	/^	this.setBlending = function ( blending, blendEquation, blendSrc, blendDst ) {$/;"	r
blendSrc	three.js	/^		material.blendSrc = this.blendSrc;$/;"	r
blendSrc	three.js	/^	this.blendSrc = THREE.SrcAlphaFactor;$/;"	r
blending	three.js	/^			mpars.blending = THREE[ m.blending ];$/;"	r
blending	three.js	/^		                    blending: blending } );		\/\/ blending$/;"	r
blending	three.js	/^		material.blending = this.blending;$/;"	r
blending	three.js	/^	this.blending = THREE.NormalBlending;$/;"	r
blockBytes	three.js	/^				blockBytes = 16;$/;"	r
blockBytes	three.js	/^				blockBytes = 8;$/;"	r
blockBytes	three.js	/^		var blockBytes;$/;"	r
bone	three.js	/^			bone = this.addBone();$/;"	r
bone	three.js	/^			bone = this.bones[ b ];$/;"	r
bone	three.js	/^		bone = new THREE.Bone( this );$/;"	r
boneInverses	three.js	/^			this.boneInverses = [];$/;"	r
boneMatrices	three.js	/^			this.boneMatrices = new Float32Array( 16 * nBones );$/;"	r
boneMatrices	three.js	/^			this.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); \/\/ 4 floats per RGBA pixel$/;"	r
boneMatrices	three.js	/^	this.boneMatrices = [];$/;"	r
boneTexture	three.js	/^			this.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );$/;"	r
boneTextureHeight	three.js	/^			boneTextureHeight: object && object.boneTextureHeight,$/;"	r
boneTextureHeight	three.js	/^			this.boneTextureHeight = size;$/;"	r
boneTextureWidth	three.js	/^			boneTextureWidth: object && object.boneTextureWidth,$/;"	r
boneTextureWidth	three.js	/^			this.boneTextureWidth = size;$/;"	r
bones	three.js	/^		geometry.bones = json.bones;$/;"	r
bones	three.js	/^	this.bones = [];$/;"	r
bottom	three.js	/^		shadowCamera.bottom = _min.y;$/;"	r
bottom	three.js	/^		var bottom = -top;$/;"	r
bottom	three.js	/^	this.bottom = -height \/ 2;$/;"	r
bottom	three.js	/^	this.bottom = bottom;$/;"	r
bottom	three.js	/^	this.cameraO.bottom = -halfHeight;$/;"	r
bottomCenter	three.js	/^THREE.SpriteAlignment.bottomCenter = new THREE.Vector2( 0, 1 );$/;"	r
bottomLeft	three.js	/^THREE.SpriteAlignment.bottomLeft = new THREE.Vector2( 1, 1 );$/;"	r
bottomRight	three.js	/^THREE.SpriteAlignment.bottomRight = new THREE.Vector2( -1, 1 );$/;"	r
boundTo	three.js	/^						   customAttribute.boundTo === "vertices") ) {$/;"	r
boundTo	three.js	/^					   customAttribute.boundTo === "vertices" ) ) {$/;"	r
boundingBox	three.js	/^			this.boundingBox = new THREE.Box3();$/;"	r
boundingBox	three.js	/^	this.boundingBox = null;$/;"	r
boundingSphere	three.js	/^			this.boundingSphere = new THREE.Sphere();$/;"	r
boundingSphere	three.js	/^	this.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );$/;"	r
boundingSphere	three.js	/^	this.boundingSphere = null;$/;"	r
bounds	three.js	/^	var bounds = this.getBoundingBox();$/;"	r
box	three.js	/^		var box = optionalTarget || new THREE.Box3();$/;"	r
box	three.js	/^	this.box = new THREE.Box3();$/;"	r
bpx	three.js	/^			bpx = px - bx;  bpy = py - by;$/;"	r
break	three.js	/^								break;$/;"	r
break	three.js	/^						break;$/;"	r
break	three.js	/^					break;$/;"	r
break	three.js	/^					case b: hue = ( r - g ) \/ delta + 4; break;$/;"	r
break	three.js	/^					case g: hue = ( b - r ) \/ delta + 2; break;$/;"	r
break	three.js	/^					case r: hue = ( g - b ) \/ delta + ( g < b ? 6 : 0 ); break;$/;"	r
break	three.js	/^				  break;$/;"	r
break	three.js	/^				break;$/;"	r
break	three.js	/^			break;$/;"	r
break	three.js	/^			case 0: this.x = value; break;$/;"	r
break	three.js	/^			case 1: this.y = value; break;$/;"	r
break	three.js	/^			case 2: this.z = value; break;$/;"	r
break	three.js	/^			case 3: this.w = value; break;$/;"	r
break	three.js	/^		  break;$/;"	r
bs	three.js	/^				\/\/vert = scalePt( ahole[ i ], holesCentroids[ h ], bs, true );$/;"	r
bs	three.js	/^		bs = bevelSize * ( Math.sin ( t * Math.PI\/2 ) ) ; \/\/ curved$/;"	r
bs	three.js	/^		bs = bevelSize * Math.sin ( t * Math.PI\/2 ) ;$/;"	r
bs	three.js	/^	bs = bevelSize;$/;"	r
buffer	three.js	/^					attribute.buffer = _gl.createBuffer();$/;"	r
buffer	three.js	/^					buffer = webglObject.buffer;$/;"	r
buffer	three.js	/^				buffer = webglObject.buffer;$/;"	r
buffer	three.js	/^				buffer: buffer,$/;"	r
buffer	three.js	/^				var buffer = request.response;$/;"	r
buffer	three.js	/^				var buffer = rq.response;$/;"	r
buffer	three.js	/^			attribute.buffer = _gl.createBuffer();$/;"	r
buffer	three.js	/^			buffer = globject.buffer,$/;"	r
buffer	three.js	/^			var buffer = request.response;$/;"	r
buffer	three.js	/^	function addBuffer( objlist, buffer, object ) {$/;"	r
bufferGuessNormalType	three.js	/^	function bufferGuessNormalType ( material ) {$/;"	r
bufferGuessUVType	three.js	/^	function bufferGuessUVType( material ) {$/;"	r
bufferGuessVertexColorType	three.js	/^	function bufferGuessVertexColorType( material ) {$/;"	r
buffersNeedUpdate	three.js	/^			geometry.buffersNeedUpdate = false;$/;"	r
buffersNeedUpdate	three.js	/^	this.buffersNeedUpdate = false;$/;"	r
buildLidFaces	three.js	/^	function buildLidFaces() {$/;"	r
buildPlane	three.js	/^	function buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {$/;"	r
buildProgram	three.js	/^	function buildProgram ( shaderID, fragmentShader, vertexShader, uniforms, attributes, defines, parameters ) {$/;"	r
buildSideFaces	three.js	/^	function buildSideFaces() {$/;"	r
bump	three.js	/^	bump: {$/;"	r
bumpMap	three.js	/^			bumpMap: !!material.bumpMap,$/;"	r
bumpMap	three.js	/^	material.bumpMap = this.bumpMap;$/;"	r
bumpMap	three.js	/^	this.bumpMap = null;$/;"	r
bumpScale	three.js	/^			mpars.bumpScale = m.mapBumpScale;$/;"	r
bumpScale	three.js	/^	material.bumpScale = this.bumpScale;$/;"	r
bumpScale	three.js	/^	this.bumpScale = 1;$/;"	r
bumpmap_pars_fragment	three.js	/^	bumpmap_pars_fragment: [$/;"	r
bx	three.js	/^			bx = geometry.vertices[ indexB ].x,$/;"	r
bx	three.js	/^		bx = contour[ verts[ v ] ].x;$/;"	r
by	three.js	/^			by = geometry.vertices[ indexB ].y,$/;"	r
by	three.js	/^		by = contour[ verts[ v ] ].y;$/;"	r
byteArray	three.js	/^				var byteArray = new Uint8Array( buffer, dataOffset, dataLength );$/;"	r
bz	three.js	/^			bz = geometry.vertices[ indexB ].z,$/;"	r
c	three.js	/^							c = index + 2;$/;"	r
c	three.js	/^							c = index + geometry.attributes.index.array[ i + 2 ];$/;"	r
c	three.js	/^						c = vertices[ face.c ];$/;"	r
c	three.js	/^					c = layeroffset + k + slen2,$/;"	r
c	three.js	/^				c = 0;$/;"	r
c	three.js	/^				c = verts[ w ];$/;"	r
c	three.js	/^				face.c = changes[ face.c ];$/;"	r
c	three.js	/^				face.c = faces[ offset ++ ];$/;"	r
c	three.js	/^				triA.c = d;$/;"	r
c	three.js	/^				triB.c = d;$/;"	r
c	three.js	/^				var c = ( ix + 1 ) + gridX1 * ( iy + 1 );$/;"	r
c	three.js	/^				var c = face.c;$/;"	r
c	three.js	/^			 c, 0, s, 0,$/;"	r
c	three.js	/^			c = (i + 1) * sliceCount + j;$/;"	r
c	three.js	/^			c = this.grid[ ip ][ jp ];$/;"	r
c	three.js	/^			c, -s, 0, 0,$/;"	r
c	three.js	/^			var c = ( ix + 1 ) + gridX1 * ( iz + 1 );$/;"	r
c	three.js	/^			var c = ( this.tubularSegments + 1 ) * ( j - 1 ) + i;$/;"	r
c	three.js	/^			var c = 1 - a - b;$/;"	r
c	three.js	/^			var c = base + 1 + np;$/;"	r
c	three.js	/^			var c = this.grid[ ip ][ jp ];$/;"	r
c	three.js	/^		c = ( u1 * x2 - u2 * x1 ) * idet;$/;"	r
c	three.js	/^		var c = - ( far + near ) \/ ( far - near );$/;"	r
c	three.js	/^		var c = Math.cos( angle );$/;"	r
c	three.js	/^		var c = Math.cos( phi ),$/;"	r
c	three.js	/^		var c = Math.cos( theta ), s = Math.sin( theta );$/;"	r
c	three.js	/^		var c = Math.cos( y ), d = Math.sin( y );$/;"	r
c	three.js	/^		var c = [];$/;"	r
c	three.js	/^		var c = diff.lengthSq();$/;"	r
c	three.js	/^		var c = face[ 2 ] + shapesOffset;$/;"	r
c	three.js	/^		var c = prepare( that.vertices[ face.c ] );$/;"	r
c	three.js	/^	this.c = ( c !== undefined ) ? c : new THREE.Vector3();$/;"	r
c	three.js	/^	this.c = c;$/;"	r
c	three.js	/^	var c = [], v3 = [],$/;"	r
c	three.js	/^	var c = [], v3 = { x: 0, y: 0, z: 0 },$/;"	r
c	three.js	/^	var c = [];$/;"	r
c	three.js	/^        var c = [];$/;"	r
c1	three.js	/^					c1 = faceColor;$/;"	r
c1	three.js	/^					c1 = vertexColors[ 0 ];$/;"	r
c1	three.js	/^		c1, c2, c3, c4,$/;"	r
c1	three.js	/^		var c1 = Math.cos( euler._x \/ 2 );$/;"	r
c2	three.js	/^					c2 = faceColor;$/;"	r
c2	three.js	/^					c2 = vertexColors[ 1 ];$/;"	r
c2	three.js	/^		var c2 = Math.cos( euler._y \/ 2 );$/;"	r
c3	three.js	/^					c3 = faceColor;$/;"	r
c3	three.js	/^					c3 = vertexColors[ 2 ];$/;"	r
c3	three.js	/^		var c3 = Math.cos( euler._z \/ 2 );$/;"	r
c4	three.js	/^					c4 = faceColor;$/;"	r
c4	three.js	/^					c4 = vertexColors[ 3 ];$/;"	r
cCROSSap	three.js	/^			cCROSSap = cX*apy - cY*apx;$/;"	r
cCROSSap	three.js	/^		var cCROSSap, bCROSScp, aCROSSbp;$/;"	r
cX	three.js	/^		cX = bx - ax;  cY = by - ay;$/;"	r
cache	three.js	/^	var cache = [];$/;"	r
cacheArcLengths	three.js	/^	this.cacheArcLengths = cache;$/;"	r
cacheAttributeLocations	three.js	/^	function cacheAttributeLocations ( program, identifiers ) {$/;"	r
cacheLengths	three.js	/^	this.cacheLengths = lengths;$/;"	r
cacheUniformLocations	three.js	/^	function cacheUniformLocations ( program, identifiers ) {$/;"	r
cal	three.js	/^						cal = customAttribute.value.length;$/;"	r
cal	three.js	/^					cal = customAttribute.value.length;$/;"	r
calculateLight	three.js	/^	function calculateLight( position, normal, color ) {$/;"	r
calculateLights	three.js	/^	function calculateLights() {$/;"	r
callback	three.js	/^THREE.JSONLoader.prototype.load = function ( url, callback, texturePath ) {$/;"	r
callbackFinished	three.js	/^	parse: function ( json, callbackFinished, url ) {$/;"	r
callbackProgress	three.js	/^	this.callbackProgress = function () {};$/;"	r
callbackSync	three.js	/^	this.callbackSync = function () {};$/;"	r
callbackTexture	three.js	/^		var callbackTexture = function ( count ) {$/;"	r
calls	three.js	/^			calls: 0,$/;"	r
calls	three.js	/^		_this.info.render.calls = 0;$/;"	r
camera	three.js	/^							camera = new THREE.OrthographicCamera( objJSON.left, objJSON.right, objJSON.top, objJSON.bottom, objJSON.near, objJSON.far );$/;"	r
camera	three.js	/^							camera = new THREE.PerspectiveCamera( objJSON.fov, objJSON.aspect, objJSON.near, objJSON.far );$/;"	r
camera	three.js	/^			plugins[ i ].render( scene, camera, _currentWidth, _currentHeight );$/;"	r
camera	three.js	/^			renderObjectsImmediate( scene.__webglObjectsImmediate, "", camera, lights, fog, false, material );$/;"	r
camera	three.js	/^			renderObjectsImmediate( scene.__webglObjectsImmediate, "opaque", camera, lights, fog, false, material );$/;"	r
camera	three.js	/^			renderObjectsImmediate( scene.__webglObjectsImmediate, "transparent", camera, lights, fog, true, material );$/;"	r
camera	three.js	/^		_renderData = _projector.projectScene( scene, camera, this.sortObjects, this.sortElements );$/;"	r
camera	three.js	/^	this.camera = camera;$/;"	r
camera	three.js	/^	this.projectScene = function ( scene, camera, sortObjects, sortElements ) {$/;"	r
camera	three.js	/^	this.render = function ( scene, camera, renderTarget, forceClear ) {$/;"	r
camera	three.js	/^	this.render = function ( scene, camera, viewportWidth, viewportHeight ) {$/;"	r
camera	three.js	/^	var camera = new THREE.Camera();$/;"	r
cameraHelper	three.js	/^				light.cameraHelper = new THREE.CameraHelper( light.shadowCamera );$/;"	r
cameraNX	three.js	/^		renderer.render( scene, cameraNX, renderTarget );$/;"	r
cameraNX	three.js	/^	var cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );$/;"	r
cameraNY	three.js	/^		renderer.render( scene, cameraNY, renderTarget );$/;"	r
cameraNY	three.js	/^	var cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );$/;"	r
cameraNZ	three.js	/^		renderer.render( scene, cameraNZ, renderTarget );$/;"	r
cameraNZ	three.js	/^	var cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );$/;"	r
cameraO	three.js	/^	this.cameraO = new THREE.OrthographicCamera( width \/ - 2, width \/ 2, height \/ 2, height \/ - 2, 	orthoNear, orthoFar );$/;"	r
cameraP	three.js	/^	this.cameraP = new THREE.PerspectiveCamera( fov, width \/ height, near, far );$/;"	r
cameraPX	three.js	/^		renderer.render( scene, cameraPX, renderTarget );$/;"	r
cameraPX	three.js	/^	var cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );$/;"	r
cameraPY	three.js	/^		renderer.render( scene, cameraPY, renderTarget );$/;"	r
cameraPY	three.js	/^	var cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );$/;"	r
cameraPZ	three.js	/^		renderer.render( scene, cameraPZ, renderTarget );$/;"	r
cameraPZ	three.js	/^	var cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );$/;"	r
cameras	three.js	/^			cameras: {},$/;"	r
cancelAnimationFrame	three.js	/^		self.cancelAnimationFrame = function ( id ) { self.clearTimeout( id ) };$/;"	r
cancelAnimationFrame	three.js	/^		self.cancelAnimationFrame = self[ vendors[ x ] + 'CancelAnimationFrame' ] || self[ vendors[ x ] + 'CancelRequestAnimationFrame' ];$/;"	r
canvas	three.js	/^				var canvas = document.createElement( 'canvas' )$/;"	r
canvas	three.js	/^		var canvas = document.createElement( 'canvas' );$/;"	r
castShadow	three.js	/^							object.castShadow = objJSON.castShadow;$/;"	r
castShadow	three.js	/^		object.castShadow = this.castShadow;$/;"	r
castShadow	three.js	/^		virtualLight.castShadow = true;$/;"	r
castShadow	three.js	/^	light.castShadow = this.castShadow;$/;"	r
castShadow	three.js	/^	this.castShadow = false;$/;"	r
cb	three.js	/^			cb = new THREE.Vector3(),$/;"	r
cb	three.js	/^			var cb = new THREE.Vector3(), ab = new THREE.Vector3(),$/;"	r
cb	three.js	/^		var cb = new THREE.Vector3(), ab = new THREE.Vector3();$/;"	r
ce	three.js	/^			var ce = c * e, cf = c * f, de = d * e, df = d * f;$/;"	r
cells	three.js	/^		var cells = Math.pow(4, detail);$/;"	r
center	three.js	/^			result.center = this.center();$/;"	r
center	three.js	/^		var center = new THREE.Vector3();$/;"	r
center	three.js	/^		var center = sphere.center;$/;"	r
center	three.js	/^	center = new THREE.Vector3(), centerUV = new THREE.Vector2( 0.5, 0.5 );$/;"	r
center	three.js	/^	center: function ( geometry ) {$/;"	r
center	three.js	/^	center: function ( optionalTarget ) {$/;"	r
center	three.js	/^	this.center = ( center !== undefined ) ? center : new THREE.Vector3();$/;"	r
center	three.js	/^	var center = new THREE.Vector3(), uvs = [], normals = [];$/;"	r
center	three.js	/^THREE.SpriteAlignment.center = new THREE.Vector2( 0, 0 );$/;"	r
centerLeft	three.js	/^THREE.SpriteAlignment.centerLeft = new THREE.Vector2( 1, 0 );$/;"	r
centerRight	three.js	/^THREE.SpriteAlignment.centerRight = new THREE.Vector2( -1, 0 );$/;"	r
centroid	three.js	/^		centroid: sum.divideScalar( il )$/;"	r
centroid	three.js	/^	this.centroid = new THREE.Vector3();$/;"	r
centroidModel	three.js	/^	this.centroidModel = new THREE.Vector3();$/;"	r
characterPts	three.js	/^		var characterPts = [], allPts = [];$/;"	r
chars	three.js	/^			chars = String( text ).split( '' ),$/;"	r
chars	three.js	/^		var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');$/;"	r
checkConnection	three.js	/^THREE.CurvePath.prototype.checkConnection = function() {$/;"	r
chf	three.js	/^					chf = chunk_faces3[ f ];$/;"	r
chf	three.js	/^					chf = chunk_faces4[ f ];$/;"	r
child	three.js	/^				child = child.getObjectById( id, recursive );$/;"	r
child	three.js	/^				child = child.getObjectByName( name, recursive );$/;"	r
child	three.js	/^				var child = this.children[ i ];$/;"	r
child	three.js	/^			var child = this.children[ i ];$/;"	r
child	three.js	/^	var child, i, l = this.children.length;$/;"	r
children	three.js	/^	this.children = [];$/;"	r
chunk	three.js	/^			chunk = "#define " + d + " " + value;$/;"	r
chunkLengths	three.js	/^			chunkLengths = [],$/;"	r
chunk_faces3	three.js	/^		chunk_faces3 = geometryGroup.faces3,$/;"	r
chunk_faces4	three.js	/^		chunk_faces4 = geometryGroup.faces4,$/;"	r
chunks	three.js	/^		var chunks = [];$/;"	r
chunks	three.js	/^		var chunks = morph.name.match( pattern );$/;"	r
chunks	three.js	/^		var chunks = string.split( "\\n" );$/;"	r
chunks	three.js	/^		var value, chunk, chunks = [];$/;"	r
cl	three.js	/^					for ( c = 0, cl = faceVertexUvs.length; c < cl; c ++ ) {$/;"	r
cl	three.js	/^				for ( c = 0, cl = srcColors.length; c < cl; c += 3 ) {$/;"	r
cl	three.js	/^		cl = colors.length,$/;"	r
clamp	three.js	/^		function clamp( x ) {$/;"	r
clamp	three.js	/^	clamp: function ( min, max ) {$/;"	r
clamp	three.js	/^	clamp: function ( x, a, b ) {$/;"	r
clampBottom	three.js	/^	clampBottom: function ( x, a ) {$/;"	r
clampPoint	three.js	/^	clampPoint: function ( point, optionalTarget ) {$/;"	r
clampToLine	three.js	/^	closestPointToPoint: function ( point, clampToLine, optionalTarget ) {$/;"	r
clampToMaxSize	three.js	/^	function clampToMaxSize ( image, maxSize ) {$/;"	r
clampedPoint	three.js	/^			var clampedPoint = v1.copy( point ).clamp( this.min, this.max );$/;"	r
clear	three.js	/^	this.clear = function ( color, depth, stencil ) {$/;"	r
clear	three.js	/^	this.clear = function () {$/;"	r
clearAlpha	three.js	/^		clearAlpha = _renderer.getClearAlpha();$/;"	r
clearColor	three.js	/^		var clearColor = _renderer.getClearColor(),$/;"	r
clearCustomAttributes	three.js	/^	function clearCustomAttributes( material ) {$/;"	r
clearTarget	three.js	/^	this.clearTarget = function ( renderTarget, color, depth, stencil ) {$/;"	r
clen	three.js	/^		cont, clen = contour.length;$/;"	r
clen	three.js	/^	var cont, clen = contour.length;$/;"	r
clipImage	three.js	/^	function clipImage( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image ) {$/;"	r
clipLine	three.js	/^	function clipLine( s1, s2 ) {$/;"	r
clone	three.js	/^	clone: function ( material ) {$/;"	r
clone	three.js	/^	clone: function ( object, recursive ) {$/;"	r
clone	three.js	/^	clone: function ( texture ) {$/;"	r
clone	three.js	/^	clone: function ( uniforms_src ) {$/;"	r
clone	three.js	/^	clone: function () {$/;"	r
clone	three.js	/^THREE.AmbientLight.prototype.clone = function () {$/;"	r
clone	three.js	/^THREE.CompressedTexture.prototype.clone = function () {$/;"	r
clone	three.js	/^THREE.DataTexture.prototype.clone = function () {$/;"	r
clone	three.js	/^THREE.DirectionalLight.prototype.clone = function () {$/;"	r
clone	three.js	/^THREE.Fog.prototype.clone = function () {$/;"	r
clone	three.js	/^THREE.FogExp2.prototype.clone = function () {$/;"	r
clone	three.js	/^THREE.HemisphereLight.prototype.clone = function () {$/;"	r
clone	three.js	/^THREE.LOD.prototype.clone = function () {$/;"	r
clone	three.js	/^THREE.Light.prototype.clone = function ( light ) {$/;"	r
clone	three.js	/^THREE.Line.prototype.clone = function ( object ) {$/;"	r
clone	three.js	/^THREE.LineBasicMaterial.prototype.clone = function () {$/;"	r
clone	three.js	/^THREE.LineDashedMaterial.prototype.clone = function () {$/;"	r
clone	three.js	/^THREE.Mesh.prototype.clone = function ( object ) {$/;"	r
clone	three.js	/^THREE.MeshBasicMaterial.prototype.clone = function () {$/;"	r
clone	three.js	/^THREE.MeshDepthMaterial.prototype.clone = function () {$/;"	r
clone	three.js	/^THREE.MeshFaceMaterial.prototype.clone = function () {$/;"	r
clone	three.js	/^THREE.MeshLambertMaterial.prototype.clone = function () {$/;"	r
clone	three.js	/^THREE.MeshNormalMaterial.prototype.clone = function () {$/;"	r
clone	three.js	/^THREE.MeshPhongMaterial.prototype.clone = function () {$/;"	r
clone	three.js	/^THREE.MorphAnimMesh.prototype.clone = function ( object ) {$/;"	r
clone	three.js	/^THREE.Particle.prototype.clone = function ( object ) {$/;"	r
clone	three.js	/^THREE.ParticleBasicMaterial.prototype.clone = function () {$/;"	r
clone	three.js	/^THREE.ParticleCanvasMaterial.prototype.clone = function () {$/;"	r
clone	three.js	/^THREE.ParticleSystem.prototype.clone = function ( object ) {$/;"	r
clone	three.js	/^THREE.PointLight.prototype.clone = function () {$/;"	r
clone	three.js	/^THREE.Ribbon.prototype.clone = function ( object ) {$/;"	r
clone	three.js	/^THREE.Scene.prototype.clone = function ( object ) {$/;"	r
clone	three.js	/^THREE.ShaderMaterial.prototype.clone = function () {$/;"	r
clone	three.js	/^THREE.SkinnedMesh.prototype.clone = function ( object ) {$/;"	r
clone	three.js	/^THREE.SpotLight.prototype.clone = function () {$/;"	r
clone	three.js	/^THREE.Sprite.prototype.clone = function ( object ) {$/;"	r
clone	three.js	/^THREE.SpriteMaterial.prototype.clone = function () {$/;"	r
closePath	three.js	/^THREE.CurvePath.prototype.closePath = function() {$/;"	r
closed	three.js	/^	this.closed = closed || false;$/;"	r
closestPointToPoint	three.js	/^	closestPointToPoint: function ( point, clampToLine, optionalTarget ) {$/;"	r
closestPointToPoint	three.js	/^	closestPointToPoint: function ( point, optionalTarget ) {$/;"	r
closestPointToPointParameter	three.js	/^	closestPointToPointParameter: function() {$/;"	r
code	three.js	/^		_programs.push( { program: program, code: code, usedTimes: 1 } );$/;"	r
code	three.js	/^		code = chunks.join();$/;"	r
color	three.js	/^							color: color,				\/\/ color$/;"	r
color	three.js	/^					_face.color = face.color;$/;"	r
color	three.js	/^					color = colors[ c ];$/;"	r
color	three.js	/^					color = new THREE.Color( 0xffaa00 );$/;"	r
color	three.js	/^					color = new THREE.Color( colors[ colorIndex ] );$/;"	r
color	three.js	/^					color: json.color,$/;"	r
color	three.js	/^				color = colors[ c ];$/;"	r
color	three.js	/^				color = colors[ sortArray[c][1] ];$/;"	r
color	three.js	/^				color = faceVertexColors[ j ];$/;"	r
color	three.js	/^				color = new THREE.Color( colors[ colorIndex ] );$/;"	r
color	three.js	/^				face.color = color;$/;"	r
color	three.js	/^			color = fogJSON.color;$/;"	r
color	three.js	/^			color = light.color;$/;"	r
color	three.js	/^			mpars.color = m.DbgColor;$/;"	r
color	three.js	/^			mpars.color = rgb2hex( m.colorDiffuse );$/;"	r
color	three.js	/^			var color = \/^\\#([0-9a-f])([0-9a-f])([0-9a-f])$\/i.exec( style );$/;"	r
color	three.js	/^			var color = \/^\\#([0-9a-f]{6})$\/i.exec( style );$/;"	r
color	three.js	/^			var color = \/^rgb\\((\\d+),(\\d+),(\\d+)\\)$\/i.exec( style );$/;"	r
color	three.js	/^			var color = \/^rgb\\((\\d+)\\%,(\\d+)\\%,(\\d+)\\%\\)$\/i.exec( style );$/;"	r
color	three.js	/^		\/\/ normal, color, material$/;"	r
color	three.js	/^		_lensFlare.uniforms.color          = _gl.getUniformLocation( _lensFlare.program, "color" );$/;"	r
color	three.js	/^		_sprite.uniforms.color                = _gl.getUniformLocation( _sprite.program, "color" );$/;"	r
color	three.js	/^		color, skyColor, groundColor,$/;"	r
color	three.js	/^		e.style.color = "#fff";$/;"	r
color	three.js	/^		geometry.colors.push( color, color, color, color );$/;"	r
color	three.js	/^		var color = i === 0 ? this.color1 : this.color2;$/;"	r
color	three.js	/^	this.clearTarget = function ( renderTarget, color, depth, stencil ) {$/;"	r
color	three.js	/^	this.color = color instanceof THREE.Color ? color : new THREE.Color();$/;"	r
color	three.js	/^	this.color = new THREE.Color( 0xffffff ); \/\/ diffuse$/;"	r
color	three.js	/^	this.color = new THREE.Color( 0xffffff ); \/\/ emissive$/;"	r
color	three.js	/^	this.color = new THREE.Color( 0xffffff );$/;"	r
color	three.js	/^	this.color = new THREE.Color( hex );$/;"	r
color	three.js	/^	this.color = null;$/;"	r
color	three.js	/^	var color = hex || 0x0000ff;$/;"	r
color	three.js	/^	var color = hex || 0x888888;$/;"	r
color	three.js	/^	var color = hex || 0xff0000;$/;"	r
color	three.js	/^	var color = hex || 0xffff00;$/;"	r
color1	three.js	/^	this.color1 = new THREE.Color( 0x444444 );$/;"	r
color2	three.js	/^	function getGradientTexture( color1, color2, color3, color4 ) {$/;"	r
color2	three.js	/^	this.color2 = new THREE.Color( 0x888888 );$/;"	r
colorArray	three.js	/^				_gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );$/;"	r
colorArray	three.js	/^			_gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );$/;"	r
colorArray	three.js	/^		colorArray = geometry.__colorArray,$/;"	r
colorArray	three.js	/^		colorArray = geometryGroup.__colorArray,$/;"	r
colorIndex	three.js	/^					colorIndex = faces[ offset ++ ];$/;"	r
colorIndex	three.js	/^				colorIndex = faces[ offset ++ ];$/;"	r
colorIndex	three.js	/^		colorIndex, normalIndex, uvIndex, materialIndex,$/;"	r
colorStyle1	three.js	/^				var colorStyle1 = element.vertexColors[0].getStyle();$/;"	r
colorStyle2	three.js	/^				var colorStyle2 = element.vertexColors[1].getStyle();$/;"	r
color_fragment	three.js	/^	color_fragment: [$/;"	r
color_pars_fragment	three.js	/^	color_pars_fragment: [$/;"	r
color_pars_vertex	three.js	/^	color_pars_vertex: [$/;"	r
color_vertex	three.js	/^	color_vertex: [$/;"	r
colors	three.js	/^		colors = geometry.colors,$/;"	r
colors	three.js	/^		colors = json.colors,$/;"	r
colors	three.js	/^	this.colors = [ new THREE.Color(), new THREE.Color() ];$/;"	r
colors	three.js	/^	this.colors = [];  \/\/ one-to-one vertex colors, used in ParticleSystem, Line and Ribbon$/;"	r
colorsNeedUpdate	three.js	/^						geometry.colorsNeedUpdate = true;$/;"	r
colorsNeedUpdate	three.js	/^					geometry.colorsNeedUpdate = true;$/;"	r
colorsNeedUpdate	three.js	/^			geometry.colorsNeedUpdate = false;$/;"	r
colorsNeedUpdate	three.js	/^		this.lightSphere.geometry.colorsNeedUpdate = true;$/;"	r
colorsNeedUpdate	three.js	/^	this.colorsNeedUpdate = false;$/;"	r
colorsNeedUpdate	three.js	/^	this.geometry.colorsNeedUpdate = true;$/;"	r
cols	three.js	/^		var cols = Math.pow(2, detail);$/;"	r
column2	three.js	/^			\/\/	RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)$/;"	r
combine	three.js	/^	material.combine = this.combine;$/;"	r
combine	three.js	/^	this.combine = THREE.MultiplyOperation;$/;"	r
common	three.js	/^	common: {$/;"	r
comparison	three.js	/^		comparison = arcLengths[ i ] - targetArcLength;$/;"	r
comparison	three.js	/^	var low = 0, high = il - 1, comparison;$/;"	r
compose	three.js	/^	compose: function ( position, quaternion, scale ) {$/;"	r
computeBoundingBox	three.js	/^	computeBoundingBox: function () {$/;"	r
computeBoundingSphere	three.js	/^	computeBoundingSphere: function () {$/;"	r
computeCentroids	three.js	/^	computeCentroids: function () {$/;"	r
computeFaceNormals	three.js	/^	computeFaceNormals: function () {$/;"	r
computeLineDistances	three.js	/^	computeLineDistances: function ( ) {$/;"	r
computeMorphNormals	three.js	/^	computeMorphNormals: function () {$/;"	r
computeTangents	three.js	/^	computeTangents: function () {$/;"	r
computeVertexNormals	three.js	/^	computeVertexNormals: function ( areaWeighted ) {$/;"	r
computeVertexNormals	three.js	/^	computeVertexNormals: function () {$/;"	r
cone	three.js	/^	this.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: hex } ) );$/;"	r
cone	three.js	/^	this.cone = new THREE.Mesh( geometry, material );$/;"	r
coneGeometry	three.js	/^	var coneGeometry = new THREE.CylinderGeometry( 0, 0.05, 0.25, 5, 1 );$/;"	r
coneLength	three.js	/^		var coneLength = this.light.distance ? this.light.distance : 10000;$/;"	r
coneWidth	three.js	/^		this.cone.scale.set( coneWidth, coneWidth, coneLength );$/;"	r
coneWidth	three.js	/^		var coneWidth = coneLength * Math.tan( this.light.angle );$/;"	r
conjugate	three.js	/^	conjugate: function () {$/;"	r
console	three.js	/^self.console = self.console || {$/;"	r
constant	three.js	/^		this.constant = - point.dot( this.normal );	\/\/ must be this.normal, not normal, as this.normal is normalized$/;"	r
constant	three.js	/^		this.constant = constant;$/;"	r
constant	three.js	/^		this.constant = plane.constant;$/;"	r
constant	three.js	/^		this.constant = this.constant - offset.dot( this.normal );$/;"	r
constant	three.js	/^		this.constant = w;$/;"	r
constant	three.js	/^	this.constant = ( constant !== undefined ) ? constant : 0;$/;"	r
constantAttenuation	three.js	/^	this.constantAttenuation = 1.5;$/;"	r
constructor	three.js	/^	constructor: THREE.Box2,$/;"	r
constructor	three.js	/^	constructor: THREE.Box3,$/;"	r
constructor	three.js	/^	constructor: THREE.BufferGeometry,$/;"	r
constructor	three.js	/^	constructor: THREE.Clock,$/;"	r
constructor	three.js	/^	constructor: THREE.Color,$/;"	r
constructor	three.js	/^	constructor: THREE.Euler,$/;"	r
constructor	three.js	/^	constructor: THREE.EventDispatcher,$/;"	r
constructor	three.js	/^	constructor: THREE.Face3,$/;"	r
constructor	three.js	/^	constructor: THREE.Face4,$/;"	r
constructor	three.js	/^	constructor: THREE.Frustum,$/;"	r
constructor	three.js	/^	constructor: THREE.Geometry,$/;"	r
constructor	three.js	/^	constructor: THREE.GeometryLoader,$/;"	r
constructor	three.js	/^	constructor: THREE.ImageLoader,$/;"	r
constructor	three.js	/^	constructor: THREE.Line3,$/;"	r
constructor	three.js	/^	constructor: THREE.Loader,$/;"	r
constructor	three.js	/^	constructor: THREE.Material,$/;"	r
constructor	three.js	/^	constructor: THREE.MaterialLoader,$/;"	r
constructor	three.js	/^	constructor: THREE.Matrix3,$/;"	r
constructor	three.js	/^	constructor: THREE.Matrix4,$/;"	r
constructor	three.js	/^	constructor: THREE.Object3D,$/;"	r
constructor	three.js	/^	constructor: THREE.ObjectLoader,$/;"	r
constructor	three.js	/^	constructor: THREE.Plane,$/;"	r
constructor	three.js	/^	constructor: THREE.Quaternion,$/;"	r
constructor	three.js	/^	constructor: THREE.Ray,$/;"	r
constructor	three.js	/^	constructor: THREE.SceneLoader,$/;"	r
constructor	three.js	/^	constructor: THREE.Sphere,$/;"	r
constructor	three.js	/^	constructor: THREE.Texture,$/;"	r
constructor	three.js	/^	constructor: THREE.TextureLoader,$/;"	r
constructor	three.js	/^	constructor: THREE.Triangle,$/;"	r
constructor	three.js	/^	constructor: THREE.Vector2,$/;"	r
constructor	three.js	/^	constructor: THREE.Vector3,$/;"	r
constructor	three.js	/^	constructor: THREE.Vector4,$/;"	r
constructor	three.js	/^	constructor: THREE.WebGLRenderTarget,$/;"	r
constructor	three.js	/^	constructor: THREE.XHRLoader,$/;"	r
cont	three.js	/^		cont, clen = contour.length;$/;"	r
cont	three.js	/^	var cont, clen = contour.length;$/;"	r
containsBox	three.js	/^	containsBox: function ( box ) {$/;"	r
containsPoint	three.js	/^	containsPoint: function ( point ) {$/;"	r
containsPoint	three.js	/^THREE.Triangle.containsPoint = function() {$/;"	r
context	three.js	/^				var context = canvas.getContext( '2d' );$/;"	r
context	three.js	/^		var context = canvas.getContext( '2d' );$/;"	r
context	three.js	/^	this.context = _gl;$/;"	r
context	three.js	/^	this.context = null;$/;"	r
continue	three.js	/^								continue;$/;"	r
continue	three.js	/^							continue;$/;"	r
continue	three.js	/^					continue;$/;"	r
continue	three.js	/^				continue;$/;"	r
continue	three.js	/^			continue;$/;"	r
contour	three.js	/^	var contour = vertices; \/\/ vertices has all points but contour has only points of circumference$/;"	r
contour	three.js	/^	var contour = vertices;$/;"	r
contourCentroid	three.js	/^			\/\/vert = scalePt( contour[ i ], contourCentroid, bs, false );$/;"	r
contourIndex1	three.js	/^	                              contourIndex1, contourIndex2 ) {$/;"	r
contourMovements	three.js	/^	var contourMovements = [];$/;"	r
convertGammaToLinear	three.js	/^	convertGammaToLinear: function () {$/;"	r
convertLinearToGamma	three.js	/^	convertLinearToGamma: function () {$/;"	r
coords	three.js	/^			coords = [];$/;"	r
coplanarPoint	three.js	/^	coplanarPoint: function ( optionalTarget ) {$/;"	r
copy	three.js	/^	copy: function ( box ) {$/;"	r
copy	three.js	/^	copy: function ( color ) {$/;"	r
copy	three.js	/^	copy: function ( euler ) {$/;"	r
copy	three.js	/^	copy: function ( frustum ) {$/;"	r
copy	three.js	/^	copy: function ( line ) {$/;"	r
copy	three.js	/^	copy: function ( m ) {$/;"	r
copy	three.js	/^	copy: function ( plane ) {$/;"	r
copy	three.js	/^	copy: function ( quaternion ) {$/;"	r
copy	three.js	/^	copy: function ( ray ) {$/;"	r
copy	three.js	/^	copy: function ( sphere ) {$/;"	r
copy	three.js	/^	copy: function ( triangle ) {$/;"	r
copy	three.js	/^	copy: function ( v ) {$/;"	r
copy	three.js	/^THREE.RenderableVertex.prototype.copy = function ( vertex ) {$/;"	r
copyGammaToLinear	three.js	/^	copyGammaToLinear: function ( color ) {$/;"	r
copyLinearToGamma	three.js	/^	copyLinearToGamma: function ( color ) {$/;"	r
copyPosition	three.js	/^	copyPosition: function ( m ) {$/;"	r
correctUV	three.js	/^	function correctUV( uv, vector, azimuth ) {$/;"	r
cosHalfTheta	three.js	/^			cosHalfTheta = -cosHalfTheta;$/;"	r
cosHalfTheta	three.js	/^		var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;$/;"	r
count	three.js	/^					var count = geometry.offsets[ oi ].count;$/;"	r
count	three.js	/^					var count = offsets[ j ].count;$/;"	r
count	three.js	/^				count = 2 * nv;$/;"	r
count	three.js	/^				var count = textureJSON.url.length;$/;"	r
count	three.js	/^			var count = offsets[ j ].count;$/;"	r
count	three.js	/^		object.count = 0;$/;"	r
count	three.js	/^		var count = 2 * nv;   \/* error detection *\/$/;"	r
counter_models	three.js	/^			counter_models, counter_textures,$/;"	r
counter_models	three.js	/^		counter_models = 0;$/;"	r
counter_textures	three.js	/^		counter_textures = 0;$/;"	r
cpx	three.js	/^					cpx  = outline[ i++ ] *  scaleX + offset;$/;"	r
cpx	three.js	/^					cpx  = outline[ i++ ] * scaleX + offset;$/;"	r
cpx	three.js	/^			cpx  = args[ 2 ];$/;"	r
cpx	three.js	/^			cpx  = args[ 4 ];$/;"	r
cpx	three.js	/^			cpx = px - cx;  cpy = py - cy;$/;"	r
cpx	three.js	/^	var cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,$/;"	r
cpx0	three.js	/^							var tx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );$/;"	r
cpx0	three.js	/^							var tx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );$/;"	r
cpx0	three.js	/^						cpx0 = laste.x;$/;"	r
cpx0	three.js	/^				cpx0 = laste.x;$/;"	r
cpx0	three.js	/^				cpx0 = laste[ laste.length - 2 ];$/;"	r
cpx0	three.js	/^				tx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );$/;"	r
cpx0	three.js	/^				tx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );$/;"	r
cpx1	three.js	/^					cpx1 = outline[ i++ ] *  scaleX + offset;$/;"	r
cpx1	three.js	/^					cpx1 = outline[ i++ ] * scaleX + offset;$/;"	r
cpx1	three.js	/^			cpx1 = args[ 0 ];$/;"	r
cpx2	three.js	/^					cpx2 = outline[ i++ ] *  scaleX + offset;$/;"	r
cpx2	three.js	/^			cpx2 = args[ 2 ];$/;"	r
cpy	three.js	/^					cpy  = outline[ i++ ] *  scaleY;$/;"	r
cpy	three.js	/^					cpy  = outline[ i++ ] * scaleY;$/;"	r
cpy	three.js	/^					path.bezierCurveTo( cpx, cpy, cpx1, cpy1, cpx2, cpy2 );$/;"	r
cpy	three.js	/^			cpy  = args[ 3 ];$/;"	r
cpy	three.js	/^			cpy  = args[ 5 ];$/;"	r
cpy0	three.js	/^							var ty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );$/;"	r
cpy0	three.js	/^							var ty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );$/;"	r
cpy0	three.js	/^						cpy0 = laste.y;$/;"	r
cpy0	three.js	/^				cpy0 = laste.y;$/;"	r
cpy0	three.js	/^				cpy0 = laste[ laste.length - 1 ];$/;"	r
cpy0	three.js	/^				ty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );$/;"	r
cpy0	three.js	/^				ty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );$/;"	r
cpy1	three.js	/^					cpy1 = outline[ i++ ] * -scaleY;$/;"	r
cpy1	three.js	/^					cpy1 = outline[ i++ ] * scaleY;$/;"	r
cpy1	three.js	/^					path.quadraticCurveTo(cpx1, cpy1, cpx, cpy);$/;"	r
cpy1	three.js	/^			cpy1 = args[ 1 ];$/;"	r
cpy2	three.js	/^					cpy2 = outline[ i++ ] * -scaleY;$/;"	r
cpy2	three.js	/^			cpy2 = args[ 3 ];$/;"	r
create	three.js	/^THREE.Curve.create = function ( constructor, getPointFunc ) {$/;"	r
createAnimation	three.js	/^THREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {$/;"	r
createGeometry	three.js	/^THREE.CurvePath.prototype.createGeometry = function( points ) {$/;"	r
createLineBuffers	three.js	/^	function createLineBuffers ( geometry ) {$/;"	r
createMaterial	three.js	/^	createMaterial: function ( m, texturePath ) {$/;"	r
createMeshBuffers	three.js	/^	function createMeshBuffers ( geometryGroup ) {$/;"	r
createMultiMaterialObject	three.js	/^	createMultiMaterialObject: function ( geometry, materials ) {$/;"	r
createParticleBuffers	three.js	/^	function createParticleBuffers ( geometry ) {$/;"	r
createPointsGeometry	three.js	/^THREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {$/;"	r
createProgram	three.js	/^	function createProgram ( shader, precision ) {$/;"	r
createRibbonBuffers	three.js	/^	function createRibbonBuffers ( geometry ) {$/;"	r
createSpacedPointsGeometry	three.js	/^THREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {$/;"	r
createVirtualLight	three.js	/^	function createVirtualLight( light, cascade ) {$/;"	r
create_callback_embed	three.js	/^		function create_callback_embed( id ) {$/;"	r
create_callback_geometry	three.js	/^		function create_callback_geometry( id ) {$/;"	r
create_callback_hierachy	three.js	/^		function create_callback_hierachy( id, parent, material, obj ) {$/;"	r
create_texture	three.js	/^		function create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {$/;"	r
cross	three.js	/^		var cross = function ( a, b ) {$/;"	r
cross	three.js	/^	cross: function ( v, w ) {$/;"	r
crossOrigin	three.js	/^			cubeImage.crossOrigin = this.crossOrigin;$/;"	r
crossOrigin	three.js	/^			image.crossOrigin = _this.crossOrigin;$/;"	r
crossOrigin	three.js	/^		loader.crossOrigin = this.crossOrigin;$/;"	r
crossOrigin	three.js	/^		this.crossOrigin = value;$/;"	r
crossOrigin	three.js	/^	crossOrigin: 'anonymous',$/;"	r
crossVector	three.js	/^	crossVector: function ( vector ) {$/;"	r
crossVectors	three.js	/^	crossVectors: function ( a, b ) {$/;"	r
cs	three.js	/^		var cs = Math.cos( quOverP );$/;"	r
ctx	three.js	/^		var ctx = canvas.getContext( "2d" );$/;"	r
cu	three.js	/^		var cu = Math.cos( u );$/;"	r
cubeImage	three.js	/^				var cubeImage = [];$/;"	r
cubeImage	three.js	/^				var cubeImage = {};$/;"	r
cubeImage	three.js	/^			var cubeImage = new Image();$/;"	r
cubeResolution	three.js	/^	this.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );$/;"	r
cumulativeAreas	three.js	/^			cumulativeAreas = [],$/;"	r
currTime	three.js	/^			var currTime = Date.now(), timeToCall = Math.max( 0, 16 - ( currTime - lastTime ) );$/;"	r
current	three.js	/^		current = this.getPoint ( p \/ divisions );$/;"	r
current	three.js	/^	var current, last = this.getPoint( 0 );$/;"	r
currentCamera	three.js	/^			result.currentCamera = result.cameras[ data.defaults.camera ];$/;"	r
currentFrame	three.js	/^			animation.currentFrame = keyframe;$/;"	r
currentFrame	three.js	/^		currentFrame: 0,$/;"	r
currentKeyframe	three.js	/^		this.currentKeyframe = keyframe;$/;"	r
currentKeyframe	three.js	/^	object.currentKeyframe = this.currentKeyframe;$/;"	r
currentKeyframe	three.js	/^	this.currentKeyframe = 0;$/;"	r
currentPoint	three.js	/^					currentPoint = this.interpolateCatmullRom( this.points, scale );$/;"	r
currentPoint	three.js	/^	var currentPoint, forwardPoint, angle;$/;"	r
currentTime	three.js	/^		currentTime = this.currentTime = this.startTimeMs + currentTime;$/;"	r
currentTime	three.js	/^		this.currentTime = startTimeMS !== undefined ? startTimeMS : 0;$/;"	r
currentTime	three.js	/^	currentTime         = this.currentTime = this.currentTime % this.data.length;$/;"	r
currentTime	three.js	/^	currentTime = this.currentTime = this.currentTime % this.data.length;$/;"	r
currentTime	three.js	/^	this.currentTime = 0;$/;"	r
currentTime	three.js	/^	var currentTime, unloopedCurrentTime;$/;"	r
currentValue	three.js	/^				var currentValue = this[ key ];$/;"	r
curve	three.js	/^			curve = this.curves[ i ];$/;"	r
curve	three.js	/^	var curve = new THREE.CubicBezierCurve( new THREE.Vector2( x0, y0 ),$/;"	r
curve	three.js	/^	var curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,$/;"	r
curve	three.js	/^	var curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );$/;"	r
curve	three.js	/^	var curve = new THREE.QuadraticBezierCurve( new THREE.Vector2( x0, y0 ),$/;"	r
curve	three.js	/^	var curve = new THREE.SplineCurve( npts );$/;"	r
curveLengths	three.js	/^	var curveLengths = this.getCurveLengths();$/;"	r
curveSegments	three.js	/^	var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;$/;"	r
curveSegments	three.js	/^	var curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments: 4;$/;"	r
curves	three.js	/^				tmpShape.curves = tmpPath.curves;$/;"	r
curves	three.js	/^		tmpShape.curves = tmpPath.curves;$/;"	r
curves	three.js	/^	this.curves = [];$/;"	r
customAttribute	three.js	/^					customAttribute = customAttributes[ i ];$/;"	r
customAttribute	three.js	/^				customAttribute = customAttributes[ i ];$/;"	r
customAttribute	three.js	/^		customAttribute,$/;"	r
customAttribute	three.js	/^		customAttribute;$/;"	r
customAttributes	three.js	/^		customAttributes = geometry.__webglCustomAttributesList,$/;"	r
customAttributes	three.js	/^		customAttributes = geometry.__webglCustomAttributesList;$/;"	r
customAttributes	three.js	/^		customAttributes = geometryGroup.__webglCustomAttributesList,$/;"	r
customAttributesDirty	three.js	/^				customAttributesDirty = material.attributes && areCustomAttributesDirty( material );$/;"	r
customAttributesDirty	three.js	/^			customAttributesDirty = material.attributes && areCustomAttributesDirty( material );$/;"	r
customDefines	three.js	/^			customDefines,$/;"	r
customDefines	three.js	/^		var customDefines = generateDefines( defines );$/;"	r
customUpdateCallback	three.js	/^	this.customUpdateCallback = undefined;$/;"	r
cx	three.js	/^			cx = -this.radius * Math.cos( v ); \/\/ TODO: Hack: Negating it so it faces outside.$/;"	r
cx	three.js	/^			cx = geometry.vertices[ indexC ].x,$/;"	r
cx	three.js	/^			var cx = - this.tube * Math.cos( v ); \/\/ TODO: Hack: Negating it so it faces outside.$/;"	r
cx	three.js	/^		cx = contour[ verts[ w ] ].x;$/;"	r
cx	three.js	/^		cx, cy,$/;"	r
cx	three.js	/^		var cx, cy, px, py;$/;"	r
cy	three.js	/^			cy = geometry.vertices[ indexC ].y,$/;"	r
cy	three.js	/^			cy = geometry.vertices[ indexC ].y;$/;"	r
cy	three.js	/^			cy = this.radius * Math.sin( v );$/;"	r
cy	three.js	/^			var cy = this.tube * Math.sin( v );$/;"	r
cy	three.js	/^		cy = contour[ verts[ w ] ].y;$/;"	r
cz	three.js	/^			cz = geometry.vertices[ indexC ].z,$/;"	r
d	three.js	/^						d = vertices[ face.d ];$/;"	r
d	three.js	/^					d = layeroffset + j + slen2;$/;"	r
d	three.js	/^					d = pts1.distanceToSquared( pts2 );$/;"	r
d	three.js	/^				d = 0;$/;"	r
d	three.js	/^				face.d = changes[ face.d ];$/;"	r
d	three.js	/^				face.d = faces[ offset ++ ];$/;"	r
d	three.js	/^				faces.push( new THREE.Face3( b, d, c ) );$/;"	r
d	three.js	/^				var d = ( ix + 1 ) + gridX1 * iy;$/;"	r
d	three.js	/^				var d = face.d;$/;"	r
d	three.js	/^			d = (i + 1) * sliceCount + j + 1;$/;"	r
d	three.js	/^			d = te[3], e = te[4], f = te[5],$/;"	r
d	three.js	/^			d = this.grid[ i ][ jp ];$/;"	r
d	three.js	/^			var d = ( ix + 1 ) + gridX1 * iz;$/;"	r
d	three.js	/^			var d = ( this.tubularSegments + 1 ) * j + i;$/;"	r
d	three.js	/^			var d = base + 1;$/;"	r
d	three.js	/^			var d = this.dot( v1 );$/;"	r
d	three.js	/^			var d = this.grid[ i ][ jp ];$/;"	r
d	three.js	/^		d = ( u1 * y2 - u2 * y1 ) * idet;$/;"	r
d	three.js	/^		this.lightDistance.scale.set( d, d, d );$/;"	r
d	three.js	/^		var d = - 2 * far * near \/ ( far - near );$/;"	r
d	three.js	/^		var d = 0;$/;"	r
d	three.js	/^		var d = 1 \/ ( e[3] * x + e[7] * y + e[11] * z + e[15] ); \/\/ perspective divide$/;"	r
d	three.js	/^	this.d = d;$/;"	r
d	three.js	/^	var d = light.distance;$/;"	r
d	three.js	/^	var d = t * this.getLength();$/;"	r
d	three.js	/^	var d = this.light.distance;$/;"	r
d	three.js	/^	var d, pts = [];$/;"	r
d1	three.js	/^				var d1 = plane.distanceToPoint( p1 );$/;"	r
d2	three.js	/^				var d2 = plane.distanceToPoint( p2 );$/;"	r
dashSize	three.js	/^	material.dashSize = this.dashSize;$/;"	r
dashSize	three.js	/^	this.dashSize = 3;$/;"	r
data	three.js	/^				var data = json[ i ];$/;"	r
data	three.js	/^			var data = _imagedatas[ texture.id ];$/;"	r
data	three.js	/^		var data = context.getImageData( 0, 0, width, height ).data;$/;"	r
data	three.js	/^		var data = json;$/;"	r
data	three.js	/^		var data = new Uint8Array( 3 * size );$/;"	r
data	three.js	/^	this.data = THREE.AnimationHandler.get( data );$/;"	r
data	three.js	/^	this.data = THREE.AnimationHandler.get( name );$/;"	r
data	three.js	/^	var data = THREE.FontUtils.drawText( text );$/;"	r
data	three.js	/^THREE.KeyFrameAnimation = function( root, data, JITCompile ) {$/;"	r
dataLength	three.js	/^				var dataLength = Math.max( 4, width ) \/ 4 * Math.max( 4, height ) \/ 4 * blockBytes;$/;"	r
dataOffset	three.js	/^				var byteArray = new Uint8Array( buffer, dataOffset, dataLength );$/;"	r
dataOffset	three.js	/^		var dataOffset = header[ off_size ] + 4;$/;"	r
db	three.js	/^				db = new THREE.Vector3(), dc = new THREE.Vector3(), bc = new THREE.Vector3();$/;"	r
dds	three.js	/^				var dds = THREE.ImageUtils.parseDDS( buffer, true );$/;"	r
dds	three.js	/^			var dds = THREE.ImageUtils.parseDDS( buffer, true );$/;"	r
dds	three.js	/^		var dds = { mipmaps: [], width: 0, height: 0, format: null, mipmapCount: 1 };$/;"	r
deallocateGeometry	three.js	/^	var deallocateGeometry = function ( geometry ) {$/;"	r
deallocateMaterial	three.js	/^	var deallocateMaterial = function ( material ) {$/;"	r
deallocateRenderTarget	three.js	/^	var deallocateRenderTarget = function ( renderTarget ) {$/;"	r
deallocateTexture	three.js	/^	var deallocateTexture = function ( texture ) {$/;"	r
debug	three.js	/^	debug: function () {},$/;"	r
decompose	three.js	/^	decompose: function () {$/;"	r
default	three.js	/^				default:$/;"	r
default	three.js	/^			default: throw new Error( "index is out of range: " + index );$/;"	r
default	three.js	/^			default:$/;"	r
default_vertex	three.js	/^	default_vertex : [$/;"	r
defaultnormal_vertex	three.js	/^	defaultnormal_vertex: [$/;"	r
defines	three.js	/^	material.defines = this.defines;$/;"	r
defines	three.js	/^	this.defines = {};$/;"	r
degToRad	three.js	/^	degToRad: function() {$/;"	r
degreeToRadiansFactor	three.js	/^		var degreeToRadiansFactor = Math.PI \/ 180;$/;"	r
deleteCustomAttributesBuffers	three.js	/^	function deleteCustomAttributesBuffers( geometry ) {$/;"	r
deleteProgram	three.js	/^					deleteProgram = true;$/;"	r
deleteProgram	three.js	/^		var deleteProgram = false;$/;"	r
delta	three.js	/^				var delta = max - min;$/;"	r
delta	three.js	/^			delta = -1;$/;"	r
delta	three.js	/^			delta = 1;$/;"	r
delta	three.js	/^	delta: function ( optionalTarget ) {$/;"	r
delta	three.js	/^	var delta = 0.0001;$/;"	r
deltaAngle	three.js	/^			var deltaAngle = aEndAngle - aStartAngle;$/;"	r
deltaAngle	three.js	/^	var deltaAngle = this.aEndAngle - this.aStartAngle;$/;"	r
deltaLengthSq	three.js	/^		var deltaLengthSq = this.center.distanceToSquared( point );$/;"	r
denom	three.js	/^		var denom = ( dot00 * dot11 - dot01 * dot01 );$/;"	r
denominator	three.js	/^			var denominator = this.normal.dot( direction );$/;"	r
denominator	three.js	/^		var denominator = plane.normal.dot( this.direction );$/;"	r
density	three.js	/^	this.density = ( density !== undefined ) ? density : 0.00025;$/;"	r
depth	three.js	/^							data.depth,$/;"	r
depth	three.js	/^		depth = depth | 1;$/;"	r
depth	three.js	/^		this.clear( color, depth, stencil );$/;"	r
depth	three.js	/^	this.clear = function ( color, depth, stencil ) {$/;"	r
depth	three.js	/^	this.depth = depth;$/;"	r
depthBuffer	three.js	/^		tmp.depthBuffer = this.depthBuffer;$/;"	r
depthBuffer	three.js	/^	this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;$/;"	r
depthSegments	three.js	/^							data.depthSegments$/;"	r
depthSegments	three.js	/^	this.depthSegments = depthSegments || 1;$/;"	r
depthShader	three.js	/^		var depthShader = THREE.ShaderLib[ "depthRGBA" ];$/;"	r
depthTest	three.js	/^			mpars.depthTest = m.depthTest;$/;"	r
depthTest	three.js	/^		material.depthTest = this.depthTest;$/;"	r
depthTest	three.js	/^	this.depthTest = !this.useScreenCoordinates;$/;"	r
depthTest	three.js	/^	this.depthTest = true;$/;"	r
depthUniforms	three.js	/^		var depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );$/;"	r
depthWrite	three.js	/^			mpars.depthWrite = m.depthWrite;$/;"	r
depthWrite	three.js	/^		material.depthWrite = this.depthWrite;$/;"	r
depthWrite	three.js	/^	this.depthWrite = true;$/;"	r
depth_half	three.js	/^	var depth_half = this.depth \/ 2;$/;"	r
descSort	three.js	/^	var descSort = function ( a, b ) {$/;"	r
descendants	three.js	/^		var descendants = object.getDescendants();$/;"	r
det	three.js	/^		det = u1 * v2 - u2 * v1;$/;"	r
det	three.js	/^		det = x * x + y * y, idet;$/;"	r
det	three.js	/^		var det = Math.abs( 1 - a01 * a01 );$/;"	r
det	three.js	/^		var det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];$/;"	r
det	three.js	/^		var det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];$/;"	r
detach	three.js	/^	detach : function ( child, parent, scene ) {$/;"	r
detail	three.js	/^							data.detail$/;"	r
detail	three.js	/^	detail = detail || 0;$/;"	r
detail	three.js	/^	this.detail = detail;$/;"	r
determinant	three.js	/^	determinant: function () {$/;"	r
devicePixelRatio	three.js	/^	this.devicePixelRatio = parameters.devicePixelRatio !== undefined$/;"	r
diff	three.js	/^			diff = 0.001 * ( newTime - this.oldTime );$/;"	r
diff	three.js	/^			diff = curveLengths[ i ] - d;$/;"	r
diff	three.js	/^		var diff = 0;$/;"	r
diff	three.js	/^		var diff = this.origin.clone().sub( segCenter );$/;"	r
diff	three.js	/^		var diff = this.vertices.length - unique.length;$/;"	r
diff	three.js	/^	\/\/ console.log('removed ', diff, ' vertices by merging');$/;"	r
diff	three.js	/^	var i = 0, diff, curve;$/;"	r
diffuse	three.js	/^				var diffuse = matJSON.parameters.color;$/;"	r
dirColors	three.js	/^		dirColors = zlights.directional.colors,$/;"	r
dirCount	three.js	/^		dirCount = 0,$/;"	r
dirLength	three.js	/^		dirLength = 0,$/;"	r
dirLights	three.js	/^		var dirLights = 0;$/;"	r
dirOffset	three.js	/^					setColorGamma( dirColors, dirOffset, color, intensity * intensity );$/;"	r
dirOffset	three.js	/^					setColorLinear( dirColors, dirOffset, color, intensity );$/;"	r
dirOffset	three.js	/^				dirOffset = dirLength * 3;$/;"	r
dirOffset	three.js	/^		dirOffset = 0,$/;"	r
dirPositions	three.js	/^		dirPositions = zlights.directional.positions,$/;"	r
direction	three.js	/^			var direction = line.delta( v1 );$/;"	r
direction	three.js	/^		animation.direction = -1;$/;"	r
direction	three.js	/^		animation.direction = 1;$/;"	r
direction	three.js	/^		direction: 1,$/;"	r
direction	three.js	/^	THREE.Raycaster = function ( origin, direction, near, far ) {$/;"	r
direction	three.js	/^	object.direction = this.direction;$/;"	r
direction	three.js	/^	this.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();$/;"	r
direction	three.js	/^	this.direction = -1;$/;"	r
direction	three.js	/^	this.direction = 1;$/;"	r
directionBackwards	three.js	/^					animation.directionBackwards = false;$/;"	r
directionBackwards	three.js	/^					animation.directionBackwards = true;$/;"	r
directionBackwards	three.js	/^				this.directionBackwards = false;$/;"	r
directionBackwards	three.js	/^				this.directionBackwards = true;$/;"	r
directionBackwards	three.js	/^		animation.directionBackwards = false;$/;"	r
directionBackwards	three.js	/^		animation.directionBackwards = true;$/;"	r
directionBackwards	three.js	/^		directionBackwards: false,$/;"	r
directionBackwards	three.js	/^	object.directionBackwards = this.directionBackwards;$/;"	r
directionBackwards	three.js	/^	this.directionBackwards = false;$/;"	r
directionBackwards	three.js	/^	this.directionBackwards = true;$/;"	r
directionDistance	three.js	/^			var directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );$/;"	r
directionDistance	three.js	/^		var directionDistance = result.dot( this.direction );$/;"	r
directional	three.js	/^		directional: { length: 0, colors: new Array(), positions: new Array() },$/;"	r
directionalLightWeightingHalf	three.js	/^				"directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );",$/;"	r
directionalLightWeightingHalfBack	three.js	/^					"directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );",$/;"	r
dirtyColors	three.js	/^		dirtyColors = geometry.colorsNeedUpdate,$/;"	r
dirtyElements	three.js	/^		dirtyElements = geometry.elementsNeedUpdate,$/;"	r
dirtyLineDistances	three.js	/^		dirtyLineDistances = geometry.lineDistancesNeedUpdate,$/;"	r
dirtyMorphTargets	three.js	/^		dirtyMorphTargets = geometry.morphTargetsNeedUpdate,$/;"	r
dirtyNormals	three.js	/^		dirtyNormals = geometry.normalsNeedUpdate,$/;"	r
dirtyTangents	three.js	/^		dirtyTangents = geometry.tangentsNeedUpdate,$/;"	r
dirtyUvs	three.js	/^		dirtyUvs = geometry.uvsNeedUpdate,$/;"	r
dirtyVertices	three.js	/^		dirtyVertices = geometry.verticesNeedUpdate,$/;"	r
disableAttributes	three.js	/^	function disableAttributes() {$/;"	r
dispatchEvent	three.js	/^		object.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;$/;"	r
dispatchEvent	three.js	/^	dispatchEvent: function ( event ) {$/;"	r
dispose	three.js	/^	dispose: function () {$/;"	r
dist	three.js	/^				var dist = [];$/;"	r
distSq	three.js	/^				var distSq = localRay.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );$/;"	r
distToPoint	three.js	/^		var distToPoint = plane.distanceToPoint( this.origin );$/;"	r
distance	three.js	/^							distance: distance,$/;"	r
distance	three.js	/^							distance: planeDistance,$/;"	r
distance	three.js	/^						distance: planeDistance,$/;"	r
distance	three.js	/^					var distance = localRay.origin.distanceTo( interRay );$/;"	r
distance	three.js	/^				distance: distance,$/;"	r
distance	three.js	/^				var distance = planes[ i ].distanceToPoint( center );$/;"	r
distance	three.js	/^			distance = light.distance;$/;"	r
distance	three.js	/^			var distance = planes[ i ].distanceToPoint( center );$/;"	r
distance	three.js	/^			var distance = raycaster.ray.distanceToPoint( matrixPosition );$/;"	r
distance	three.js	/^			var distance = raycaster.ray.origin.distanceTo( matrixPosition );$/;"	r
distance	three.js	/^			var distance = v1.distanceTo( v2 );$/;"	r
distance	three.js	/^		                    distance: distance, 		\/\/ distance (0-1) from light source (0=at light source)$/;"	r
distance	three.js	/^		distance,$/;"	r
distance	three.js	/^	distance = Math.abs( distance );$/;"	r
distance	three.js	/^	distance = Math.min( distance, Math.max( 0, distance ) );$/;"	r
distance	three.js	/^	distance: function () {$/;"	r
distance	three.js	/^	light.distance = this.distance;$/;"	r
distance	three.js	/^	this.distance = ( distance !== undefined ) ? distance : 0;$/;"	r
distanceGeometry	three.js	/^	var distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );$/;"	r
distanceMaterial	three.js	/^	var distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );$/;"	r
distanceSq	three.js	/^	distanceSq: function () {$/;"	r
distanceSqToSegment	three.js	/^	distanceSqToSegment: function( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {$/;"	r
distanceTo	three.js	/^	distanceTo: function ( v ) {$/;"	r
distanceToPlane	three.js	/^	distanceToPlane: function ( plane ) {$/;"	r
distanceToPoint	three.js	/^	distanceToPoint: function ( point ) {$/;"	r
distanceToPoint	three.js	/^	distanceToPoint: function () {$/;"	r
distanceToPoint	three.js	/^	distanceToPoint: function() {$/;"	r
distanceToSphere	three.js	/^	distanceToSphere: function ( sphere ) {$/;"	r
distanceToSquared	three.js	/^	distanceToSquared: function ( v ) {$/;"	r
divide	three.js	/^	divide: function ( v ) {$/;"	r
divideScalar	three.js	/^	divideScalar: function ( scalar ) {$/;"	r
divisions	three.js	/^						for ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {$/;"	r
divisions	three.js	/^	THREE.FontUtils.divisions = curveSegments;$/;"	r
divisions	three.js	/^	divisions : 10,$/;"	r
divisions	three.js	/^	divisions = divisions || 12;$/;"	r
dl	three.js	/^		dl = lineDistances.length,$/;"	r
domElement	three.js	/^	this.domElement = _canvas;$/;"	r
dot	three.js	/^	dot: function ( v ) {$/;"	r
dot00	three.js	/^		var dot00 = v0.dot( v0 );$/;"	r
dot01	three.js	/^		var dot01 = v0.dot( v1 );$/;"	r
dot02	three.js	/^		var dot02 = v0.dot( v2 );$/;"	r
dot11	three.js	/^		var dot11 = v1.dot( v1 );$/;"	r
dot12	three.js	/^		var dot12 = v1.dot( v2 );$/;"	r
doubleSided	three.js	/^		var doubleSided = material.side === THREE.DoubleSide;$/;"	r
drawQuad	three.js	/^	function drawQuad( x0, y0, x1, y1, x2, y2, x3, y3 ) {$/;"	r
drawText	three.js	/^	drawText : function( text ) {$/;"	r
drawTriangle	three.js	/^	function drawTriangle( x0, y0, x1, y1, x2, y2 ) {$/;"	r
dst	three.js	/^							dst = objJSON.distance;$/;"	r
dstColors	three.js	/^				dstColors = geometry.morphColors[ i ].colors;$/;"	r
dstNormalsFace	three.js	/^				var dstNormalsFace = this.morphNormals[ i ].faceNormals;$/;"	r
dstNormalsVertex	three.js	/^				var dstNormalsVertex = this.morphNormals[ i ].vertexNormals;$/;"	r
dstVertices	three.js	/^				dstVertices = geometry.morphTargets[ i ].vertices;$/;"	r
dupIndex	three.js	/^						dupIndex = n;$/;"	r
dupIndex	three.js	/^				var dupIndex = -1;$/;"	r
duration	three.js	/^									object.duration = objJSON.duration;$/;"	r
duration	three.js	/^		animation.duration = ( animation.end - animation.start ) \/ animation.fps;$/;"	r
duration	three.js	/^		animation.duration = duration;$/;"	r
duration	three.js	/^		duration = animation.duration;$/;"	r
duration	three.js	/^		duration: ( end - start ) \/ fps,$/;"	r
duration	three.js	/^		this.duration = 1000 * ( ( animation.end - animation.start ) \/ fps );$/;"	r
duration	three.js	/^	object.duration = this.duration;$/;"	r
duration	three.js	/^	this.duration = 1000; \/\/ milliseconds$/;"	r
duration	three.js	/^	var duration = -1;$/;"	r
dx	three.js	/^			dx = geometry.vertices[ indexD ].x,$/;"	r
dx	three.js	/^		var dx = this.x - v.x, dy = this.y - v.y;$/;"	r
dx	three.js	/^		var dx = this.x - v.x;$/;"	r
dy	three.js	/^			dy = geometry.vertices[ indexD ].y,$/;"	r
dy	three.js	/^		var dy = this.y - v.y;$/;"	r
dynamic	three.js	/^	this.dynamic = false;$/;"	r
dynamic	three.js	/^	this.dynamic = true; \/\/ the intermediate typed arrays will be deleted when set to false$/;"	r
dz	three.js	/^			dz = geometry.vertices[ indexD ].z;$/;"	r
dz	three.js	/^		var dz = this.z - v.z;$/;"	r
e	three.js	/^		e = x0 - a * u0 - c * v0;$/;"	r
e	three.js	/^		var e = Math.cos( z ), f = Math.sin( z );$/;"	r
e	three.js	/^		var e = document.createElement( "div" );$/;"	r
e	three.js	/^		var e = m.elements;$/;"	r
edge	three.js	/^	var edge = [ 0, 0 ], hash = {};$/;"	r
el	three.js	/^		for ( var e = 0, el = _elements.length; e < el; e++ ) {$/;"	r
elapsedTime	three.js	/^	this.elapsedTime = 0;$/;"	r
element	three.js	/^				renderParticle( _v1, element, material );$/;"	r
element	three.js	/^			var element = _elements[ e ];$/;"	r
element	three.js	/^	function renderParticle( v1, element, material ) {$/;"	r
elementBuffer	three.js	/^		_lensFlare.elementBuffer    = _gl.createBuffer();$/;"	r
elementBuffer	three.js	/^		_sprite.elementBuffer = _gl.createBuffer();$/;"	r
elements	three.js	/^	this.elements = new Float32Array( 16 );$/;"	r
elements	three.js	/^	this.elements = new Float32Array(9);$/;"	r
elementsNeedUpdate	three.js	/^						geometry.elementsNeedUpdate = true;$/;"	r
elementsNeedUpdate	three.js	/^			geometry.elementsNeedUpdate = false;$/;"	r
elementsNeedUpdate	three.js	/^	this.elementsNeedUpdate = false;$/;"	r
ellipse	three.js	/^THREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,$/;"	r
else	three.js	/^			else$/;"	r
else	three.js	/^                else$/;"	r
emissive	three.js	/^					emissive: json.emissive,$/;"	r
emissive	three.js	/^	this.emissive = new THREE.Color( 0x000000 );$/;"	r
empties	three.js	/^			empties: {},$/;"	r
empty	three.js	/^	empty: function () {$/;"	r
enableAttribute	three.js	/^	function enableAttribute( attribute ) {$/;"	r
enableScissorTest	three.js	/^	this.enableScissorTest = function ( enable ) {$/;"	r
enabled	three.js	/^	this.enabled = false;$/;"	r
end	three.js	/^				end = keys.length-1,$/;"	r
end	three.js	/^			end = -1;$/;"	r
end	three.js	/^			end = renderList.length;$/;"	r
end	three.js	/^			if ( ! animations[ label ] ) animations[ label ] = { start: Infinity, end: -Infinity };$/;"	r
end	three.js	/^			if ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: -Infinity };$/;"	r
end	three.js	/^		var end = endFace || faces.length - 1;$/;"	r
end	three.js	/^		var end = new THREE.Vector3( vector.x, vector.y, 1.0 );$/;"	r
end	three.js	/^	this.end = ( end !== undefined ) ? end : new THREE.Vector3();$/;"	r
end	three.js	/^	this.geometry.animations[ label ] = { start: start, end: end };$/;"	r
endFrame	three.js	/^		endFrame: end,$/;"	r
endFrame	three.js	/^	var endFrame = numFrames - 1;$/;"	r
endKeyframe	three.js	/^	this.endKeyframe = end;$/;"	r
endPoint	three.js	/^	var endPoint = this.curves[this.curves.length-1].getPoint(1);$/;"	r
endSign	three.js	/^		var endSign = this.distanceToPoint( line.end );$/;"	r
endTime	three.js	/^				this.endTime = Math.max( keys[keys.length - 1].time, this.endTime );$/;"	r
endTime	three.js	/^		this.endTime = -this.startTime;$/;"	r
envMap	three.js	/^			envMap: !!material.envMap,$/;"	r
envMap	three.js	/^	material.envMap = this.envMap;$/;"	r
envMap	three.js	/^	this.envMap = null;$/;"	r
envmap_fragment	three.js	/^	envmap_fragment: [$/;"	r
envmap_pars_fragment	three.js	/^	envmap_pars_fragment: [$/;"	r
envmap_pars_vertex	three.js	/^	envmap_pars_vertex: [$/;"	r
envmap_vertex	three.js	/^	envmap_vertex : [$/;"	r
epsilon	three.js	/^			epsilon = 0.01,		\/\/ margin to allow for rounding errors$/;"	r
epsilon	three.js	/^		epsilon = 0.0001,$/;"	r
epsilon2	three.js	/^			epsilon2 = 0.1,		\/\/ margin to distinguish between 0 and 180 degrees$/;"	r
equals	three.js	/^	equals: function ( box ) {$/;"	r
equals	three.js	/^	equals: function ( c ) {$/;"	r
equals	three.js	/^	equals: function ( euler ) {$/;"	r
equals	three.js	/^	equals: function ( line ) {$/;"	r
equals	three.js	/^	equals: function ( plane ) {$/;"	r
equals	three.js	/^	equals: function ( quaternion ) {$/;"	r
equals	three.js	/^	equals: function ( ray ) {$/;"	r
equals	three.js	/^	equals: function ( sphere ) {$/;"	r
equals	three.js	/^	equals: function ( triangle ) {$/;"	r
equals	three.js	/^	equals: function ( v ) {$/;"	r
equals	three.js	/^	equals: function( v ) {$/;"	r
error	three.js	/^	error: function () {}$/;"	r
expand	three.js	/^	function expand( v1, v2, pixels ) {$/;"	r
expandByPoint	three.js	/^	expandByPoint: function ( point ) {$/;"	r
expandByScalar	three.js	/^	expandByScalar: function ( scalar ) {$/;"	r
expandByVector	three.js	/^	expandByVector: function ( vector ) {$/;"	r
exponent	three.js	/^	light.exponent = this.exponent;$/;"	r
exponent	three.js	/^	this.exponent = ( exponent !== undefined ) ? exponent : 10;$/;"	r
extDet	three.js	/^			extDet = segExtent * det;$/;"	r
extend	three.js	/^THREE.extend = function ( obj, source ) {$/;"	r
extractAllPoints	three.js	/^THREE.Shape.prototype.extractAllPoints = function ( divisions ) {$/;"	r
extractAllSpacedPoints	three.js	/^THREE.Shape.prototype.extractAllSpacedPoints = function ( divisions ) {$/;"	r
extractGlyphPoints	three.js	/^	extractGlyphPoints : function( c, face, scale, offset, path ) {$/;"	r
extractPoints	three.js	/^THREE.Shape.prototype.extractPoints = function ( divisions ) {$/;"	r
extractPosition	three.js	/^	extractPosition: function ( m ) {$/;"	r
extractRotation	three.js	/^	extractRotation: function () {$/;"	r
extractUrlBase	three.js	/^	extractUrlBase: function ( url ) {$/;"	r
extrude	three.js	/^THREE.Shape.prototype.extrude = function ( options ) {$/;"	r
extrudeByPath	three.js	/^		extrudeByPath = true;$/;"	r
extrudeByPath	three.js	/^	var extrudePts, extrudeByPath = false;$/;"	r
extrudeMaterial	three.js	/^	var extrudeMaterial = options.extrudeMaterial;$/;"	r
extrudePath	three.js	/^	var extrudePath = options.extrudePath;$/;"	r
extrudePts	three.js	/^		extrudePts = extrudePath.getSpacedPoints( steps );$/;"	r
extrudePts	three.js	/^	var extrudePts, extrudeByPath = false;$/;"	r
extruded	three.js	/^	var extruded = new THREE.ExtrudeGeometry( this, options );$/;"	r
extrudedShape	three.js	/^		return this.generateTopUV( geometry, extrudedShape, extrudeOptions, indexA, indexB, indexC );$/;"	r
extrudedShape	three.js	/^	generateBottomUV: function( geometry, extrudedShape, extrudeOptions, indexA, indexB, indexC ) {$/;"	r
extrudedShape	three.js	/^	generateSideWallUV: function( geometry, extrudedShape, wallContour, extrudeOptions,$/;"	r
extrudedShape	three.js	/^	generateTopUV: function( geometry, extrudedShape, extrudeOptions, indexA, indexB, indexC ) {$/;"	r
f	three.js	/^		f = y0 - b * u0 - d * v0;$/;"	r
f	three.js	/^		var f, fl, face, materialIndex, vertices,$/;"	r
f	three.js	/^		var f, fl, face;$/;"	r
f	three.js	/^		var f, fl, fi, face,$/;"	r
f	three.js	/^		var f, fl, v, vl, i, il, vertexIndex,$/;"	r
f	three.js	/^	var f = [];$/;"	r
f	three.js	/^	var f, fl = this.lensFlares.length;$/;"	r
f3	three.js	/^	function f3( a, b, c, isBottom ) {$/;"	r
f4	three.js	/^	function f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {$/;"	r
face	three.js	/^							face = obj_faces[ chunk_faces3[ f ]	];$/;"	r
face	three.js	/^							face = obj_faces[ chunk_faces4[ f ] ];$/;"	r
face	three.js	/^							face: null,$/;"	r
face	three.js	/^						face: face,$/;"	r
face	three.js	/^					face = faces[ f ];$/;"	r
face	three.js	/^					face = obj_faces[ chf ];$/;"	r
face	three.js	/^					face = this.faces[ f ];$/;"	r
face	three.js	/^					var face = geometry.faces[ f ];$/;"	r
face	three.js	/^				face = faces[ i ];$/;"	r
face	three.js	/^				face = new THREE.Face3();$/;"	r
face	three.js	/^				face = new THREE.Face4();$/;"	r
face	three.js	/^				face = obj_faces[ chunk_faces3[ f ]	];$/;"	r
face	three.js	/^				face = obj_faces[ chunk_faces3[ f ] ];$/;"	r
face	three.js	/^				face = obj_faces[ chunk_faces4[ f ] ];$/;"	r
face	three.js	/^				face = this.faces[ f ];$/;"	r
face	three.js	/^				face: null,$/;"	r
face	three.js	/^				var face = new THREE.Face4( a + offset, b + offset, c + offset, d + offset );$/;"	r
face	three.js	/^			face = faces[ i ];$/;"	r
face	three.js	/^			face = geometry.faces[ f ];$/;"	r
face	three.js	/^			face = geometry.faces[ i ];$/;"	r
face	three.js	/^			face = isolatedPts[ i ];$/;"	r
face	three.js	/^			face = this.faces[ f ];$/;"	r
face	three.js	/^			face = this.faces[ i ];$/;"	r
face	three.js	/^			face = this.getFace(),$/;"	r
face	three.js	/^			face = triangles[ i ];$/;"	r
face	three.js	/^			face, uv, vA, vB, vC, uvA, uvB, uvC,$/;"	r
face	three.js	/^			var face = faces2[ i ], faceCopy, normal, color,$/;"	r
face	three.js	/^			var face = faces[ i ];$/;"	r
face	three.js	/^			var face = geometry.faces[ i ];$/;"	r
face	three.js	/^			var face = new THREE.Face4( a, b, c, d );$/;"	r
face	three.js	/^			var face = new THREE.Face4( a, b, c, d, [ normals[ a ], normals[ b ], normals[ c ], normals[ d ] ] );$/;"	r
face	three.js	/^			var face = new THREE.RenderableFace3();$/;"	r
face	three.js	/^			var face = new THREE.RenderableFace4();$/;"	r
face	three.js	/^			var face = this.faces[ f ];$/;"	r
face	three.js	/^			var face = this.faces[ i ];$/;"	r
face	three.js	/^			var ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );$/;"	r
face	three.js	/^		face = faces[ i ];$/;"	r
face	three.js	/^		face, flen = faces.length,$/;"	r
face	three.js	/^		var face = ThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;$/;"	r
face	three.js	/^		var face = faces[ i ];$/;"	r
face	three.js	/^		var face = new THREE.Face3( this.a, this.b, this.c );$/;"	r
face	three.js	/^		var face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );$/;"	r
face	three.js	/^		var face = new THREE.Face4( this.a, this.b, this.c, this.d );$/;"	r
face	three.js	/^		var face, i,$/;"	r
face	three.js	/^		var face, newFaces = [];$/;"	r
face	three.js	/^	THREE.FontUtils.face = font;$/;"	r
face	three.js	/^	extractGlyphPoints : function( c, face, scale, offset, path ) {$/;"	r
face	three.js	/^	face : "helvetiker",$/;"	r
face	three.js	/^	var face, flen = faces.length;$/;"	r
faceArray	three.js	/^			_gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, faceArray, hint );$/;"	r
faceArray	three.js	/^		faceArray = geometryGroup.__faceArray,$/;"	r
faceColor	three.js	/^				faceColor = face.color;$/;"	r
faceCopy	three.js	/^				faceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );$/;"	r
faceCopy	three.js	/^				faceCopy = new THREE.Face4( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset, face.d + vertexOffset );$/;"	r
faceCopy	three.js	/^			var face = faces2[ i ], faceCopy, normal, color,$/;"	r
faceIndex	three.js	/^							faceIndex: null,$/;"	r
faceIndex	three.js	/^						faceIndex: f,$/;"	r
faceIndex	three.js	/^		var faceIndex = [ 'a', 'b', 'c', 'd' ];$/;"	r
faceIndicesToRemove	three.js	/^		var faceIndicesToRemove = [];$/;"	r
faceNormal	three.js	/^					faceNormal = new THREE.Vector3();$/;"	r
faceNormal	three.js	/^				faceNormal = face.normal;$/;"	r
faceNormal	three.js	/^				faceNormal = morphNormals.faceNormals[ f ];$/;"	r
faceNormal	three.js	/^				var faceNormal, vertexNormals;$/;"	r
faceNormal	three.js	/^			var faceNormal, vertexNormals;$/;"	r
facePlane	three.js	/^	var facePlane = new THREE.Plane();$/;"	r
faceUv	three.js	/^						var faceUv = geometry.faceUvs[ j ][ i ];$/;"	r
faceUvs	three.js	/^		geometry.faceUvs = faceUvs;$/;"	r
faceUvs	three.js	/^		var faceUvs = [];$/;"	r
faceUvs	three.js	/^	this.faceUvs = [[]];$/;"	r
faceVertexColors	three.js	/^			faceVertexColors = face.vertexColors;$/;"	r
faceVertexNormals	three.js	/^							faceVertexNormals = morphNormals[ vk ].vertexNormals[ chf ];$/;"	r
faceVertexNormals	three.js	/^					faceVertexNormals = face.vertexNormals;$/;"	r
faceVertexNormals	three.js	/^			faceVertexNormals = face.vertexNormals,$/;"	r
faceVertexUvs	three.js	/^				faceVertexUvs = geometry.faceVertexUvs;$/;"	r
faceVertexUvs	three.js	/^		geometry.faceVertexUvs = faceVertexUvs;$/;"	r
faceVertexUvs	three.js	/^		var faceVertexUvs = [];$/;"	r
faceVertexUvs	three.js	/^	this.faceVertexUvs = [[]];$/;"	r
face_materials	three.js	/^			face_materials: {},$/;"	r
faces	three.js	/^					var faces = dds.mipmaps.length \/ dds.mipmapCount;$/;"	r
faces	three.js	/^				faces = geometry.faces;$/;"	r
faces	three.js	/^			faces = geometry.faces,$/;"	r
faces	three.js	/^			faces: 0$/;"	r
faces	three.js	/^			faces: 0,$/;"	r
faces	three.js	/^		_lensFlare.faces = new Uint16Array( 6 );$/;"	r
faces	three.js	/^		_sprite.faces    = new Uint16Array( 6 );$/;"	r
faces	three.js	/^		_this.info.render.faces = 0;$/;"	r
faces	three.js	/^		faces = json.faces,$/;"	r
faces	three.js	/^		geometry.faces = faces;$/;"	r
faces	three.js	/^		geometry.faces = newFaces;$/;"	r
faces	three.js	/^		tmpGeo.faces = this.faces;$/;"	r
faces	three.js	/^		var faces = [];$/;"	r
faces	three.js	/^		var faces = dds.isCubemap ? 6 : 1;$/;"	r
faces	three.js	/^		var faces = geometry.faces;$/;"	r
faces	three.js	/^		var faces = this.faces;$/;"	r
faces	three.js	/^		var faces = this.object.geometry.faces;$/;"	r
faces	three.js	/^	faces : {},$/;"	r
faces	three.js	/^	this.faces = [];$/;"	r
faces	three.js	/^	var faces = THREE.Shape.Utils.triangulateShape ( vertices, holes );$/;"	r
faces	three.js	/^	var faces = THREE.Shape.Utils.triangulateShape( vertices, holes );$/;"	r
faces	three.js	/^	var faces = [$/;"	r
faces	three.js	/^	var faces = object.geometry.faces;$/;"	r
faces	three.js	/^	var faces = this.faces;$/;"	r
faces	three.js	/^	var faces = this.object.geometry.faces;$/;"	r
faces	three.js	/^THREE.PolyhedronGeometry = function ( vertices, faces, radius, detail ) {$/;"	r
faces1	three.js	/^		faces1 = geometry1.faces,$/;"	r
faces2	three.js	/^		faces2 = geometry2.faces,$/;"	r
faces3	three.js	/^			faces3 = geometryGroup.faces3,$/;"	r
faces4	three.js	/^			faces4 = geometryGroup.faces4,$/;"	r
facesPts	three.js	/^		var facesPts = [];$/;"	r
factor	three.js	/^	function setPolygonOffset ( polygonoffset, factor, units ) {$/;"	r
false	three.js	/^						_gl.vertexAttribPointer( attributes[ attribute.buffer.belongsToAttribute ], attribute.size, _gl.FLOAT, false, 0, 0 );$/;"	r
false	three.js	/^					_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.boneMatrices );$/;"	r
false	three.js	/^					_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );$/;"	r
false	three.js	/^					_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite._modelViewMatrix.elements );$/;"	r
false	three.js	/^				_gl.uniformMatrix4fv( location, false, uniform._array );$/;"	r
false	three.js	/^			_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object._normalMatrix.elements );$/;"	r
false	three.js	/^			_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );$/;"	r
false	three.js	/^			_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );$/;"	r
false	three.js	/^			renderObjects( scene.__webglObjects, false, "", camera, lights, fog, true, material );$/;"	r
false	three.js	/^			renderObjects( scene.__webglObjects, false, "transparent", camera, lights, fog, true, material );$/;"	r
false	three.js	/^		_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object._modelViewMatrix.elements );$/;"	r
false	three.js	/^		_gl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );$/;"	r
family	three.js	/^		var family = data.familyName.toLowerCase();$/;"	r
far	three.js	/^			this.far$/;"	r
far	three.js	/^		this.far = far || Infinity;$/;"	r
far	three.js	/^	this.far = ( far !== undefined ) ? far : 1000;$/;"	r
far	three.js	/^	this.far = ( far !== undefined ) ? far : 2000;$/;"	r
far	three.js	/^	this.far = far !== undefined ? far : 2000;$/;"	r
far	three.js	/^	this.far = this.cameraO.far;$/;"	r
far	three.js	/^	this.far = this.cameraP.far;$/;"	r
far	three.js	/^	var far = this.cameraP.far;$/;"	r
far	three.js	/^THREE.CubeCamera = function ( near, far, cubeResolution ) {$/;"	r
farZ	three.js	/^		var farZ = light.shadowCascadeFarZ[ cascade ];$/;"	r
fi	three.js	/^				fi = chunk_faces3[ f ];$/;"	r
fi	three.js	/^				fi = chunk_faces4[ f ];$/;"	r
fi	three.js	/^			fi = geometry.faces.length;$/;"	r
fillPath	three.js	/^	function fillPath( color ) {$/;"	r
fillStyle	three.js	/^			_context.fillStyle = value;$/;"	r
fillStyle	three.js	/^	_pixelMapContext.fillStyle = 'rgba(0,0,0,1)';$/;"	r
filterFallback	three.js	/^	function filterFallback ( f ) {$/;"	r
finalize	three.js	/^		function finalize() {$/;"	r
find	three.js	/^			find = new THREE.Vector2(pt.x, pt.y);$/;"	r
find	three.js	/^		var find;$/;"	r
findIndexForPt	three.js	/^		var findIndexForPt = function (pt) {$/;"	r
firstAnimation	three.js	/^	geometry.firstAnimation = firstAnimation;$/;"	r
firstAnimation	three.js	/^	this.firstAnimation = firstAnimation;$/;"	r
firstAnimation	three.js	/^	var firstAnimation, animations = geometry.animations;$/;"	r
firstAnimation	three.js	/^	var firstAnimation, frameRanges = {};$/;"	r
fl	three.js	/^						for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {$/;"	r
fl	three.js	/^						for ( f = 0, fl = chunk_faces4.length; f < fl; f ++ ) {$/;"	r
fl	three.js	/^					fl = geometry.attributes.index.numItems \/ 3;$/;"	r
fl	three.js	/^					fl = geometry.attributes.position.numItems \/ 9;$/;"	r
fl	three.js	/^				for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {$/;"	r
fl	three.js	/^				for ( f = 0, fl = chunk_faces4.length; f < fl; f ++ ) {$/;"	r
fl	three.js	/^				for ( f = 0, fl = faces.length; f < fl; f ++ ) {$/;"	r
fl	three.js	/^				for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {$/;"	r
fl	three.js	/^				for ( var f = 0, fl = geometry.faces.length; f < fl; f ++ ) {$/;"	r
fl	three.js	/^				var fl;$/;"	r
fl	three.js	/^			for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {$/;"	r
fl	three.js	/^			for ( f = 0, fl = chunk_faces4.length; f < fl; f ++ ) {$/;"	r
fl	three.js	/^			for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {$/;"	r
fl	three.js	/^		for ( f = 0, fl = geometry.faces.length; f < fl; f ++ ) {$/;"	r
fl	three.js	/^		for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {$/;"	r
fl	three.js	/^		for ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {$/;"	r
fl	three.js	/^	var f, fl = this.lensFlares.length;$/;"	r
flare	three.js	/^			flare = flares[ i ];$/;"	r
flare	three.js	/^		flare = this.lensFlares[ f ];$/;"	r
flare	three.js	/^	var flare;$/;"	r
flares	three.js	/^		var flares = scene.__webglFlares,$/;"	r
flattenToArray	three.js	/^	flattenToArray: function ( flat ) {$/;"	r
flattenToArrayOffset	three.js	/^	flattenToArrayOffset: function( flat, offset ) {$/;"	r
flen	three.js	/^		face, flen = faces.length,$/;"	r
flen	three.js	/^	var face, flen = faces.length;$/;"	r
flipSided	three.js	/^		var flipSided = material.side === THREE.BackSide;$/;"	r
flipY	three.js	/^			this.boneTexture.flipY = false;$/;"	r
flipY	three.js	/^		texture.flipY = false;$/;"	r
flipY	three.js	/^		texture.flipY = this.flipY;$/;"	r
flipY	three.js	/^	this.flipY = true;$/;"	r
fog	three.js	/^						_renderer.renderBuffer( shadowCamera, scene.__lights, fog, material, buffer, object );$/;"	r
fog	three.js	/^						_renderer.renderBufferDirect( shadowCamera, scene.__lights, fog, material, buffer, object );$/;"	r
fog	three.js	/^					_renderer.renderBuffer( camera, scene.__lights, fog, material, buffer, object );$/;"	r
fog	three.js	/^					_renderer.renderBufferDirect( camera, scene.__lights, fog, material, buffer, object );$/;"	r
fog	three.js	/^					_renderer.renderImmediateObject( shadowCamera, scene.__lights, fog, _depthMaterial, object );$/;"	r
fog	three.js	/^				_renderer.renderImmediateObject( camera, scene.__lights, fog, _depthMaterial, object );$/;"	r
fog	three.js	/^				fog = new THREE.Fog( 0x000000, fogJSON.near, fogJSON.far );$/;"	r
fog	three.js	/^				fog = new THREE.FogExp2( 0x000000, fogJSON.density );$/;"	r
fog	three.js	/^			fog: fog,$/;"	r
fog	three.js	/^			result.scene.fog = result.fogs[ data.defaults.fog ];$/;"	r
fog	three.js	/^		fog = null;$/;"	r
fog	three.js	/^		fog = scene.fog;$/;"	r
fog	three.js	/^		var fog = scene.fog;$/;"	r
fog	three.js	/^	fog : {$/;"	r
fog	three.js	/^	material.fog = this.fog;$/;"	r
fog	three.js	/^	this.fog = false; \/\/ set to use scene fog$/;"	r
fog	three.js	/^	this.fog = false;$/;"	r
fog	three.js	/^	this.fog = null;$/;"	r
fog	three.js	/^	this.fog = true;$/;"	r
fog	three.js	/^	var distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );$/;"	r
fog	three.js	/^	var material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );$/;"	r
fogColor	three.js	/^		_sprite.uniforms.fogColor 		  	  = _gl.getUniformLocation( _sprite.program, "fogColor" );$/;"	r
fogDensity	three.js	/^		_sprite.uniforms.fogDensity 		  = _gl.getUniformLocation( _sprite.program, "fogDensity" );$/;"	r
fogExp	three.js	/^			fogExp: fog instanceof THREE.FogExp2,$/;"	r
fogFar	three.js	/^						"fogFactor = smoothstep( fogNear, fogFar, depth );",$/;"	r
fogFar	three.js	/^				"float fogFactor = smoothstep( fogNear, fogFar, depth );",$/;"	r
fogFar	three.js	/^		_sprite.uniforms.fogFar 		  	  = _gl.getUniformLocation( _sprite.program, "fogFar" );$/;"	r
fogID	three.js	/^		var fogID, fogJSON;$/;"	r
fogJSON	three.js	/^			fogJSON = data.fogs[ fogID ];$/;"	r
fogNear	three.js	/^		_sprite.uniforms.fogNear 		  	  = _gl.getUniformLocation( _sprite.program, "fogNear" );$/;"	r
fogType	three.js	/^					fogType = 0;$/;"	r
fogType	three.js	/^					fogType = sceneFogType;$/;"	r
fogType	three.js	/^		_sprite.uniforms.fogType 		  	  = _gl.getUniformLocation( _sprite.program, "fogType" );$/;"	r
fog_fragment	three.js	/^	fog_fragment: [$/;"	r
fog_pars_fragment	three.js	/^	fog_pars_fragment: [$/;"	r
fogs	three.js	/^			fogs: {},$/;"	r
font	three.js	/^	var font = parameters.font !== undefined ? parameters.font : "helvetiker";$/;"	r
fontPaths	three.js	/^		var fontPaths = [];$/;"	r
fontSize	three.js	/^		e.style.fontSize = "0.8em";$/;"	r
force	three.js	/^			force = true;$/;"	r
force	three.js	/^		force = true;$/;"	r
forceUpdate	three.js	/^		forceUpdate = true;$/;"	r
format	three.js	/^					texture.format = dds.format;$/;"	r
format	three.js	/^				dds.format = THREE.RGBA_S3TC_DXT3_Format;$/;"	r
format	three.js	/^				dds.format = THREE.RGBA_S3TC_DXT5_Format;$/;"	r
format	three.js	/^				dds.format = THREE.RGB_S3TC_DXT1_Format;$/;"	r
format	three.js	/^				img.format = dds.format;$/;"	r
format	three.js	/^			texture.format = dds.format;$/;"	r
format	three.js	/^		texture.format = this.format;$/;"	r
format	three.js	/^		tmp.format = this.format;$/;"	r
format	three.js	/^	this.format = format !== undefined ? format : THREE.RGBAFormat;$/;"	r
format	three.js	/^	this.format = options.format !== undefined ? options.format : THREE.RGBAFormat;$/;"	r
forwardPoint	three.js	/^						forwardPoint = this.interpolateCatmullRom( this.points, scale * 1.01 );$/;"	r
fourCC	three.js	/^		var fourCC = header[ off_pfFourCC ];$/;"	r
fourCCToInt32	three.js	/^		function fourCCToInt32( value ) {$/;"	r
fov	three.js	/^	this.cameraP.fov =  this.fov \/ this.zoom ;$/;"	r
fov	three.js	/^	this.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight \/ ( focalLength * 2 ) ) );$/;"	r
fov	three.js	/^	this.fov = fov !== undefined ? fov : 50;$/;"	r
fov	three.js	/^	this.fov = fov;$/;"	r
fov	three.js	/^	var fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight \/ ( focalLength * 2 ) ) );$/;"	r
fov	three.js	/^	var fov = 90, aspect = 1;$/;"	r
fov	three.js	/^	var fov = this.fov;$/;"	r
fps	three.js	/^		animation.fps = ( animation.end - animation.start ) \/ animation.duration;$/;"	r
fps	three.js	/^		animation.fps = fps;$/;"	r
fps	three.js	/^		fps: fps,$/;"	r
fps	three.js	/^	var fps = numFrames \/ 1;$/;"	r
fragmentShader	three.js	/^		fragmentShader: [$/;"	r
fragmentShader	three.js	/^		material.fragmentShader = shaders.fragmentShader;$/;"	r
fragmentShader	three.js	/^		var fragmentShader = _gl.createShader( _gl.FRAGMENT_SHADER );$/;"	r
fragmentShader	three.js	/^	function buildProgram ( shaderID, fragmentShader, vertexShader, uniforms, attributes, defines, parameters ) {$/;"	r
fragmentShader	three.js	/^	material.fragmentShader = this.fragmentShader;$/;"	r
fragmentShader	three.js	/^	this.fragmentShader = "void main() {}";$/;"	r
frame	three.js	/^	frame               = parseInt( Math.min( currentTime * this.data.fps, this.data.length * this.data.fps ), 10 );$/;"	r
frame	three.js	/^	frame = parseInt( Math.min( currentTime * this.data.fps, this.data.length * this.data.fps ), 10 );$/;"	r
frame	three.js	/^	var frame;$/;"	r
frameRanges	three.js	/^	var firstAnimation, frameRanges = {};$/;"	r
frameTime	three.js	/^		var frameTime = animation.duration \/ animation.length;$/;"	r
frameTime	three.js	/^	var frameTime = this.duration \/ this.length;$/;"	r
framebuffer	three.js	/^				framebuffer = renderTarget.__webglFramebuffer;$/;"	r
framebuffer	three.js	/^				framebuffer = renderTarget.__webglFramebuffer[ renderTarget.activeCubeFace ];$/;"	r
framebuffer	three.js	/^			framebuffer = null;$/;"	r
framebuffer	three.js	/^		var framebuffer, width, height, vx, vy;$/;"	r
frames	three.js	/^	var frames = new THREE.TubeGeometry.FrenetFrames( this.path, this.segments, this.closed ),$/;"	r
fromArray	three.js	/^	fromArray: function ( array ) {$/;"	r
fromPoints	three.js	/^THREE.Path.prototype.fromPoints = function ( vectors ) {$/;"	r
frustumCulled	three.js	/^		object.frustumCulled = this.frustumCulled;$/;"	r
frustumCulled	three.js	/^	this.frustumCulled = false;$/;"	r
frustumCulled	three.js	/^	this.frustumCulled = true;$/;"	r
fullHeight	three.js	/^	this.fullHeight = fullHeight;$/;"	r
fullHeight	three.js	/^ *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );$/;"	r
fullHeight	three.js	/^ *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );$/;"	r
fullHeight	three.js	/^ *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );$/;"	r
fullHeight	three.js	/^ *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );$/;"	r
fullHeight	three.js	/^ *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );$/;"	r
fullHeight	three.js	/^ *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );$/;"	r
fullHeight	three.js	/^THREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {$/;"	r
fullPath	three.js	/^			var fullPath = texturePath + "\/" + sourceFile;$/;"	r
fullUrl	three.js	/^				var fullUrl = get_url( textureJSON.url, data.urlBaseType );$/;"	r
fullWidth	three.js	/^	this.fullWidth = fullWidth;$/;"	r
g	three.js	/^			g = te[6], h = te[7], i = te[8];$/;"	r
g	three.js	/^			this.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) \/ 100;$/;"	r
g	three.js	/^			this.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) \/ 255;$/;"	r
g	three.js	/^			this.g = hue2rgb( q, p, h );$/;"	r
g	three.js	/^			var max = Math.max( r, g, b );$/;"	r
g	three.js	/^			var min = Math.min( r, g, b );$/;"	r
g	three.js	/^		this.g = ( hex >> 8 & 255 ) \/ 255;$/;"	r
g	three.js	/^		this.g = Math.sqrt( color.g );$/;"	r
g	three.js	/^		this.g = Math.sqrt( this.g );$/;"	r
g	three.js	/^		this.g = color.g * color.g;$/;"	r
g	three.js	/^		this.g = color.g;$/;"	r
g	three.js	/^		this.g = color1.g + color2.g;$/;"	r
g	three.js	/^		this.g = g * g;$/;"	r
g	three.js	/^		this.g = g;$/;"	r
g	three.js	/^		var g = Math.floor( color.g * 255 );$/;"	r
g	three.js	/^		var g, geometry, material, geometryGroup;$/;"	r
g	three.js	/^	setRGB: function ( r, g, b ) {$/;"	r
gammaInput	three.js	/^	this.gammaInput = false;$/;"	r
gammaOutput	three.js	/^	this.gammaOutput = false;$/;"	r
gapSize	three.js	/^	material.gapSize = this.gapSize;$/;"	r
gapSize	three.js	/^	this.gapSize = 1;$/;"	r
gbone	three.js	/^			gbone = this.geometry.bones[ b ];$/;"	r
generateBottomUV	three.js	/^	generateBottomUV: function( geometry, extrudedShape, extrudeOptions, indexA, indexB, indexC ) {$/;"	r
generateCubeFaceCallback	three.js	/^		var generateCubeFaceCallback = function ( rq, img ) {$/;"	r
generateDataTexture	three.js	/^	generateDataTexture: function ( width, height, color ) {$/;"	r
generateDefines	three.js	/^	function generateDefines ( defines ) {$/;"	r
generateMipmaps	three.js	/^					texture.generateMipmaps = false;$/;"	r
generateMipmaps	three.js	/^			texture.generateMipmaps = false;$/;"	r
generateMipmaps	three.js	/^			this.boneTexture.generateMipmaps = false;$/;"	r
generateMipmaps	three.js	/^		renderTarget.generateMipmaps = false;$/;"	r
generateMipmaps	three.js	/^		renderTarget.generateMipmaps = generateMipmaps;$/;"	r
generateMipmaps	three.js	/^		texture.generateMipmaps = false;$/;"	r
generateMipmaps	three.js	/^		texture.generateMipmaps = this.generateMipmaps;$/;"	r
generateMipmaps	three.js	/^		tmp.generateMipmaps = this.generateMipmaps;$/;"	r
generateMipmaps	three.js	/^		var generateMipmaps = renderTarget.generateMipmaps;$/;"	r
generateMipmaps	three.js	/^	this.generateMipmaps = false; \/\/ WebGL currently can't generate mipmaps for compressed textures, they must be embedded in DDS file$/;"	r
generateMipmaps	three.js	/^	this.generateMipmaps = true;$/;"	r
generateShapes	three.js	/^THREE.FontUtils.generateShapes = function( text, parameters ) {$/;"	r
generateSideWallUV	three.js	/^	generateSideWallUV: function( geometry, extrudedShape, wallContour, extrudeOptions,$/;"	r
generateTextureCallback	three.js	/^		var generateTextureCallback = function ( count ) {$/;"	r
generateTopUV	three.js	/^	generateTopUV: function( geometry, extrudedShape, extrudeOptions, indexA, indexB, indexC ) {$/;"	r
generateUUID	three.js	/^	generateUUID: function () {$/;"	r
geoID	three.js	/^		var geoID, geoJSON;$/;"	r
geoJSON	three.js	/^			geoJSON = data.geometries[ geoID ];$/;"	r
geometries	three.js	/^					object.add( this.parseObject( data.children[ child ], geometries, materials ) );$/;"	r
geometries	three.js	/^			geometries: 0,$/;"	r
geometries	three.js	/^			geometries: {},$/;"	r
geometries	three.js	/^		return function ( data, geometries, materials ) {$/;"	r
geometries	three.js	/^		var geometries = this.parseGeometries( json.geometries );$/;"	r
geometries	three.js	/^		var geometries = {};$/;"	r
geometries	three.js	/^		var object = this.parseObject( json.object, geometries, materials );$/;"	r
geometry	three.js	/^						geometry = loader.parse( data.data ).geometry;$/;"	r
geometry	three.js	/^						geometry = new THREE.CubeGeometry($/;"	r
geometry	three.js	/^						geometry = new THREE.CylinderGeometry($/;"	r
geometry	three.js	/^						geometry = new THREE.IcosahedronGeometry($/;"	r
geometry	three.js	/^						geometry = new THREE.PlaneGeometry($/;"	r
geometry	three.js	/^						geometry = new THREE.SphereGeometry($/;"	r
geometry	three.js	/^						geometry = new THREE.TorusGeometry($/;"	r
geometry	three.js	/^						geometry = new THREE.TorusKnotGeometry($/;"	r
geometry	three.js	/^						geometry = result.geometries[ objJSON.geometry ];$/;"	r
geometry	three.js	/^					addBuffer( scene.__webglObjects, geometry, object );$/;"	r
geometry	three.js	/^					var geometry = geometries[ data.geometry ];$/;"	r
geometry	three.js	/^				addBuffer( scene.__webglObjects, geometry, object );$/;"	r
geometry	three.js	/^				geometry = new THREE.CubeGeometry( geoJSON.width, geoJSON.height, geoJSON.depth, geoJSON.widthSegments, geoJSON.heightSegments, geoJSON.depthSegments );$/;"	r
geometry	three.js	/^				geometry = new THREE.CylinderGeometry( geoJSON.topRad, geoJSON.botRad, geoJSON.height, geoJSON.radSegs, geoJSON.heightSegs );$/;"	r
geometry	three.js	/^				geometry = new THREE.IcosahedronGeometry( geoJSON.radius, geoJSON.subdivisions );$/;"	r
geometry	three.js	/^				geometry = new THREE.PlaneGeometry( geoJSON.width, geoJSON.height, geoJSON.widthSegments, geoJSON.heightSegments );$/;"	r
geometry	three.js	/^				geometry = new THREE.SphereGeometry( geoJSON.radius, geoJSON.widthSegments, geoJSON.heightSegments );$/;"	r
geometry	three.js	/^				geometry = new THREE.TorusGeometry( geoJSON.radius, geoJSON.tube, geoJSON.segmentsR, geoJSON.segmentsT );$/;"	r
geometry	three.js	/^				geometry = object.geometry;$/;"	r
geometry	three.js	/^				var geometry;$/;"	r
geometry	three.js	/^			geometry = object.geometry;$/;"	r
geometry	three.js	/^			result[ i ] = THREE.GeometryUtils.randomPointInFace( faces[ index ], geometry, true );$/;"	r
geometry	three.js	/^			var geometry = object.geometry;$/;"	r
geometry	three.js	/^		geometry = object.geometry, \/\/ this is shared for all chunks$/;"	r
geometry	three.js	/^		geometry, vertices, faces, face, faceVertexNormals, faceVertexUvs, uvs,$/;"	r
geometry	three.js	/^		var geometry = event.target;$/;"	r
geometry	three.js	/^		var geometry = new THREE.Geometry();$/;"	r
geometry	three.js	/^		var geometry = object.geometry,$/;"	r
geometry	three.js	/^		var geometry, material, camera, fog,$/;"	r
geometry	three.js	/^	THREE.Line.call( this, geometry, material, THREE.LinePieces );$/;"	r
geometry	three.js	/^	THREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ), THREE.LinePieces );$/;"	r
geometry	three.js	/^	THREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffffff } ), THREE.LinePieces );$/;"	r
geometry	three.js	/^	THREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ), THREE.LinePieces );$/;"	r
geometry	three.js	/^	THREE.Mesh.call( this, geometry, material );$/;"	r
geometry	three.js	/^	geometry = new THREE.Geometry(),$/;"	r
geometry	three.js	/^	geometry = new THREE.Geometry();$/;"	r
geometry	three.js	/^	randomPointInFace: function ( face, geometry, useCachedAreas ) {$/;"	r
geometry	three.js	/^	this.geometry = geometry !== undefined ? geometry : new THREE.Geometry();$/;"	r
geometry	three.js	/^	this.geometry = geometry;$/;"	r
geometry	three.js	/^	var geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );$/;"	r
geometry	three.js	/^	var geometry = new THREE.Geometry();$/;"	r
geometry	three.js	/^	var geometry = new THREE.PlaneGeometry( size, size );$/;"	r
geometry	three.js	/^	var geometry = new THREE.ShapeGeometry( this, options );$/;"	r
geometry	three.js	/^	var geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );$/;"	r
geometry	three.js	/^	var geometry = object.geometry;$/;"	r
geometry	three.js	/^	var geometry = this.geometry;$/;"	r
geometry2	three.js	/^		geometry2 = object2 instanceof THREE.Mesh ? object2.geometry : object2,$/;"	r
geometryAttributes	three.js	/^		var geometryAttributes = geometry.attributes;$/;"	r
geometryGroup	three.js	/^						addBuffer( scene.__webglObjects, geometryGroup, object );$/;"	r
geometryGroup	three.js	/^						geometryGroup = geometry.geometryGroups[ g ];$/;"	r
geometryGroup	three.js	/^					geometryGroup = geometry.geometryGroups[ g ];$/;"	r
geometryGroup	three.js	/^				geometryGroup = geometry.geometryGroupsList[ i ];$/;"	r
geometryGroup	three.js	/^				setupMorphTargets( material, geometryGroup, object );$/;"	r
geometryGroup	three.js	/^				var geometryGroup = geometry.geometryGroups[ g ];$/;"	r
geometryGroup	three.js	/^			geometryGroup, customAttributesDirty, material;$/;"	r
geometryGroup	three.js	/^	function setupMorphTargets ( material, geometryGroup, object ) {$/;"	r
geometryGroupHash	three.js	/^			geometryGroupHash = ( geometryGroup.id * 0xffffff ) + ( program.id * 2 ) + wireframeBit;$/;"	r
geometryGroups	three.js	/^		geometry.geometryGroups = {};$/;"	r
geometryGroupsList	three.js	/^		geometry.geometryGroupsList = [];$/;"	r
geometryHandlers	three.js	/^	this.geometryHandlers = {};$/;"	r
geometryHash	three.js	/^			geometryHash = ( geometry.id * 0xffffff ) + ( program.id * 2 ) + wireframeBit;$/;"	r
get	three.js	/^	that.get = function( name ) {$/;"	r
getAnimationDuration	three.js	/^THREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {$/;"	r
getAnimationTime	three.js	/^THREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {$/;"	r
getBevelVec	three.js	/^	function getBevelVec( pt_i, pt_j, pt_k ) {$/;"	r
getBevelVec1	three.js	/^	function getBevelVec1( pt_i, pt_j, pt_k ) {$/;"	r
getBevelVec2	three.js	/^	function getBevelVec2( pt_i, pt_j, pt_k ) {$/;"	r
getBoundingBox	three.js	/^	getBoundingBox: function ( optionalTarget ) {$/;"	r
getBoundingBox	three.js	/^THREE.CurvePath.prototype.getBoundingBox = function () {$/;"	r
getBoundingSphere	three.js	/^	getBoundingSphere: function() {$/;"	r
getBufferMaterial	three.js	/^	function getBufferMaterial( object, geometryGroup ) {$/;"	r
getChildByName	three.js	/^	getChildByName: function ( name, recursive ) {$/;"	r
getClearAlpha	three.js	/^	this.getClearAlpha = function () {$/;"	r
getClearColor	three.js	/^	this.getClearColor = function () {$/;"	r
getColumnFromMatrix	three.js	/^	getColumnFromMatrix: function ( index, matrix ) {$/;"	r
getComponent	three.js	/^	getComponent: function ( index ) {$/;"	r
getContext	three.js	/^	this.getContext = function () {$/;"	r
getControlPointsArray	three.js	/^	this.getControlPointsArray = function () {$/;"	r
getCurveLengths	three.js	/^THREE.CurvePath.prototype.getCurveLengths = function() {$/;"	r
getDelta	three.js	/^	getDelta: function () {$/;"	r
getDescendants	three.js	/^	getDescendants: function ( array ) {$/;"	r
getElapsedTime	three.js	/^	getElapsedTime: function () {$/;"	r
getFace	three.js	/^	getFace : function() {$/;"	r
getGradientTexture	three.js	/^	function getGradientTexture( color1, color2, color3, color4 ) {$/;"	r
getHSL	three.js	/^	getHSL: function () {$/;"	r
getHex	three.js	/^	getHex: function () {$/;"	r
getHexString	three.js	/^	getHexString: function () {$/;"	r
getInverse	three.js	/^	getInverse: function ( m, throwOnInvertible ) {$/;"	r
getInverse	three.js	/^	getInverse: function ( matrix, throwOnInvertible ) {$/;"	r
getLength	three.js	/^	this.getLength = function ( nSubDivisions ) {$/;"	r
getLength	three.js	/^THREE.Curve.prototype.getLength = function () {$/;"	r
getLength	three.js	/^THREE.CurvePath.prototype.getLength = function() {$/;"	r
getLengths	three.js	/^THREE.Curve.prototype.getLengths = function ( divisions ) {$/;"	r
getMaxAnisotropy	three.js	/^	this.getMaxAnisotropy  = function () {$/;"	r
getMaxAnisotropy	three.js	/^	this.getMaxAnisotropy = function () {$/;"	r
getMaxScaleOnAxis	three.js	/^	getMaxScaleOnAxis: function () {$/;"	r
getMorphTargetIndexByName	three.js	/^THREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {$/;"	r
getNextFace3InPool	three.js	/^	function getNextFace3InPool() {$/;"	r
getNextFace4InPool	three.js	/^	function getNextFace4InPool() {$/;"	r
getNextKeyWith	three.js	/^THREE.Animation.prototype.getNextKeyWith = function ( type, h, key ) {$/;"	r
getNextKeyWith	three.js	/^THREE.KeyFrameAnimation.prototype.getNextKeyWith = function( sid, h, key ) {$/;"	r
getNextLineInPool	three.js	/^	function getNextLineInPool() {$/;"	r
getNextObjectInPool	three.js	/^	function getNextObjectInPool() {$/;"	r
getNextParticleInPool	three.js	/^	function getNextParticleInPool() {$/;"	r
getNextVertexInPool	three.js	/^	function getNextVertexInPool() {$/;"	r
getNormalMap	three.js	/^	getNormalMap: function ( image, depth ) {$/;"	r
getNormalMatrix	three.js	/^	getNormalMatrix: function ( m ) {$/;"	r
getObject	three.js	/^	var getObject = function ( object ) {$/;"	r
getObjectById	three.js	/^	getObjectById: function ( id, recursive ) {$/;"	r
getObjectByName	three.js	/^	getObjectByName: function ( name, recursive ) {$/;"	r
getObjectForDistance	three.js	/^THREE.LOD.prototype.getObjectForDistance = function ( distance ) {$/;"	r
getObjectMaterial	three.js	/^	function getObjectMaterial( object ) {$/;"	r
getParameter	three.js	/^	getParameter: function ( point ) {$/;"	r
getPoint	three.js	/^	constructor.prototype.getPoint = getPointFunc;$/;"	r
getPoint	three.js	/^	this.getPoint = function ( k ) {$/;"	r
getPoint	three.js	/^THREE.CubicBezierCurve.prototype.getPoint = function ( t ) {$/;"	r
getPoint	three.js	/^THREE.Curve.prototype.getPoint = function ( t ) {$/;"	r
getPoint	three.js	/^THREE.CurvePath.prototype.getPoint = function( t ) {$/;"	r
getPoint	three.js	/^THREE.EllipseCurve.prototype.getPoint = function ( t ) {$/;"	r
getPoint	three.js	/^THREE.LineCurve.prototype.getPoint = function ( t ) {$/;"	r
getPoint	three.js	/^THREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {$/;"	r
getPoint	three.js	/^THREE.SplineCurve.prototype.getPoint = function ( t ) {$/;"	r
getPointAt	three.js	/^THREE.Curve.prototype.getPointAt = function ( u ) {$/;"	r
getPointAt	three.js	/^THREE.LineCurve.prototype.getPointAt = function ( u ) {$/;"	r
getPoints	three.js	/^THREE.Curve.prototype.getPoints = function ( divisions ) {$/;"	r
getPoints	three.js	/^THREE.Path.prototype.getPoints = function( divisions, closedPath ) {$/;"	r
getPointsHoles	three.js	/^THREE.Shape.prototype.getPointsHoles = function ( divisions ) {$/;"	r
getPos	three.js	/^	function getPos( u, in_q, in_p, radius, heightScale ) {$/;"	r
getPosition	three.js	/^	getPosition: function() {$/;"	r
getPositionFromMatrix	three.js	/^	getPositionFromMatrix: function ( m ) {$/;"	r
getPrecision	three.js	/^	this.getPrecision = function () {$/;"	r
getPrevKeyWith	three.js	/^THREE.Animation.prototype.getPrevKeyWith = function ( type, h, key ) {$/;"	r
getPrevKeyWith	three.js	/^THREE.KeyFrameAnimation.prototype.getPrevKeyWith = function( sid, h, key ) {$/;"	r
getScaleFromMatrix	three.js	/^	getScaleFromMatrix: function ( m ) {$/;"	r
getShader	three.js	/^	function getShader ( type, string ) {$/;"	r
getShaderPrecisionFormat	three.js	/^			_gl.getShaderPrecisionFormat = function() {$/;"	r
getSpacedPoints	three.js	/^THREE.Curve.prototype.getSpacedPoints = function ( divisions ) {$/;"	r
getSpacedPoints	three.js	/^THREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {$/;"	r
getSpacedPointsHoles	three.js	/^THREE.Shape.prototype.getSpacedPointsHoles = function ( divisions ) {$/;"	r
getStyle	three.js	/^	getStyle: function () {$/;"	r
getTangent	three.js	/^THREE.CubicBezierCurve.prototype.getTangent = function( t ) {$/;"	r
getTangent	three.js	/^THREE.Curve.prototype.getTangent = function( t ) {$/;"	r
getTangent	three.js	/^THREE.CurvePath.prototype.getTangent = function( t ) {$/;"	r
getTangent	three.js	/^THREE.LineCurve.prototype.getTangent = function( t ) {$/;"	r
getTangent	three.js	/^THREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {$/;"	r
getTangentAt	three.js	/^THREE.Curve.prototype.getTangentAt = function ( u ) {$/;"	r
getTextureUnit	three.js	/^	function getTextureUnit() {$/;"	r
getTransformedPoints	three.js	/^THREE.CurvePath.prototype.getTransformedPoints = function( segments, bends ) {$/;"	r
getTransformedSpacedPoints	three.js	/^THREE.CurvePath.prototype.getTransformedSpacedPoints = function( segments, bends ) {$/;"	r
getUtoTmapping	three.js	/^THREE.Curve.prototype.getUtoTmapping = function ( u, distance ) {$/;"	r
getWrapPoints	three.js	/^THREE.CurvePath.prototype.getWrapPoints = function ( oldPts, path ) {$/;"	r
get_url	three.js	/^		function get_url( source_url, url_type ) {$/;"	r
glFormat	three.js	/^				glFormat = paramThreeToGL( renderTarget.format ),$/;"	r
glFormat	three.js	/^				glFormat = paramThreeToGL( texture.format ),$/;"	r
glFormat	three.js	/^			glFormat = paramThreeToGL( texture.format ),$/;"	r
glFragmentShader	three.js	/^		var glFragmentShader = getShader( "fragment", prefix_fragment + fragmentShader );$/;"	r
glType	three.js	/^				glType = paramThreeToGL( renderTarget.type );$/;"	r
glType	three.js	/^				glType = paramThreeToGL( texture.type );$/;"	r
glType	three.js	/^			glType = paramThreeToGL( texture.type );$/;"	r
glVertexShader	three.js	/^		var glVertexShader = getShader( "vertex", prefix_vertex + vertexShader );$/;"	r
globalAlpha	three.js	/^			_context.globalAlpha = value;$/;"	r
globalCompositeOperation	three.js	/^				_context.globalCompositeOperation = 'darker';$/;"	r
globalCompositeOperation	three.js	/^				_context.globalCompositeOperation = 'lighter';$/;"	r
globalCompositeOperation	three.js	/^				_context.globalCompositeOperation = 'source-over';$/;"	r
glyph	three.js	/^			glyph = face.glyphs[ c ] || face.glyphs[ '?' ];$/;"	r
grad	three.js	/^						grad = colorStyle1;$/;"	r
grad	three.js	/^						var grad = _context.createLinearGradient($/;"	r
grid	three.js	/^	this.grid = [];$/;"	r
grid	three.js	/^	this.grid = new Array( this.radialSegments );$/;"	r
gridX	three.js	/^			gridX = scope.depthSegments;$/;"	r
gridX	three.js	/^		gridX = scope.widthSegments,$/;"	r
gridX	three.js	/^	var gridX = this.widthSegments;$/;"	r
gridX1	three.js	/^		var gridX1 = gridX + 1,$/;"	r
gridX1	three.js	/^	var gridX1 = gridX + 1;$/;"	r
gridY	three.js	/^			gridY = scope.depthSegments;$/;"	r
gridY	three.js	/^		gridY = scope.heightSegments,$/;"	r
gridY1	three.js	/^		gridY1 = gridY + 1,$/;"	r
gridZ	three.js	/^	var gridZ = this.heightSegments;$/;"	r
gridZ1	three.js	/^	var gridZ1 = gridZ + 1;$/;"	r
groundColor	three.js	/^				groundColor = light.groundColor;$/;"	r
groundColor	three.js	/^	this.groundColor = new THREE.Color( groundColorHex );$/;"	r
groundColorHex	three.js	/^THREE.HemisphereLight = function ( skyColorHex, groundColorHex, intensity ) {$/;"	r
group	three.js	/^		var group = new THREE.Object3D();$/;"	r
groupHash	three.js	/^				groupHash = hash_map[ materialIndex ].hash + '_' + hash_map[ materialIndex ].counter;$/;"	r
groupHash	three.js	/^			groupHash = hash_map[ materialIndex ].hash + '_' + hash_map[ materialIndex ].counter;$/;"	r
groupHash	three.js	/^			groupHash, hash_map = {};$/;"	r
groupID	three.js	/^								var groupID = objJSON.groups[ i ];$/;"	r
groups	three.js	/^			groups: {}$/;"	r
gyro	three.js	/^						var gyro = new THREE.Gyroscope();$/;"	r
h	three.js	/^							nextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );$/;"	r
h	three.js	/^						nextKey = this.getNextKeyWith( type, h, 1 );$/;"	r
h	three.js	/^						nextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );$/;"	r
h	three.js	/^						prev = this.getPrevKeyWith( sid, h, end );$/;"	r
h	three.js	/^					next = this.getNextKeyWith( sid, h, 0 );$/;"	r
h	three.js	/^					this.points[ 0 ] = this.getPrevKeyWith( "pos", h, prevKey.index - 1 )[ "pos" ];$/;"	r
h	three.js	/^					this.points[ 3 ] = this.getNextKeyWith( "pos", h, nextKey.index + 1 )[ "pos" ];$/;"	r
h	three.js	/^			h, h2,$/;"	r
h	three.js	/^			hsl.h = hue;$/;"	r
h	three.js	/^			nextKey.pos = this.getNextKeyWith( "pos", h, 1 );$/;"	r
h	three.js	/^			nextKey.rot = this.getNextKeyWith( "rot", h, 1 );$/;"	r
h	three.js	/^			nextKey.scl = this.getNextKeyWith( "scl", h, 1 );$/;"	r
h	three.js	/^		setPoint( "f3", -w,  h, 1 );$/;"	r
h	three.js	/^		setPoint( "n3", -w,  h, -1 );$/;"	r
h	three.js	/^		var h = top - bottom;$/;"	r
h	three.js	/^		var h, hl = this.hierarchy.length,$/;"	r
h	three.js	/^THREE.Animation.prototype.getNextKeyWith = function ( type, h, key ) {$/;"	r
h	three.js	/^THREE.Animation.prototype.getPrevKeyWith = function ( type, h, key ) {$/;"	r
h	three.js	/^THREE.KeyFrameAnimation.prototype.getNextKeyWith = function( sid, h, key ) {$/;"	r
h	three.js	/^THREE.KeyFrameAnimation.prototype.getPrevKeyWith = function( sid, h, key ) {$/;"	r
h00	three.js	/^		var h00 = 6 * t * t - 6 * t; 	\/\/ derived from 2t^3 − 3t^2 + 1$/;"	r
h01	three.js	/^		var h01 = -6 * t * t + 6 * t; 	\/\/ − 2t3 + 3t2$/;"	r
h10	three.js	/^		var h10 = 3 * t * t - 4 * t + 1; \/\/ t^3 − 2t^2 + t$/;"	r
h11	three.js	/^		var h11 = 3 * t * t - 2 * t;	\/\/ t3 − t2$/;"	r
halfAngle	three.js	/^		var halfAngle = angle \/ 2, s = Math.sin( halfAngle );$/;"	r
halfHeight	three.js	/^	var halfHeight = Math.tan( fov \/ 2 ) * hyperfocus;$/;"	r
halfSize	three.js	/^			var halfSize = v1.copy( size ).multiplyScalar( 0.5 );$/;"	r
halfTheta	three.js	/^		var halfTheta = Math.acos( cosHalfTheta );$/;"	r
halfViewportHeight	three.js	/^			halfViewportHeight = viewportHeight * 0.5;$/;"	r
halfViewportWidth	three.js	/^			halfViewportWidth = viewportWidth * 0.5,$/;"	r
halfViewportWidth	three.js	/^		var halfViewportWidth = viewportWidth * 0.5,$/;"	r
halfWidth	three.js	/^	var halfWidth = planeWidth \/ 2;$/;"	r
handleTriangle	three.js	/^		function handleTriangle( a, b, c ) {$/;"	r
handleTriangle	three.js	/^		function handleTriangle( context, a, b, c, ua, ub, uc ) {$/;"	r
handleVertex	three.js	/^		function handleVertex( v ) {$/;"	r
handle_children	three.js	/^		function handle_children( parent, children ) {$/;"	r
handle_hierarchy	three.js	/^		function handle_hierarchy( node, id, parent, material, obj ) {$/;"	r
handle_mesh	three.js	/^		function handle_mesh( geo, mat, id ) {$/;"	r
handle_objects	three.js	/^		function handle_objects() {$/;"	r
hasEventListener	three.js	/^		object.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;$/;"	r
hasEventListener	three.js	/^	hasEventListener: function ( type, listener ) {$/;"	r
hasFaceColor	three.js	/^			hasFaceColor	    = isBitSet( type, 6 );$/;"	r
hasFaceColor	three.js	/^		hasFaceColor, hasFaceVertexColor,$/;"	r
hasFaceNormal	three.js	/^			hasFaceNormal       = isBitSet( type, 4 );$/;"	r
hasFaceNormal	three.js	/^		hasFaceNormal, hasFaceVertexNormal,$/;"	r
hasFaceUv	three.js	/^			hasFaceUv           = isBitSet( type, 2 );$/;"	r
hasFaceUv	three.js	/^		hasFaceUv, hasFaceVertexUv,$/;"	r
hasFaceVertexColor	three.js	/^			hasFaceVertexColor  = isBitSet( type, 7 );$/;"	r
hasFaceVertexNormal	three.js	/^			hasFaceVertexNormal = isBitSet( type, 5 );$/;"	r
hasFaceVertexUv	three.js	/^			hasFaceVertexUv     = isBitSet( type, 3 );$/;"	r
hasMaterial	three.js	/^			hasMaterial         = isBitSet( type, 1 );$/;"	r
hasMaterial	three.js	/^		hasMaterial,$/;"	r
hasTangents	three.js	/^		this.hasTangents = true;$/;"	r
hasTangents	three.js	/^	this.hasTangents = false;$/;"	r
hasVertexTexture	three.js	/^			_lensFlare.hasVertexTexture = false;$/;"	r
hasVertexTexture	three.js	/^			_lensFlare.hasVertexTexture = true;$/;"	r
hash	three.js	/^	var edge = [ 0, 0 ], hash = {};$/;"	r
hash_map	three.js	/^			groupHash, hash_map = {};$/;"	r
header	three.js	/^		var header = new Int32Array( buffer, 0, headerLengthInt );$/;"	r
headerLengthInt	three.js	/^		var headerLengthInt = 31; \/\/ The header length in 32 bit ints$/;"	r
height	three.js	/^							data.height,$/;"	r
height	three.js	/^					var height = nearest_pow2( this.height );$/;"	r
height	three.js	/^					where.image.height = height;$/;"	r
height	three.js	/^				canvas.height = texture.image.height;$/;"	r
height	three.js	/^				height = Math.max( height * 0.5, 1 );$/;"	r
height	three.js	/^				height = scaleY * bitmapHeight;$/;"	r
height	three.js	/^				img.height = dds.height;$/;"	r
height	three.js	/^			_canvas.style.height = height + 'px';$/;"	r
height	three.js	/^			height = _viewportHeight;$/;"	r
height	three.js	/^			height = dds.height;$/;"	r
height	three.js	/^			height = element.scale.y * _canvasHeightHalf;$/;"	r
height	three.js	/^			height = renderTarget.height;$/;"	r
height	three.js	/^			texture.image.height = dds.height;$/;"	r
height	three.js	/^		_canvas.height = _canvasHeight;$/;"	r
height	three.js	/^		_canvas.height = height * this.devicePixelRatio;$/;"	r
height	three.js	/^		canvas.height = height;$/;"	r
height	three.js	/^		canvas.height = newHeight;$/;"	r
height	three.js	/^		dds.height = header[ off_height ];$/;"	r
height	three.js	/^		height = image.height - 1;$/;"	r
height	three.js	/^		height = texture.image.height * texture.repeat.y;$/;"	r
height	three.js	/^		var height = Math.abs( top - bottom );$/;"	r
height	three.js	/^		var height = dds.height;$/;"	r
height	three.js	/^		var height = image.height;$/;"	r
height	three.js	/^	generateDataTexture: function ( width, height, color ) {$/;"	r
height	three.js	/^	this.height = 1.0;$/;"	r
height	three.js	/^	this.height = height = height !== undefined ? height : 100;$/;"	r
height	three.js	/^	this.height = height;$/;"	r
height	three.js	/^	this.image = { width: width, height: height };$/;"	r
height	three.js	/^	this.setSize = function ( width, height, updateStyle ) {$/;"	r
height	three.js	/^THREE.CombinedCamera = function ( width, height, fov, near, far, orthoNear, orthoFar ) {$/;"	r
height	three.js	/^THREE.CubeGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {$/;"	r
height	three.js	/^THREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {$/;"	r
height	three.js	/^THREE.WebGLRenderTarget = function ( width, height, options ) {$/;"	r
height	three.js	/^THREE.WebGLRenderTargetCube = function ( width, height, options ) {$/;"	r
heightHalf	three.js	/^		this.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );$/;"	r
heightHalf	three.js	/^	var heightHalf = height \/ 2;$/;"	r
heightScale	three.js	/^							data.heightScale$/;"	r
heightScale	three.js	/^	this.heightScale = heightScale || 1;$/;"	r
heightSegments	three.js	/^							data.heightSegments$/;"	r
heightSegments	three.js	/^							data.heightSegments,$/;"	r
heightSegments	three.js	/^	this.heightSegments = heightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );$/;"	r
heightSegments	three.js	/^	this.heightSegments = heightSegments = heightSegments || 1;$/;"	r
heightSegments	three.js	/^	this.heightSegments = heightSegments || 1;$/;"	r
height_half	three.js	/^		height_half = height \/ 2,$/;"	r
height_half	three.js	/^	var height_half = height \/ 2;$/;"	r
height_half	three.js	/^	var height_half = this.height \/ 2;$/;"	r
hemi	three.js	/^		hemi: { length: 0, skyColors: new Array(), groundColors: new Array(), positions: new Array() }$/;"	r
hemiCount	three.js	/^		hemiCount = 0,$/;"	r
hemiGroundColors	three.js	/^		hemiGroundColors = zlights.hemi.groundColors,$/;"	r
hemiLength	three.js	/^		hemiLength = 0,$/;"	r
hemiLights	three.js	/^		var hemiLights = 0;$/;"	r
hemiOffset	three.js	/^					setColorGamma( hemiGroundColors, hemiOffset, groundColor, intensitySq );$/;"	r
hemiOffset	three.js	/^					setColorGamma( hemiSkyColors, hemiOffset, skyColor, intensitySq );$/;"	r
hemiOffset	three.js	/^					setColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );$/;"	r
hemiOffset	three.js	/^					setColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );$/;"	r
hemiOffset	three.js	/^				hemiOffset = hemiLength * 3;$/;"	r
hemiOffset	three.js	/^		hemiOffset = 0;$/;"	r
hemiPositions	three.js	/^		hemiPositions = zlights.hemi.positions,$/;"	r
hemiSkyColors	three.js	/^		hemiSkyColors = zlights.hemi.skyColors,$/;"	r
hex	three.js	/^						hex = ( objJSON.color !== undefined ) ? objJSON.color : 0xffffff;$/;"	r
hex	three.js	/^		hex = Math.floor( hex );$/;"	r
hexCone	three.js	/^	var hexCone = 0xff0000;$/;"	r
hexCross	three.js	/^	var hexCross = 0x333333;$/;"	r
hexFrustum	three.js	/^	var hexFrustum = 0xffaa00;$/;"	r
hexTarget	three.js	/^	var hexTarget = 0xffffff;$/;"	r
hexUp	three.js	/^	var hexUp = 0x00aaff;$/;"	r
hierarchy	three.js	/^		data.JIT.hierarchy = [];$/;"	r
hierarchy	three.js	/^		var hierarchy = [];$/;"	r
hierarchy	three.js	/^	this.hierarchy = THREE.AnimationHandler.parse( root );$/;"	r
hierarchyHandlers	three.js	/^	this.hierarchyHandlers = {};$/;"	r
high	three.js	/^			high = i - 1;$/;"	r
high	three.js	/^			high = i;$/;"	r
highpAvailable	three.js	/^	var highpAvailable = _vertexShaderPrecisionHighpFloat.precision > 0 && _fragmentShaderPrecisionHighpFloat.precision > 0;$/;"	r
hint	three.js	/^	function setDirectBuffers ( geometry, hint, dispose ) {$/;"	r
hint	three.js	/^	function setParticleBuffers ( geometry, hint, object ) {$/;"	r
hl	three.js	/^		for ( h = 0, hl = holes.length;  h < hl; h ++ ) {$/;"	r
hl	three.js	/^		for ( h = 0, hl = holes.length; h < hl; h ++ ) {$/;"	r
hl	three.js	/^		for ( h = 0, hl = holes.length; h < hl; h++ ) {$/;"	r
hl	three.js	/^		for ( var h = 0, hl = this.hierarchy.length; h < hl; h++ ) {$/;"	r
hl	three.js	/^		var h, hl = this.hierarchy.length,$/;"	r
hl	three.js	/^	for ( h = 0, hl = holes.length;  h < hl; h ++ ) {$/;"	r
hl	three.js	/^	for ( h = 0, hl = holes.length; h < hl; h ++ ) {$/;"	r
hl	three.js	/^	for ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {$/;"	r
hl	three.js	/^	for ( var h = 0, hl = this.hierarchy.length; h < hl; h++ ) {$/;"	r
hole	three.js	/^			hole = holes[ h ];$/;"	r
hole	three.js	/^			hole = holes[ i ];$/;"	r
hole	three.js	/^			hole, shortest, d,$/;"	r
hole	three.js	/^		hole = holes[ i ];$/;"	r
holeIndex	three.js	/^						holeIndex = h2;$/;"	r
holeIndex	three.js	/^				holeIndex = oldHoleIndex ;$/;"	r
holeIndex	three.js	/^			holeIndex, shapeIndex,$/;"	r
holeOffset	three.js	/^			var holeOffset = -1;$/;"	r
holes	three.js	/^		holes: this.getPointsHoles( divisions )$/;"	r
holes	three.js	/^		holes: this.getSpacedPointsHoles( divisions )$/;"	r
holes	three.js	/^	this.holes = [];$/;"	r
holes	three.js	/^	var holes = shapePoints.holes;$/;"	r
holesFirst	three.js	/^	holesFirst = isCCW ? !holesFirst : holesFirst;$/;"	r
holesFirst	three.js	/^	var holesFirst = !THREE.Shape.Utils.isClockWise( subPaths[ 0 ].getPoints() );$/;"	r
holesMovements	three.js	/^	var holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();$/;"	r
holesPts	three.js	/^	var i, il = this.holes.length, holesPts = [];$/;"	r
however	three.js	/^			\/\/ was already representing the offset; however, this requires some$/;"	r
hsl	three.js	/^		var hsl = this.getHSL();$/;"	r
hsl	three.js	/^		var hsl = { h: 0, s: 0, l: 0 };$/;"	r
hue	three.js	/^				hue = 0;$/;"	r
hue	three.js	/^			var hue, saturation;$/;"	r
hue2rgb	three.js	/^			var hue2rgb = function ( p, q, t ) {$/;"	r
hyperfocus	three.js	/^	var hyperfocus = ( near + far ) \/ 2;$/;"	r
i	three.js	/^						_gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );$/;"	r
i	three.js	/^						_gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );$/;"	r
i	three.js	/^					_gl.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );$/;"	r
i	three.js	/^					i, il = object.count * 3;$/;"	r
i	three.js	/^				\/\/console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);$/;"	r
i	three.js	/^			\/\/console.log('b', i,j, i-1, k,vertices.length);$/;"	r
i	three.js	/^			for ( var i = 0; i < nbVertices - 1; i = i + step ) {$/;"	r
i	three.js	/^			var i = this.__objectsRemoved.indexOf( object );$/;"	r
i	three.js	/^			var i, il = influences.length;$/;"	r
i	three.js	/^			var i, il;$/;"	r
i	three.js	/^			var i, l, c, cl, dstColors, srcColors, color;$/;"	r
i	three.js	/^			var i, l, v, vl, dstVertices, srcVertices;$/;"	r
i	three.js	/^		i = 0;$/;"	r
i	three.js	/^		i = Math.floor( low + ( high - low ) \/ 2 ); \/\/ less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats$/;"	r
i	three.js	/^		i = contour.length;$/;"	r
i	three.js	/^		i, il, ca, cal, customAttribute, value,$/;"	r
i	three.js	/^		i, il,$/;"	r
i	three.js	/^		i, j,$/;"	r
i	three.js	/^		i, u, v;$/;"	r
i	three.js	/^		var i = 0;$/;"	r
i	three.js	/^		var i = this.__lights.indexOf( object );$/;"	r
i	three.js	/^		var i = this.__objects.indexOf( object );$/;"	r
i	three.js	/^		var i, i2, divisions,$/;"	r
i	three.js	/^		var i, il, f, face,$/;"	r
i	three.js	/^		var i, il, f, fl, face;$/;"	r
i	three.js	/^		var i, il, j, jl, n,$/;"	r
i	three.js	/^		var i, il, j, jl;$/;"	r
i	three.js	/^		var i, il, programInfo;$/;"	r
i	three.js	/^		var i, il,$/;"	r
i	three.js	/^		var i, il;$/;"	r
i	three.js	/^		var i, index, nSamples, position,$/;"	r
i	three.js	/^		var i, j, fi,$/;"	r
i	three.js	/^		var i, j, jl, flare, sprite;$/;"	r
i	three.js	/^		var i, j,$/;"	r
i	three.js	/^		var i, l, id;$/;"	r
i	three.js	/^		var i, l, x, y, z, w, a, b, c, d;$/;"	r
i	three.js	/^		var i, p, l = this.points.length,$/;"	r
i	three.js	/^		var i, p,$/;"	r
i	three.js	/^		var i, sprite, material, screenPosition, size, fogType, scale = [];$/;"	r
i	three.js	/^		var i,il, face;$/;"	r
i	three.js	/^	\/\/console.log('b' , i, low, high, Date.now()- time);$/;"	r
i	three.js	/^	i = high;$/;"	r
i	three.js	/^	var i = 0, diff, curve;$/;"	r
i	three.js	/^	var i = 0, il = arcLengths.length;$/;"	r
i	three.js	/^	var i, il = this.curves.length;$/;"	r
i	three.js	/^	var i, il = this.holes.length, holesPts = [];$/;"	r
i	three.js	/^	var i, il, item, action, args;$/;"	r
i	three.js	/^	var i, il, j, p;$/;"	r
i	three.js	/^	var i, il, p, oldX, oldY, xNorm;$/;"	r
i	three.js	/^	var i, il;$/;"	r
i	three.js	/^	var i, l, hole, s;$/;"	r
i	three.js	/^	var i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) \/ phiSegments );$/;"	r
i	three.js	/^	var i, uvs = [],$/;"	r
i0	three.js	/^	setFromPointsAndIndices: function ( points, i0, i1, i2 ) {$/;"	r
iA	three.js	/^				iA = index + indices[ i ];$/;"	r
iA	three.js	/^		var iA, iB, iC;$/;"	r
iB	three.js	/^				handleTriangle( iA, iB, iC );$/;"	r
iB	three.js	/^				iB = index + indices[ i + 1 ];$/;"	r
iC	three.js	/^				iC = index + indices[ i + 2 ];$/;"	r
id	three.js	/^								_face.id = object.id;$/;"	r
id	three.js	/^						_line.id = object.id;$/;"	r
id	three.js	/^					_particle.id = object.id;$/;"	r
id	three.js	/^				handle_hierarchy( result, id, parent, material, obj );$/;"	r
id	three.js	/^				id = base + i;$/;"	r
id	three.js	/^				id: null,$/;"	r
id	three.js	/^			id = identifiers[ i ];$/;"	r
id	three.js	/^			var id = self.setTimeout( function() { callback( currTime + timeToCall ); }, timeToCall );$/;"	r
id	three.js	/^			var id, base = "morphNormal";$/;"	r
id	three.js	/^			var id, base = "morphTarget";$/;"	r
id	three.js	/^			webglObject.id = i;$/;"	r
id	three.js	/^		_object.id = object.id;$/;"	r
id	three.js	/^		function handle_hierarchy( node, id, parent, material, obj ) {$/;"	r
id	three.js	/^		program.id = _programs_counter ++;$/;"	r
id	three.js	/^	this.id = 0;$/;"	r
id	three.js	/^	this.id = THREE.GeometryIdCount ++;$/;"	r
id	three.js	/^	this.id = THREE.MaterialIdCount ++;$/;"	r
id	three.js	/^	this.id = THREE.Object3DIdCount ++;$/;"	r
id	three.js	/^	this.id = THREE.TextureIdCount ++;$/;"	r
identifiers	three.js	/^		identifiers = [$/;"	r
identifiers	three.js	/^		var identifiers, u, a, i;$/;"	r
identity	three.js	/^	identity: function () {$/;"	r
identityMatrix	three.js	/^	this.identityMatrix = new THREE.Matrix4();$/;"	r
idet	three.js	/^		det = x * x + y * y, idet;$/;"	r
idet	three.js	/^		idet = 1 \/ det;$/;"	r
idet	three.js	/^		idet = pixels \/ Math.sqrt( det );$/;"	r
idx	three.js	/^				idx = idx + 1;$/;"	r
idx	three.js	/^				var idx = ( y * width + x ) * 4;$/;"	r
idx	three.js	/^			var idx = 2 * i;$/;"	r
idx	three.js	/^		var idx = 0;$/;"	r
il	three.js	/^					for ( i = start, il = start + count; i < il; i += 3 ) {$/;"	r
il	three.js	/^					for ( var i = 0, il = mipmaps.length; i < il; i ++ ) {$/;"	r
il	three.js	/^					for ( var i = 0, il = vertices.length; i < il; i++ ) {$/;"	r
il	three.js	/^					for ( var i = start, il = start + count; i < il; i += 3 ) {$/;"	r
il	three.js	/^					i, il = object.count * 3;$/;"	r
il	three.js	/^				for ( i = 0, il = customAttributes.length; i < il; i ++ ) {$/;"	r
il	three.js	/^				for ( i = 0, il = geometryGroup.__webglCustomAttributesList.length; i < il; i ++ ) {$/;"	r
il	three.js	/^				for ( i = 0, il = positions.length; i < il; i += 9 ) {$/;"	r
il	three.js	/^				for ( i = 0, il = this.attributes[ "normal" ].array.length; i < il; i ++ ) {$/;"	r
il	three.js	/^				for ( i = 0, il = value.length; i < il; i ++ ) {$/;"	r
il	three.js	/^				for ( var i = 0, il = offsets.length; i < il; i ++ ) {$/;"	r
il	three.js	/^				for ( var i = 0, il = points.length; i < il; i ++ ) {$/;"	r
il	three.js	/^				for( i = 0, il = uniform.value.length; i < il; i ++ ) {$/;"	r
il	three.js	/^				for( var i = 0, il = mipmaps.length; i < il; i ++ ) {$/;"	r
il	three.js	/^			for ( i = 0, il = _programs.length; i < il; i ++ ) {$/;"	r
il	three.js	/^			for ( i = 0, il = ahole.length; i < il; i ++ ) {$/;"	r
il	three.js	/^			for ( i = 0, il = ahole.length; i < il; i++ ) {$/;"	r
il	three.js	/^			for ( i = 0, il = customAttributes.length; i < il; i ++ ) {$/;"	r
il	three.js	/^			for ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {$/;"	r
il	three.js	/^			for ( i = start, il = start + count; i < il; i += 3 ) {$/;"	r
il	three.js	/^			for ( var i = 0, il = a.length; i < il; i += 3 ) {$/;"	r
il	three.js	/^			for ( var i = 0, il = array.length; i < il; ++ i ) {$/;"	r
il	three.js	/^			for ( var i = 0, il = lights.length; i < il; i ++ ) {$/;"	r
il	three.js	/^			for ( var i = 0, il = positions.length; i < il; i += 3 ) {$/;"	r
il	three.js	/^			for ( var i = 1, il = points.length; i < il; i ++ ) {$/;"	r
il	three.js	/^			for ( var i = 3, il = positions.length; i < il; i += 3 ) {$/;"	r
il	three.js	/^			for( var i = 0, il = geometry.geometryGroupsList.length; i < il; i ++ ) {$/;"	r
il	three.js	/^			il = faces.length,$/;"	r
il	three.js	/^			var i, il = influences.length;$/;"	r
il	three.js	/^		for ( i = 0, il = _programs.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {$/;"	r
il	three.js	/^		for ( i = 0, il = allpoints.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( i = 0, il = contour.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( i = 0, il = faces2.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( i = 0, il = geometry.faceUvs.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( i = 0, il = geometry.faceVertexUvs.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( i = 0, il = geometry.faces.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( i = 0, il = isolatedPts.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( i = 0, il = lights.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( i = 0, il = renderList.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( i = 0, il = scene.__lights.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( i = 0, il = subPaths.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( i = 0, il = this.vertexColors.length; i < il; i ++ ) face.vertexColors[ i ] = this.vertexColors[ i ].clone();$/;"	r
il	three.js	/^		for ( i = 0, il = this.vertexNormals.length; i < il; i ++ ) face.vertexNormals[ i ] = this.vertexNormals[ i ].clone();$/;"	r
il	three.js	/^		for ( i = 0, il = this.vertexTangents.length; i < il; i ++ ) face.vertexTangents[ i ] = this.vertexTangents[ i ].clone();$/;"	r
il	three.js	/^		for ( i = 0, il = this.vertices.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( i = 0, il = triangles.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( i = 0, il = uvs2.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( var i = 0, il = array.length; i < il; ++ i ) {$/;"	r
il	three.js	/^		for ( var i = 0, il = chunks.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( var i = 0, il = faces.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( var i = 0, il = geometry.faces.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( var i = 0, il = materialIndexArray.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( var i = 0, il = normals.length; i < il; i += 3 ) {$/;"	r
il	three.js	/^		for ( var i = 0, il = plugins.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( var i = 0, il = points.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( var i = 0, il = renderList.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( var i = 0, il = this.faces.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( var i = 0, il = this.vertices.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( var i = 0, il = uvs.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( var i = 0, il = vertices.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for ( var i = 0, il = vertices2.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for (var i = 0, il = keys.length; i < il; i++) {$/;"	r
il	three.js	/^		for( i = 0, il = this.faces.length; i < il; i ++ ) {$/;"	r
il	three.js	/^		for( var i = 0, il = materials.length; i < il; i ++ ) {$/;"	r
il	three.js	/^	for ( i = 0, il = bends.length; i < il; i ++ ) {$/;"	r
il	three.js	/^	for ( i = 0, il = oldPts.length; i < il; i ++ ) {$/;"	r
il	three.js	/^	for ( i = 0, il = points.length; i < il; i ++ ) {$/;"	r
il	three.js	/^	for ( i = 0, il = this.actions.length; i < il; i ++ ) {$/;"	r
il	three.js	/^	for ( var i = 0, il = 8; i < il; i ++ ) {$/;"	r
il	three.js	/^	for ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {$/;"	r
il	three.js	/^	for ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {$/;"	r
il	three.js	/^	for ( var i = 0, il = segments; i < il; i ++ ) {$/;"	r
il	three.js	/^	for ( var i = 0, il = segments; i <= il; i ++ ) {$/;"	r
il	three.js	/^	for ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {$/;"	r
il	three.js	/^	var i, il = this.curves.length;$/;"	r
il	three.js	/^	var i, il = this.holes.length, holesPts = [];$/;"	r
image	three.js	/^					where.image = this;$/;"	r
image	three.js	/^				texture.image, repeatX === true && repeatY === true$/;"	r
image	three.js	/^				var image = cubeImage[ 0 ],$/;"	r
image	three.js	/^			texture.image = image;$/;"	r
image	three.js	/^			var image = new Image();$/;"	r
image	three.js	/^			var image = texture.image,$/;"	r
image	three.js	/^		texture.image = images;$/;"	r
image	three.js	/^		texture.image = this.image;$/;"	r
image	three.js	/^		var image = document.createElement( 'img' );$/;"	r
image	three.js	/^		var image = new Image();$/;"	r
image	three.js	/^	this.image = image;$/;"	r
image	three.js	/^	this.image = { data: data, width: width, height: height };$/;"	r
image	three.js	/^	this.image = { width: width, height: height };$/;"	r
imageData	three.js	/^		var imageData = context.createImageData( width, height );$/;"	r
images	three.js	/^		var images = [];$/;"	r
inFrustumCount	three.js	/^					"bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );",$/;"	r
inOrthographicMode	three.js	/^	this.inOrthographicMode = false;$/;"	r
inOrthographicMode	three.js	/^	this.inOrthographicMode = true;$/;"	r
inPerspectiveMode	three.js	/^	this.inPerspectiveMode = false;$/;"	r
inPerspectiveMode	three.js	/^	this.inPerspectiveMode = true;$/;"	r
in_q	three.js	/^	function getPos( u, in_q, in_p, radius, heightScale ) {$/;"	r
inclination	three.js	/^	function inclination( vector ) {$/;"	r
index	three.js	/^								index = sortArray[ ca ][ 1 ];$/;"	r
index	three.js	/^							index = sortArray[ ca ][ 1 ];$/;"	r
index	three.js	/^					var index = geometry.offsets[ oi ].index;$/;"	r
index	three.js	/^					var index = offsets[ j ].index;$/;"	r
index	three.js	/^				index = allPointsMap[ key ];$/;"	r
index	three.js	/^				index = indexCurrent + j * ( 1 \/ sampling ) * ( indexNext - indexCurrent );$/;"	r
index	three.js	/^			index = binarySearchIndices( r );$/;"	r
index	three.js	/^			index = i \/ nSamples;$/;"	r
index	three.js	/^			index, indexCurrent, indexNext,$/;"	r
index	three.js	/^			var index = ( Math.floor( u0 ) + Math.floor( v0 ) * texture.image.width ) * 4;$/;"	r
index	three.js	/^			var index = geometryAttributes[ "index" ];$/;"	r
index	three.js	/^			var index = offsets[ j ].index;$/;"	r
index	three.js	/^		var index = listeners[ type ].indexOf( listener );$/;"	r
index	three.js	/^		var index = playing.indexOf( animation );$/;"	r
index	three.js	/^		var index = this.children.indexOf( object );$/;"	r
index	three.js	/^		vertex.index = that.vertices.push( vertex ) - 1;$/;"	r
index	three.js	/^	setMaterialIndex: function ( geometry, index, startFace, endFace ){$/;"	r
indexA	three.js	/^	                              indexA, indexB, indexC, indexD, stepIndex, stepsLength,$/;"	r
indexCurrent	three.js	/^			indexCurrent = ( i - 1 ) \/ ( this.points.length - 1 );$/;"	r
indexNext	three.js	/^			indexNext = i \/ ( this.points.length - 1 );$/;"	r
indexed	three.js	/^					indexed = true;$/;"	r
indexed	three.js	/^				var indexed = false;$/;"	r
indices	three.js	/^				indices = [ face.a, face.b, face.c ];$/;"	r
indices	three.js	/^				indices = [ face.a, face.b, face.c, face.d ];$/;"	r
indices	three.js	/^				var indices = this.attributes[ "index" ].array;$/;"	r
indices	three.js	/^		var indices = this.attributes[ "index" ].array;$/;"	r
indices	three.js	/^		var indices, k, j, jl, u;$/;"	r
influence	three.js	/^				influence = influences[ i ];$/;"	r
influence	three.js	/^			var influence, activeInfluenceIndices = [];$/;"	r
influenceIndex	three.js	/^					influenceIndex = activeInfluenceIndices[ m ][ 1 ];$/;"	r
influenceIndex	three.js	/^			var influenceIndex, m = 0;$/;"	r
influences	three.js	/^					var influences = {};$/;"	r
influences	three.js	/^			var influences = object.morphTargetInfluences;$/;"	r
info	three.js	/^	info: function () {},$/;"	r
info	three.js	/^	this.info = {$/;"	r
init	three.js	/^	this.init = function ( renderer ) {$/;"	r
initCustomAttributes	three.js	/^	function initCustomAttributes ( geometry, object ) {$/;"	r
initData	three.js	/^	var initData = function( data ) {$/;"	r
initDirectBuffers	three.js	/^	function initDirectBuffers( geometry ) {$/;"	r
initFromArray	three.js	/^	this.initFromArray = function( a ) {$/;"	r
initGL	three.js	/^	function initGL() {$/;"	r
initLineBuffers	three.js	/^	function initLineBuffers ( geometry, object ) {$/;"	r
initMaterial	three.js	/^	this.initMaterial = function ( material, lights, fog, object ) {$/;"	r
initMaterials	three.js	/^	initMaterials: function ( materials, texturePath ) {$/;"	r
initMeshBuffers	three.js	/^	function initMeshBuffers ( geometryGroup, object ) {$/;"	r
initParticleBuffers	three.js	/^	function initParticleBuffers ( geometry, object ) {$/;"	r
initRibbonBuffers	three.js	/^	function initRibbonBuffers ( geometry, object ) {$/;"	r
initWebGLObjects	three.js	/^	this.initWebGLObjects = function ( scene ) {$/;"	r
initialNormal1	three.js	/^	function initialNormal1(lastBinormal) {$/;"	r
initialNormal2	three.js	/^	function initialNormal2() {$/;"	r
initialNormal3	three.js	/^	function initialNormal3() {$/;"	r
initialized	three.js	/^		data.initialized = true;$/;"	r
innerHTML	three.js	/^		this.statusDomElement.innerHTML = message;$/;"	r
innerRadius	three.js	/^	innerRadius = innerRadius || 0;$/;"	r
int32ToFourCC	three.js	/^		function int32ToFourCC( value ) {$/;"	r
intPoint	three.js	/^			intPoint = Math.floor( point );$/;"	r
intPoint	three.js	/^		intPoint = Math.floor( point );$/;"	r
intPoint	three.js	/^	intPoint = Math.floor( point );$/;"	r
intPoint	three.js	/^        intPoint = Math.floor( point );$/;"	r
intensity	three.js	/^							light = new THREE.PointLight( hex, intensity, dst );$/;"	r
intensity	three.js	/^						intensity = ( objJSON.intensity !== undefined ) ? objJSON.intensity : 1;$/;"	r
intensity	three.js	/^			intensity = light.intensity;$/;"	r
intensity	three.js	/^		intensity,  intensitySq,$/;"	r
intensity	three.js	/^	light.intensity = this.intensity;$/;"	r
intensity	three.js	/^	this.intensity = ( intensity !== undefined ) ? intensity : 1;$/;"	r
intensity	three.js	/^THREE.PointLight = function ( hex, intensity, distance ) {$/;"	r
intensity	three.js	/^THREE.SpotLight = function ( hex, intensity, distance, angle, exponent ) {$/;"	r
intensitySq	three.js	/^					intensitySq = intensity * intensity;$/;"	r
interRay	three.js	/^				var distSq = localRay.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );$/;"	r
interRay	three.js	/^			var interRay = new THREE.Vector3();$/;"	r
interSegment	three.js	/^			var interSegment = new THREE.Vector3();$/;"	r
interpolate	three.js	/^	function interpolate( p0, p1, p2, p3, t, t2, t3 ) {$/;"	r
interpolate	three.js	/^	interpolate: function( p0, p1, p2, p3, t ) {$/;"	r
interpolate	three.js	/^THREE.Animation.prototype.interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {$/;"	r
interpolateCatmullRom	three.js	/^THREE.Animation.prototype.interpolateCatmullRom = function ( points, scale ) {$/;"	r
interpolationType	three.js	/^						    this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {$/;"	r
interpolationType	three.js	/^		 this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {$/;"	r
interpolationType	three.js	/^	this.interpolationType = interpolationType !== undefined ? interpolationType : THREE.AnimationHandler.LINEAR;$/;"	r
intersect	three.js	/^	intersect: function ( box ) {$/;"	r
intersectDescendants	three.js	/^	var intersectDescendants = function ( object, raycaster, intersects ) {$/;"	r
intersectLine	three.js	/^	intersectLine: function() {$/;"	r
intersectObject	three.js	/^	THREE.Raycaster.prototype.intersectObject = function ( object, recursive ) {$/;"	r
intersectObject	three.js	/^	var intersectObject = function ( object, raycaster, intersects ) {$/;"	r
intersectObjects	three.js	/^	THREE.Raycaster.prototype.intersectObjects = function ( objects, recursive ) {$/;"	r
intersectPlane	three.js	/^	intersectPlane: function ( plane, optionalTarget ) {$/;"	r
intersectPoint	three.js	/^						intersectPoint = localRay.at( planeDistance, intersectPoint );$/;"	r
intersectPoint	three.js	/^					intersectPoint = localRay.at( planeDistance, intersectPoint );$/;"	r
intersectPoint	three.js	/^	var intersectPoint = new THREE.Vector3();$/;"	r
intersection	three.js	/^		intersection = v.multiplyScalar( s ).add( p );$/;"	r
intersects	three.js	/^		var intersects = [];$/;"	r
intersectsBox	three.js	/^	intersectsBox : function() {$/;"	r
intersectsObject	three.js	/^	intersectsObject: function () {$/;"	r
intersectsSphere	three.js	/^	intersectsSphere: function ( sphere ) {$/;"	r
invAspect	three.js	/^		var invAspect = viewportHeight \/ viewportWidth,$/;"	r
invAspect	three.js	/^		var invAspect = viewportHeight \/ viewportWidth;$/;"	r
invDenom	three.js	/^		var invDenom = 1 \/ denom;$/;"	r
invDet	three.js	/^						var invDet = 1 \/ det;$/;"	r
invSX	three.js	/^			var invSX = 1 \/ sx;$/;"	r
invSY	three.js	/^			var invSY = 1 \/ sy;$/;"	r
invSZ	three.js	/^			var invSZ = 1 \/ sz;$/;"	r
invScalar	three.js	/^			var invScalar = 1 \/ scalar;$/;"	r
invW	three.js	/^					var invW = 1 \/ _vertex.positionScreen.w;$/;"	r
invW	three.js	/^				var invW = 1 \/ _vector4.w;$/;"	r
inverse	three.js	/^				var inverse = new THREE.Matrix4();$/;"	r
inverse	three.js	/^	inverse: function () {$/;"	r
inverseMatrix	three.js	/^	var inverseMatrix = new THREE.Matrix4();$/;"	r
inverseNormalLength	three.js	/^		var inverseNormalLength = 1.0 \/ this.normal.length();$/;"	r
inversePointLength	three.js	/^	var inversePointLength = 1.0 \/ ( points.length - 1 );$/;"	r
inverseSegments	three.js	/^	var inverseSegments = 1.0 \/ segments;$/;"	r
ip	three.js	/^			ip = ( this.closed ) ? (i + 1) % this.segments : i + 1;$/;"	r
ip	three.js	/^			var ip = ( i + 1 ) % this.radialSegments;$/;"	r
ip	three.js	/^		ip, jp,$/;"	r
isBitSet	three.js	/^		function isBitSet( value, position ) {$/;"	r
isClockWise	three.js	/^	isClockWise: function ( pts ) {$/;"	r
isCompressed	three.js	/^				var isCompressed = \/\\.dds$\/i.test( textureJSON.url );$/;"	r
isCompressed	three.js	/^				var isCompressed = \/\\.dds$\/i.test( url_array[ 0 ] );$/;"	r
isCompressed	three.js	/^				var isCompressed = texture instanceof THREE.CompressedTexture;$/;"	r
isCompressed	three.js	/^			var isCompressed = \/\\.dds$\/i.test( sourceFile );$/;"	r
isCube	three.js	/^		var isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );$/;"	r
isCubemap	three.js	/^		dds.isCubemap = header[ off_caps2 ] & DDSCAPS2_CUBEMAP ? true : false;$/;"	r
isFaceMaterial	three.js	/^				isFaceMaterial = object.material instanceof THREE.MeshFaceMaterial;$/;"	r
isFaceMaterial	three.js	/^				var isFaceMaterial = object.material instanceof THREE.MeshFaceMaterial;$/;"	r
isImagePowerOfTwo	three.js	/^				isImagePowerOfTwo = isPowerOfTwo( image.width ) && isPowerOfTwo( image.height ),$/;"	r
isImagePowerOfTwo	three.js	/^			isImagePowerOfTwo = isPowerOfTwo( image.width ) && isPowerOfTwo( image.height ),$/;"	r
isIntersectionBox	three.js	/^	isIntersectionBox: function ( box ) {$/;"	r
isIntersectionLine	three.js	/^	isIntersectionLine: function ( line ) {$/;"	r
isIntersectionPlane	three.js	/^	isIntersectionPlane: function ( plane ) {$/;"	r
isIntersectionSphere	three.js	/^	isIntersectionSphere: function ( sphere ) {$/;"	r
isPaused	three.js	/^	this.isPaused  = false;$/;"	r
isPaused	three.js	/^	this.isPaused = !this.isPaused;$/;"	r
isPaused	three.js	/^	this.isPaused = false;$/;"	r
isPaused	three.js	/^	this.isPaused = true;$/;"	r
isPlaying	three.js	/^		this.isPlaying = true;$/;"	r
isPlaying	three.js	/^	this.isPlaying = false;$/;"	r
isPowerOfTwo	three.js	/^	function isPowerOfTwo ( value ) {$/;"	r
isQuad	three.js	/^			isQuad              = isBitSet( type, 0 );$/;"	r
isQuad	three.js	/^		isQuad,$/;"	r
isTargetPowerOfTwo	three.js	/^			var isTargetPowerOfTwo = isPowerOfTwo( renderTarget.width ) && isPowerOfTwo( renderTarget.height ),$/;"	r
isVirtual	three.js	/^		virtualLight.isVirtual = true;$/;"	r
is_pow2	three.js	/^		function is_pow2( n ) {$/;"	r
isolatedPointsMap	three.js	/^			isolatedPointsMap = {};$/;"	r
isolatedPts	three.js	/^			isolatedPts = shapeWithoutHoles.isolatedPts;$/;"	r
isolatedPts	three.js	/^			isolatedPts: verts, \/* isolated faces *\/$/;"	r
item	three.js	/^		item = this.actions[ i ];$/;"	r
itemEnd	three.js	/^	this.itemEnd = function ( url ) {$/;"	r
itemSize	three.js	/^					itemSize: 3,$/;"	r
itemSize	three.js	/^				itemSize: 4,$/;"	r
itemStart	three.js	/^	this.itemStart = function ( url ) {$/;"	r
iw	three.js	/^		var iw = -qx * x - qy * y - qz * z;$/;"	r
ix	three.js	/^		var ix =  qw * x + qy * z - qz * y;$/;"	r
ix	three.js	/^	var ix, iz;$/;"	r
iy	three.js	/^		var iy =  qw * y + qz * x - qx * z;$/;"	r
iz	three.js	/^		var iz =  qw * z + qx * y - qy * x;$/;"	r
j	three.js	/^							_gl.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );$/;"	r
j	three.js	/^			j = i;$/;"	r
j	three.js	/^			var j = 0;$/;"	r
j	three.js	/^			var j, jl;$/;"	r
j	three.js	/^		\/\/ console.log('i,j,k', i, j , k)$/;"	r
j	three.js	/^		var j, jl;$/;"	r
j	three.js	/^		var j, k;$/;"	r
jl	three.js	/^						for( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {$/;"	r
jl	three.js	/^					for ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {$/;"	r
jl	three.js	/^				for ( j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {$/;"	r
jl	three.js	/^				for ( j = 0, jl = geometry.faceUvs.length; j < jl; j ++ ) {$/;"	r
jl	three.js	/^				for ( j = 0, jl = geometry.faceVertexUvs.length; j < jl; j ++ ) {$/;"	r
jl	three.js	/^				for ( j = 0, jl = offsets.length; j < jl; ++ j ) {$/;"	r
jl	three.js	/^			for ( j = 0, jl = renderList.length; j < jl; j ++ ) {$/;"	r
jl	three.js	/^			for ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {$/;"	r
jl	three.js	/^			for ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {$/;"	r
jl	three.js	/^			for ( var j = 0, jl = face.vertexTangents.length; j < jl; j ++ ) {$/;"	r
jl	three.js	/^			for ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {$/;"	r
jl	three.js	/^			for ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {$/;"	r
jl	three.js	/^			for ( var j = 0, jl = uv.length; j < jl; j ++ ) {$/;"	r
jl	three.js	/^		for ( j = 0, jl = offsets.length; j < jl; ++ j ) {$/;"	r
jl	three.js	/^		for ( j = 0, jl = renderList.length; j < jl; j ++ ) {$/;"	r
jl	three.js	/^		for ( j = 0, jl = uniforms.length; j < jl; j ++ ) {$/;"	r
jl	three.js	/^		for ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {$/;"	r
jl	three.js	/^		for ( var j = 0, jl = face.vertexTangents.length; j < jl; j ++ ) {$/;"	r
jl	three.js	/^		for ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {$/;"	r
jl	three.js	/^		for ( var j = 0, jl = points.length; j < jl; j ++ ) {$/;"	r
jp	three.js	/^			jp = (j + 1) % this.radialSegments;$/;"	r
jp	three.js	/^			var jp = ( j + 1 ) % this.tubularSegments;$/;"	r
json	three.js	/^					var json = JSON.parse( xhr.responseText );$/;"	r
jsonLoader	three.js	/^					var jsonLoader = this.geometryHandlers[ "ascii" ][ "loaderObject" ];$/;"	r
k	three.js	/^				var k = Math.floor( j \/ 2 );$/;"	r
k	three.js	/^			k = i - 1;$/;"	r
k	three.js	/^		k = 0,$/;"	r
k	three.js	/^		var k = 1 - t;$/;"	r
key	three.js	/^				key = face[ f ].x + ":" + face[ f ].y;$/;"	r
key	three.js	/^			key = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );$/;"	r
key	three.js	/^			key = allpoints[ i ].x + ":" + allpoints[ i ].y;$/;"	r
key	three.js	/^			key, index,$/;"	r
key	three.js	/^			var key = edge.toString();$/;"	r
key	three.js	/^		key = key % keys.length;$/;"	r
key	three.js	/^		key = key < keys.length - 1 ? key : keys.length - 1;$/;"	r
key	three.js	/^		key = key > 0 ? key : 0;$/;"	r
key	three.js	/^		key = key >= 0 ? key : key + keys.length;$/;"	r
key	three.js	/^	key = key % keys.length;$/;"	r
key	three.js	/^	key = key >= 0 ? key : key + keys.length;$/;"	r
keyframe	three.js	/^		var keyframe = animation.startFrame + THREE.Math.clamp( Math.floor( animation.time \/ frameTime ), 0, animation.length - 1 );$/;"	r
keyframe	three.js	/^	var keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time \/ frameTime ), 0, this.length - 1 );$/;"	r
keys	three.js	/^			var keys = this.data.hierarchy[h].keys,$/;"	r
keys	three.js	/^			var keys = this.data.hierarchy[h].keys;$/;"	r
keys	three.js	/^		var keys = Object.keys( source );$/;"	r
keys	three.js	/^		var keys = [ 'a', 'b', 'c', 'd' ];$/;"	r
keys	three.js	/^		var keys = node.keys,$/;"	r
keys	three.js	/^		var keys = this.data.hierarchy[h].keys,$/;"	r
keys	three.js	/^	var keys = [ 'a', 'b', 'c', 'd' ];$/;"	r
keys	three.js	/^	var keys = this.data.hierarchy[ h ].keys;$/;"	r
l	three.js	/^			for ( i = 0, l = json.morphColors.length; i < l; i++ ) {$/;"	r
l	three.js	/^			for ( i = 0, l = json.morphTargets.length; i < l; i ++ ) {$/;"	r
l	three.js	/^			for ( i = 0, l = json.skinIndices.length; i < l; i += 2 ) {$/;"	r
l	three.js	/^			for ( i = 0, l = json.skinWeights.length; i < l; i += 2 ) {$/;"	r
l	three.js	/^			for ( var i = 0, l = json.length; i < l; i ++ ) {$/;"	r
l	three.js	/^			for ( var i = 0, l = listenerArray.length; i < l; i ++ ) {$/;"	r
l	three.js	/^			for ( var i = 1, l = this.objects.length; i < l; i ++ ) {$/;"	r
l	three.js	/^			hsl.l = lightness;$/;"	r
l	three.js	/^			l = 1 \/ l;$/;"	r
l	three.js	/^			var l = Math.log( n ) \/ Math.LN2;$/;"	r
l	three.js	/^			var l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] );$/;"	r
l	three.js	/^		for ( i = 0, l = holes.length; i < l; i++ ) {$/;"	r
l	three.js	/^		for ( var i = 0, l = descendants.length; i < l; i ++ ) {$/;"	r
l	three.js	/^		for ( var i = 0, l = faces.length; i < l; i ++ ) {$/;"	r
l	three.js	/^		for ( var i = 0, l = materials.length; i < l; i ++ ) {$/;"	r
l	three.js	/^		for ( var i = 0, l = object.children.length; i < l; i ++ ) {$/;"	r
l	three.js	/^		for ( var i = 0, l = objects.length; i < l; i ++ ) {$/;"	r
l	three.js	/^		for ( var i = 0, l = this.children.length; i < l; i ++ ) {$/;"	r
l	three.js	/^		for( i = 0, l = identifiers.length; i < l; i ++ ) {$/;"	r
l	three.js	/^		var i, p, l = this.points.length,$/;"	r
l	three.js	/^		var l = this.length();$/;"	r
l	three.js	/^		var l, ll, light, n,$/;"	r
l	three.js	/^	for ( i = 0, l = holes.length; i < l; i++ ) {$/;"	r
l	three.js	/^	for ( var i = 0, l = f.length; i < l; i ++ ) {$/;"	r
l	three.js	/^	for ( var i = 0, l = faces.length; i < l; i ++ ) {$/;"	r
l	three.js	/^	for ( var i = 0, l = shapes.length; i < l; i++ ) {$/;"	r
l	three.js	/^	for ( var i = 0, l = this.children.length; i < l; i ++ ) {$/;"	r
l	three.js	/^	for ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {$/;"	r
l	three.js	/^	for ( var i = 0, l = this.vertices.length; i < l; i ++ ) {$/;"	r
l	three.js	/^	for ( var i = 0, l = vertices.length; i < l; i ++ ) {$/;"	r
l	three.js	/^	for ( var i = 1, l = this.objects.length; i < l; i ++ ) {$/;"	r
l	three.js	/^	var child, i, l = this.children.length;$/;"	r
label	three.js	/^					var label = matJSON.parameters.materials[ i ];$/;"	r
label	three.js	/^			var label = parts[ 1 ];$/;"	r
last	three.js	/^			var last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );$/;"	r
last	three.js	/^		last = current;$/;"	r
last	three.js	/^	var current, last = this.getPoint( 0 );$/;"	r
lastFrame	three.js	/^			animation.lastFrame = animation.currentFrame;$/;"	r
lastFrame	three.js	/^		lastFrame: 0,$/;"	r
lastIndex	three.js	/^						var lastIndex = keys.length - 1;$/;"	r
lastKeyframe	three.js	/^		this.lastKeyframe = this.currentKeyframe;$/;"	r
lastKeyframe	three.js	/^	object.lastKeyframe = this.lastKeyframe;$/;"	r
lastKeyframe	three.js	/^	this.lastKeyframe = 0;$/;"	r
lastPath	three.js	/^				lastPath = new THREE.Path();$/;"	r
lastPoint	three.js	/^	var lastPoint = curve.getPoint(aClockwise ? 1 : 0);$/;"	r
lastPoint	three.js	/^	var lastPoint = points[ points.length - 1];$/;"	r
lastTime	three.js	/^			lastTime = currTime + timeToCall;$/;"	r
lastTime	three.js	/^	var lastTime = 0;$/;"	r
lastargs	three.js	/^	var lastargs = this.actions[ this.actions.length - 1 ].args;$/;"	r
lastargs	three.js	/^	var lastargs = this.actions[ this.actions.length - 1].args;$/;"	r
laste	three.js	/^					laste = pts[ pts.length - 1 ];$/;"	r
laste	three.js	/^				laste = points[ points.length - 1 ];$/;"	r
laste	three.js	/^				laste = this.actions[ i - 1 ].args;$/;"	r
laste	three.js	/^			laste = this.actions[ i - 1 ].args;$/;"	r
laste	three.js	/^			laste,$/;"	r
laste	three.js	/^		laste, j,$/;"	r
layer	three.js	/^			layer = steps + bevelSegments * 2;$/;"	r
layer	three.js	/^			var layer = 0 ; \/\/ steps + 1$/;"	r
layeroffset	three.js	/^		var layeroffset = 0;$/;"	r
left	three.js	/^		shadowCamera.left = _min.x;$/;"	r
left	three.js	/^		var left = aspect * bottom;$/;"	r
left	three.js	/^	this.cameraO.left = -halfWidth;$/;"	r
left	three.js	/^	this.left = -width \/ 2;$/;"	r
left	three.js	/^	this.left = left;$/;"	r
length	three.js	/^					length = xhr.getResponseHeader( "Content-Length" );$/;"	r
length	three.js	/^				activeInfluenceIndices.length = material.numSupportedMorphTargets;$/;"	r
length	three.js	/^				length = xhr.getResponseHeader( "Content-Length" );$/;"	r
length	three.js	/^			length = chars.length;$/;"	r
length	three.js	/^			length = outline.length;$/;"	r
length	three.js	/^		_renderData.elements.length = 0;$/;"	r
length	three.js	/^		_renderData.lights.length = 0;$/;"	r
length	three.js	/^		_renderData.objects.length = 0;$/;"	r
length	three.js	/^		_renderData.sprites.length = 0;$/;"	r
length	three.js	/^		length: end - start + 1,$/;"	r
length	three.js	/^		var length = face instanceof THREE.Face4 ? 4 : 3;$/;"	r
length	three.js	/^		zlights.directional.length = dirLength;$/;"	r
length	three.js	/^		zlights.hemi.length = hemiLength;$/;"	r
length	three.js	/^		zlights.point.length = pointLength;$/;"	r
length	three.js	/^		zlights.spot.length = spotLength;$/;"	r
length	three.js	/^	length: function () {$/;"	r
length	three.js	/^	this.length = this.endKeyframe - this.startKeyframe + 1;$/;"	r
length	three.js	/^	this.scale.set( length, length, length );$/;"	r
length	three.js	/^	var length = 0;$/;"	r
lengthAfter	three.js	/^    var lengthAfter = arcLengths[ i + 1 ];$/;"	r
lengthBefore	three.js	/^	var lengthBefore = arcLengths[ i ];$/;"	r
lengthInFrames	three.js	/^		var lengthInFrames = parseInt( data.length * data.fps, 10 );$/;"	r
lengthManhattan	three.js	/^	lengthManhattan: function () {$/;"	r
lengthSq	three.js	/^	lengthSq: function () {$/;"	r
lengths	three.js	/^	var lengths = [], sums = 0;$/;"	r
lengths	three.js	/^	var lengths = this.getLengths();$/;"	r
lens	three.js	/^	var lens = this.getCurveLengths();$/;"	r
lensFlares	three.js	/^	this.lensFlares = [];$/;"	r
lerp	three.js	/^	lerp: function ( color, alpha ) {$/;"	r
lerp	three.js	/^	lerp: function ( v, alpha ) {$/;"	r
library	three.js	/^	var library = {};$/;"	r
light	three.js	/^							light = new THREE.AmbientLight( hex );$/;"	r
light	three.js	/^							light = new THREE.DirectionalLight( hex, intensity );$/;"	r
light	three.js	/^							light = new THREE.PointLight( hex, intensity, dst );$/;"	r
light	three.js	/^				var light = lights[ i ];$/;"	r
light	three.js	/^			light = lights[ i ];$/;"	r
light	three.js	/^			light = lights[ l ];$/;"	r
light	three.js	/^			light = scene.__lights[ i ];$/;"	r
light	three.js	/^			light, hex, intensity,$/;"	r
light	three.js	/^			var light = _lights[ l ];$/;"	r
light	three.js	/^			var light = lights[ l ];$/;"	r
light	three.js	/^	this.light = light;$/;"	r
light	three.js	/^	var light = new THREE.AmbientLight();$/;"	r
light	three.js	/^	var light = new THREE.DirectionalLight();$/;"	r
light	three.js	/^	var light = new THREE.PointLight();$/;"	r
light	three.js	/^	var light = new THREE.SpotLight();$/;"	r
lightColor	three.js	/^			var lightColor = light.color;$/;"	r
lightDistance	three.js	/^	this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );$/;"	r
lightMap	three.js	/^			lightMap: !!material.lightMap,$/;"	r
lightMap	three.js	/^	material.lightMap = this.lightMap;$/;"	r
lightMap	three.js	/^	this.lightMap = null;$/;"	r
lightPlane	three.js	/^	this.lightPlane = new THREE.Mesh( geometry, material );$/;"	r
lightPosition	three.js	/^				var lightPosition = _vector3.getPositionFromMatrix( light.matrixWorld ).normalize();$/;"	r
lightPosition	three.js	/^				var lightPosition = _vector3.getPositionFromMatrix( light.matrixWorld );$/;"	r
lightSphere	three.js	/^	this.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );$/;"	r
lightSphere	three.js	/^	this.lightSphere = new THREE.Mesh( geometry, material );$/;"	r
lightmap_fragment	three.js	/^	lightmap_fragment: [$/;"	r
lightmap_pars_fragment	three.js	/^	lightmap_pars_fragment: [$/;"	r
lightmap_pars_vertex	three.js	/^	lightmap_pars_vertex: [$/;"	r
lightmap_vertex	three.js	/^	lightmap_vertex: [$/;"	r
lightness	three.js	/^			var lightness = ( min + max ) \/ 2.0;$/;"	r
lights	three.js	/^					_this.renderBuffer( camera, lights, fog, material, buffer, object );$/;"	r
lights	three.js	/^					_this.renderBufferDirect( camera, lights, fog, material, buffer, object );$/;"	r
lights	three.js	/^				_this.renderImmediateObject( camera, lights, fog, material, object );$/;"	r
lights	three.js	/^				var parameters = { fragmentShader: shader.fragmentShader, vertexShader: shader.vertexShader, uniforms: uniforms, lights: true, fog: true };$/;"	r
lights	three.js	/^			_this.initMaterial( material, lights, fog, object );$/;"	r
lights	three.js	/^			lights: {},$/;"	r
lights	three.js	/^			var parameters = { fragmentShader: shader.fragmentShader, vertexShader: shader.vertexShader, uniforms: uniforms, lights: true, fog: true };$/;"	r
lights	three.js	/^		lights = [],$/;"	r
lights	three.js	/^		lights = scene.__lights,$/;"	r
lights	three.js	/^		var program = setProgram( camera, lights, fog, material, object );$/;"	r
lights	three.js	/^	function setProgram( camera, lights, fog, material, object ) {$/;"	r
lights	three.js	/^	lights: {$/;"	r
lights	three.js	/^	material.lights = this.lights;$/;"	r
lights	three.js	/^	this.initMaterial = function ( material, lights, fog, object ) {$/;"	r
lights	three.js	/^	this.lights = false; \/\/ set to use scene lights$/;"	r
lights	three.js	/^	this.renderBuffer = function ( camera, lights, fog, material, geometryGroup, object ) {$/;"	r
lights	three.js	/^	this.renderBufferDirect = function ( camera, lights, fog, material, geometry, object ) {$/;"	r
lights	three.js	/^	this.renderImmediateObject = function ( camera, lights, fog, material, object ) {$/;"	r
lights_lambert_pars_vertex	three.js	/^	lights_lambert_pars_vertex: [$/;"	r
lights_lambert_vertex	three.js	/^	lights_lambert_vertex: [$/;"	r
lights_phong_fragment	three.js	/^	lights_phong_fragment: [$/;"	r
lights_phong_pars_fragment	three.js	/^	lights_phong_pars_fragment: [$/;"	r
lights_phong_pars_vertex	three.js	/^	lights_phong_pars_vertex: [$/;"	r
lights_phong_vertex	three.js	/^	lights_phong_vertex: [$/;"	r
line	three.js	/^			var line = new THREE.RenderableLine();$/;"	r
line	three.js	/^	this.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: hex } ) );$/;"	r
lineArray	three.js	/^			_gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, lineArray, hint );$/;"	r
lineArray	three.js	/^		lineArray = geometryGroup.__lineArray,$/;"	r
lineCap	three.js	/^			_context.lineCap = value;$/;"	r
lineDistanceArray	three.js	/^			_gl.bufferData( _gl.ARRAY_BUFFER, lineDistanceArray, hint );$/;"	r
lineDistanceArray	three.js	/^		lineDistanceArray = geometry.__lineDistanceArray,$/;"	r
lineDistances	three.js	/^		lineDistances = geometry.lineDistances,$/;"	r
lineDistances	three.js	/^	this.lineDistances = [];$/;"	r
lineDistancesNeedUpdate	three.js	/^					geometry.lineDistancesNeedUpdate = true;$/;"	r
lineDistancesNeedUpdate	three.js	/^			geometry.lineDistancesNeedUpdate = false;$/;"	r
lineDistancesNeedUpdate	three.js	/^	this.lineDistancesNeedUpdate = false;$/;"	r
lineGeometry	three.js	/^	var lineGeometry = new THREE.Geometry();$/;"	r
lineJoin	three.js	/^			_context.lineJoin = value;$/;"	r
linePrecision	three.js	/^	THREE.Raycaster.prototype.linePrecision = 1;$/;"	r
lineTo	three.js	/^THREE.Path.prototype.lineTo = function ( x, y ) {$/;"	r
lineWidth	three.js	/^			_context.lineWidth = value;$/;"	r
linearAttenuation	three.js	/^	this.linearAttenuation = 0.5;$/;"	r
linearDistance	three.js	/^			linearDistance, realDistance,$/;"	r
linear_to_gamma_fragment	three.js	/^	linear_to_gamma_fragment: [$/;"	r
linecap	three.js	/^	material.linecap = this.linecap;$/;"	r
linecap	three.js	/^	this.linecap = 'round';$/;"	r
linejoin	three.js	/^	material.linejoin = this.linejoin;$/;"	r
linejoin	three.js	/^	this.linejoin = 'round';$/;"	r
linewidth	three.js	/^		var linewidth, a, attribute, i, il;$/;"	r
linewidth	three.js	/^		var linewidth, a, attribute;$/;"	r
linewidth	three.js	/^	THREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ), THREE.LinePieces );$/;"	r
linewidth	three.js	/^	function strokePath( color, linewidth, linecap, linejoin ) {$/;"	r
linewidth	three.js	/^	material.linewidth = this.linewidth;$/;"	r
linewidth	three.js	/^	this.linewidth = 1;$/;"	r
listenerArray	three.js	/^		var listenerArray = listeners[ event.type ];$/;"	r
listeners	three.js	/^		var listeners = this._listeners;$/;"	r
ll	three.js	/^		for ( l = 0, ll = lights.length; l < ll; l ++ ) {$/;"	r
ll	three.js	/^		for ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;$/;"	r
ll	three.js	/^		for ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;$/;"	r
ll	three.js	/^		for ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;$/;"	r
ll	three.js	/^		for ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;$/;"	r
ll	three.js	/^		for ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;$/;"	r
ll	three.js	/^		for ( var l = 0, ll = _lights.length; l < ll; l ++ ) {$/;"	r
ll	three.js	/^		for ( var l = 0, ll = lights.length; l < ll; l ++ ) {$/;"	r
ll	three.js	/^		for ( var l = 0, ll = lights.length; l < ll; l++ ) {$/;"	r
load	three.js	/^	load: function ( url, onLoad, onProgress, onError ) {$/;"	r
load	three.js	/^THREE.JSONLoader.prototype.load = function ( url, callback, texturePath ) {$/;"	r
loadAjaxJSON	three.js	/^THREE.JSONLoader.prototype.loadAjaxJSON = function ( context, url, callback, texturePath, callbackProgress ) {$/;"	r
loadCompressedTexture	three.js	/^	loadCompressedTexture: function ( url, mapping, onLoad, onError ) {$/;"	r
loadCompressedTextureCube	three.js	/^	loadCompressedTextureCube: function ( array, mapping, onLoad, onError ) {$/;"	r
loadCount	three.js	/^		images.loadCount = 0;$/;"	r
loadFace	three.js	/^	loadFace : function( data ) {$/;"	r
loadFace	three.js	/^self._typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };$/;"	r
loadTexture	three.js	/^	loadTexture: function ( url, mapping, onLoad, onError ) {$/;"	r
loadTextureCube	three.js	/^	loadTextureCube: function ( array, mapping, onLoad, onError ) {$/;"	r
loadUniformsGeneric	three.js	/^	function loadUniformsGeneric ( program, uniforms ) {$/;"	r
loadUniformsMatrices	three.js	/^	function loadUniformsMatrices ( uniforms, object ) {$/;"	r
load_image	three.js	/^		function load_image( where, url ) {$/;"	r
loaded	three.js	/^				callbackProgress( { total: length, loaded: xhr.responseText.length } );$/;"	r
loaded	three.js	/^			scope.onProgress( url, loaded, total );$/;"	r
loaded	three.js	/^	var loaded = 0, total = 0;$/;"	r
loadedModels	three.js	/^				loadedModels : total_models - counter_models,$/;"	r
loadedTextures	three.js	/^				loadedTextures : total_textures - counter_textures$/;"	r
loader	three.js	/^							var loader = scope.hierarchyHandlers[ objJSON.type ][ "loaderObject" ];$/;"	r
loader	three.js	/^				var loader = this.geometryHandlers[ geoJSON.type ][ "loaderObject" ];$/;"	r
loader	three.js	/^			var loader = new THREE.JSONLoader();$/;"	r
loader	three.js	/^			var loader = new THREE.MaterialLoader();$/;"	r
loader	three.js	/^		var loader = new THREE.ImageLoader( scope.manager );$/;"	r
loader	three.js	/^		var loader = new THREE.ImageLoader();$/;"	r
loader	three.js	/^		var loader = new THREE.XHRLoader( scope.manager );$/;"	r
loader	three.js	/^		var loader = new THREE.XHRLoader();$/;"	r
loaderClass	three.js	/^			var loaderClass = this.geometryHandlers[ typeID ][ "loaderClass" ];$/;"	r
loaderClass	three.js	/^			var loaderClass = this.hierarchyHandlers[ typeID ][ "loaderClass" ];$/;"	r
loaderParameters	three.js	/^							var loaderParameters = {};$/;"	r
loaderParameters	three.js	/^				var loaderParameters = {};$/;"	r
loading	three.js	/^							objJSON.loading = true;$/;"	r
localRay	three.js	/^	var localRay = new THREE.Ray();$/;"	r
localToWorld	three.js	/^	localToWorld: function ( vector ) {$/;"	r
location	three.js	/^			location = program.uniforms[ uniforms[ j ][ 1 ] ];$/;"	r
log	three.js	/^	log: function () {},$/;"	r
lookAt	three.js	/^	lookAt: function () {$/;"	r
lookAt	three.js	/^	lookAt: function() {$/;"	r
lookAt	three.js	/^THREE.Camera.prototype.lookAt = function () {$/;"	r
loop	three.js	/^		this.loop = loop !== undefined ? loop : true;$/;"	r
loop	three.js	/^	this.loop = true;$/;"	r
looped	three.js	/^	looped 				= currentTime < unloopedCurrentTime;$/;"	r
looped	three.js	/^	var looped;$/;"	r
low	three.js	/^			low = i + 1;$/;"	r
low	three.js	/^	var low = 0, high = il - 1, comparison;$/;"	r
lx	three.js	/^				var lx = x - 1 < 0 ? 0 : x - 1;$/;"	r
ly	three.js	/^				var ly = y - 1 < 0 ? 0 : y - 1;$/;"	r
m	three.js	/^			var influenceIndex, m = 0;$/;"	r
m	three.js	/^			var m = 0;$/;"	r
m	three.js	/^			var m = materials[ i ];$/;"	r
m	three.js	/^		m, ml, i, il,$/;"	r
m	three.js	/^		var m = this.elements;$/;"	r
m	three.js	/^		var m, ml;$/;"	r
m	three.js	/^		var tmp, m = this.elements;$/;"	r
m1	three.js	/^		var m1 = new THREE.Matrix4();$/;"	r
m1	three.js	/^	var m1 = new THREE.Matrix4();$/;"	r
m11	three.js	/^			m11 = te[0], m12 = te[4], m13 = te[8],$/;"	r
m11	three.js	/^		var m11 = te[0], m12 = te[4], m13 = te[8];$/;"	r
m21	three.js	/^			m21 = te[1], m22 = te[5], m23 = te[9],$/;"	r
m21	three.js	/^		var m21 = te[1], m22 = te[5], m23 = te[9];$/;"	r
m31	three.js	/^			m31 = te[2], m32 = te[6], m33 = te[10],$/;"	r
m31	three.js	/^			m31 = te[2], m32 = te[6], m33 = te[10];$/;"	r
m31	three.js	/^		var m31 = te[2], m32 = te[6], m33 = te[10];$/;"	r
mFar	three.js	/^				"float color = 1.0 - smoothstep( mNear, mFar, depth );",$/;"	r
m_uniforms	three.js	/^			m_uniforms = material.uniforms;$/;"	r
magFilter	three.js	/^					texture.magFilter = THREE[ textureJSON.magFilter ];$/;"	r
magFilter	three.js	/^				var pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };$/;"	r
magFilter	three.js	/^			this.boneTexture.magFilter = THREE.NearestFilter;$/;"	r
magFilter	three.js	/^		texture.magFilter = this.magFilter;$/;"	r
magFilter	three.js	/^		tmp.magFilter = this.magFilter;$/;"	r
magFilter	three.js	/^	this.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;$/;"	r
magFilter	three.js	/^	this.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;$/;"	r
magFilter	three.js	/^	this.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );$/;"	r
make	three.js	/^	function make( v1, v2, v3 ) {$/;"	r
makeEmpty	three.js	/^	makeEmpty: function () {$/;"	r
makeFrustum	three.js	/^	makeFrustum: function ( left, right, bottom, top, near, far ) {$/;"	r
makeGeometry	three.js	/^THREE.Shape.prototype.makeGeometry = function ( options ) {$/;"	r
makeOrthographic	three.js	/^	makeOrthographic: function ( left, right, top, bottom, near, far ) {$/;"	r
makePerspective	three.js	/^	makePerspective: function ( fov, aspect, near, far ) {$/;"	r
makeRotationAxis	three.js	/^	makeRotationAxis: function ( axis, angle ) {$/;"	r
makeRotationFromEuler	three.js	/^	makeRotationFromEuler: function ( euler ) {$/;"	r
makeRotationFromQuaternion	three.js	/^	makeRotationFromQuaternion: function ( q ) {$/;"	r
makeRotationX	three.js	/^	makeRotationX: function ( theta ) {$/;"	r
makeRotationY	three.js	/^	makeRotationY: function ( theta ) {$/;"	r
makeRotationZ	three.js	/^	makeRotationZ: function ( theta ) {$/;"	r
makeScale	three.js	/^	makeScale: function ( x, y, z ) {$/;"	r
makeTranslation	three.js	/^	makeTranslation: function ( x, y, z ) {$/;"	r
manager	three.js	/^	this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;$/;"	r
map	three.js	/^			map: !!material.map,$/;"	r
map	three.js	/^		_lensFlare.uniforms.map            = _gl.getUniformLocation( _lensFlare.program, "map" );$/;"	r
map	three.js	/^		_sprite.uniforms.map                  = _gl.getUniformLocation( _sprite.program, "map" );$/;"	r
map	three.js	/^	material.map = this.map;$/;"	r
map	three.js	/^	this.map = new THREE.Texture();$/;"	r
map	three.js	/^	this.map = null;$/;"	r
mapLinear	three.js	/^	mapLinear: function ( x, a1, a2, b1, b2 ) {$/;"	r
map_fragment	three.js	/^	map_fragment: [$/;"	r
map_pars_fragment	three.js	/^	map_pars_fragment: [$/;"	r
map_pars_vertex	three.js	/^	map_pars_vertex: [$/;"	r
map_particle_fragment	three.js	/^	map_particle_fragment: [$/;"	r
map_particle_pars_fragment	three.js	/^	map_particle_pars_fragment: [$/;"	r
map_vertex	three.js	/^	map_vertex: [$/;"	r
mapping	three.js	/^				textureJSON.mapping = new THREE[ textureJSON.mapping ]();$/;"	r
mapping	three.js	/^		texture.mapping = mapping;$/;"	r
mapping	three.js	/^		texture.mapping = this.mapping;$/;"	r
mapping	three.js	/^	loadCompressedTexture: function ( url, mapping, onLoad, onError ) {$/;"	r
mapping	three.js	/^	loadCompressedTextureCube: function ( array, mapping, onLoad, onError ) {$/;"	r
mapping	three.js	/^	loadTexture: function ( url, mapping, onLoad, onError ) {$/;"	r
mapping	three.js	/^	loadTextureCube: function ( array, mapping, onLoad, onError ) {$/;"	r
mapping	three.js	/^	this.mapping = mapping !== undefined ? mapping : new THREE.UVMapping();$/;"	r
mapping	three.js	/^THREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {$/;"	r
mat	three.js	/^							mat = objJSON.matrix;$/;"	r
mat	three.js	/^				handle_mesh( geo, mat, id );$/;"	r
mat	three.js	/^			var mat, dst, pos, rot, scl, quat;$/;"	r
mat	three.js	/^		function handle_mesh( geo, mat, id ) {$/;"	r
mat	three.js	/^		mat = new THREE.Matrix4(),$/;"	r
matID	three.js	/^		var matID, matJSON;$/;"	r
matJSON	three.js	/^			matJSON = data.materials[ matID ];$/;"	r
material	three.js	/^								material = new THREE.MeshFaceMaterial( result.face_materials[ objJSON.geometry ] );$/;"	r
material	three.js	/^							material = result.materials[ objJSON.material ];$/;"	r
material	three.js	/^						_line.material = object.material;$/;"	r
material	three.js	/^						material = _depthMaterial;$/;"	r
material	three.js	/^						material = _depthMaterialMorph;$/;"	r
material	three.js	/^						material = object.customDepthMaterial;$/;"	r
material	three.js	/^						material = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;$/;"	r
material	three.js	/^					_face.material = material;$/;"	r
material	three.js	/^					_particle.material = object.material;$/;"	r
material	three.js	/^					child.material = material;$/;"	r
material	three.js	/^					material = _depthMaterial;$/;"	r
material	three.js	/^					material = _depthMaterialMorph;$/;"	r
material	three.js	/^					material = object.customDepthMaterial;$/;"	r
material	three.js	/^					material = overrideMaterial;$/;"	r
material	three.js	/^					material = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;$/;"	r
material	three.js	/^					material = webglObject[ materialType ];$/;"	r
material	three.js	/^					var material = isFaceMaterial === true ? objectMaterials[ face.materialIndex ] : object.material;$/;"	r
material	three.js	/^					var material = isFaceMaterial === true$/;"	r
material	three.js	/^					var material = materials[ data.material ];$/;"	r
material	three.js	/^				material = getBufferMaterial( object, geometryGroup );$/;"	r
material	three.js	/^				material = new THREE.MeshBasicMaterial( {$/;"	r
material	three.js	/^				material = new THREE.MeshDepthMaterial( {$/;"	r
material	three.js	/^				material = new THREE.MeshLambertMaterial( {$/;"	r
material	three.js	/^				material = new THREE.MeshNormalMaterial( {$/;"	r
material	three.js	/^				material = new THREE.MeshPhongMaterial( {$/;"	r
material	three.js	/^				material = new THREE.ShaderMaterial( parameters );$/;"	r
material	three.js	/^				material = new THREE[ matJSON.type ]( matJSON.parameters );$/;"	r
material	three.js	/^				material = object.material;$/;"	r
material	three.js	/^				var material = loader.parse( data );$/;"	r
material	three.js	/^				var material = object.material;$/;"	r
material	three.js	/^			material = getBufferMaterial( object, geometry );$/;"	r
material	three.js	/^			material = getBufferMaterial( object, geometryGroup ),$/;"	r
material	three.js	/^			material = meshMaterial.materials[ materialIndex ];$/;"	r
material	three.js	/^			material = meshMaterial;$/;"	r
material	three.js	/^			material = object.material;$/;"	r
material	three.js	/^			material = sprite.material;$/;"	r
material	three.js	/^			material, materialIndex, meshMaterial;$/;"	r
material	three.js	/^			var material = element.material;$/;"	r
material	three.js	/^			var material = new THREE.ShaderMaterial( parameters );$/;"	r
material	three.js	/^			var material = new THREE[ mtype ]( mpars );$/;"	r
material	three.js	/^			var material = null;$/;"	r
material	three.js	/^			var material = scene.overrideMaterial;$/;"	r
material	three.js	/^		var material = event.target;$/;"	r
material	three.js	/^		var material = object.material;$/;"	r
material	three.js	/^		var material;$/;"	r
material	three.js	/^	material = new THREE.LineBasicMaterial( { fog: false } );$/;"	r
material	three.js	/^	this.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();$/;"	r
material	three.js	/^	this.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );$/;"	r
material	three.js	/^	this.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );$/;"	r
material	three.js	/^	this.material = material !== undefined ? material : new THREE.ParticleBasicMaterial( { color: Math.random() * 0xffffff } );$/;"	r
material	three.js	/^	this.material = material;$/;"	r
material	three.js	/^	this.material = null;$/;"	r
material	three.js	/^	var material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );$/;"	r
material	three.js	/^	var material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );$/;"	r
material	three.js	/^	var material = new THREE.LineBasicMaterial();$/;"	r
material	three.js	/^	var material = new THREE.LineDashedMaterial();$/;"	r
material	three.js	/^	var material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );$/;"	r
material	three.js	/^	var material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );$/;"	r
material	three.js	/^	var material = new THREE.MeshBasicMaterial();$/;"	r
material	three.js	/^	var material = new THREE.MeshDepthMaterial();$/;"	r
material	three.js	/^	var material = new THREE.MeshLambertMaterial();$/;"	r
material	three.js	/^	var material = new THREE.MeshNormalMaterial();$/;"	r
material	three.js	/^	var material = new THREE.MeshPhongMaterial();$/;"	r
material	three.js	/^	var material = new THREE.ParticleBasicMaterial();$/;"	r
material	three.js	/^	var material = new THREE.ParticleCanvasMaterial();$/;"	r
material	three.js	/^	var material = new THREE.ShaderMaterial();$/;"	r
material	three.js	/^	var material = new THREE.SpriteMaterial();$/;"	r
material	three.js	/^	var material = options.material;$/;"	r
material	three.js	/^THREE.Line = function ( geometry, material, type ) {$/;"	r
material	three.js	/^THREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {$/;"	r
materialArray	three.js	/^				var materialArray = [];$/;"	r
materialIndex	three.js	/^				face.materialIndex = materialIndex;$/;"	r
materialIndex	three.js	/^				materialIndex = faces[ offset ++ ];$/;"	r
materialIndex	three.js	/^				triA.materialIndex = face.materialIndex;$/;"	r
materialIndex	three.js	/^				triB.materialIndex = face.materialIndex;$/;"	r
materialIndex	three.js	/^			faceCopy.materialIndex = face.materialIndex + materialIndexOffset;$/;"	r
materialIndex	three.js	/^			materialIndex = buffer.materialIndex;$/;"	r
materialIndex	three.js	/^			materialIndex = usesFaceMaterial ? face.materialIndex : 0;$/;"	r
materialIndex	three.js	/^		face.materialIndex = this.materialIndex;$/;"	r
materialIndex	three.js	/^	this.materialIndex = materialIndex !== undefined ? materialIndex : 0;$/;"	r
materialIndexMap	three.js	/^		var materialIndexMap = {};$/;"	r
materialNeedsSmoothNormals	three.js	/^	function materialNeedsSmoothNormals ( material ) {$/;"	r
materialType	three.js	/^	function renderObjectsImmediate ( renderList, materialType, camera, lights, fog, useBlending, overrideMaterial ) {$/;"	r
materials	three.js	/^			materials: {},$/;"	r
materials	three.js	/^		return { geometry: geometry, materials: materials };$/;"	r
materials	three.js	/^		var materials = this.initMaterials( json.materials, texturePath );$/;"	r
materials	three.js	/^		var materials = this.parseMaterials( json.materials );$/;"	r
materials	three.js	/^		var materials = {};$/;"	r
materials	three.js	/^	this.materials = materials instanceof Array ? materials : [];$/;"	r
matrix	three.js	/^					object.matrix = animationCache.originalMatrix;$/;"	r
matrix	three.js	/^				obj.matrix = original;$/;"	r
matrix	three.js	/^				object.matrix = JIThierarchy[ h ][ frame ];$/;"	r
matrix	three.js	/^			matrix = object2.matrix;$/;"	r
matrix	three.js	/^			var matrix = object.matrixWorld;$/;"	r
matrix	three.js	/^		var matrix = new THREE.Matrix4();$/;"	r
matrix	three.js	/^		var matrix, normalMatrix,$/;"	r
matrix	three.js	/^	this.matrix = new THREE.Matrix4();$/;"	r
matrixAutoUpdate	three.js	/^								object.matrixAutoUpdate = false;$/;"	r
matrixAutoUpdate	three.js	/^			obj.matrixAutoUpdate = false;$/;"	r
matrixAutoUpdate	three.js	/^			object.matrixAutoUpdate = true;$/;"	r
matrixAutoUpdate	three.js	/^		object.matrixAutoUpdate = this.matrixAutoUpdate;$/;"	r
matrixAutoUpdate	three.js	/^	object.matrixAutoUpdate = this.matrixAutoUpdate;$/;"	r
matrixAutoUpdate	three.js	/^	this.cone.matrixAutoUpdate = false;$/;"	r
matrixAutoUpdate	three.js	/^	this.line.matrixAutoUpdate = false;$/;"	r
matrixAutoUpdate	three.js	/^	this.matrixAutoUpdate = false;$/;"	r
matrixAutoUpdate	three.js	/^	this.matrixAutoUpdate = true;$/;"	r
matrixPosition	three.js	/^	var matrixPosition = new THREE.Vector3();$/;"	r
matrixWorld	three.js	/^	this.matrixWorld = camera.matrixWorld;$/;"	r
matrixWorld	three.js	/^	this.matrixWorld = light.matrixWorld;$/;"	r
matrixWorld	three.js	/^	this.matrixWorld = new THREE.Matrix4();$/;"	r
matrixWorld	three.js	/^	this.matrixWorld = object.matrixWorld;$/;"	r
matrixWorld	three.js	/^	this.matrixWorld = this.light.matrixWorld;$/;"	r
matrixWorldInverse	three.js	/^		var matrixWorldInverse = new THREE.Matrix4();$/;"	r
matrixWorldInverse	three.js	/^	this.matrixWorldInverse = new THREE.Matrix4();$/;"	r
matrixWorldNeedsUpdate	three.js	/^				obj.matrixWorldNeedsUpdate = true;$/;"	r
matrixWorldNeedsUpdate	three.js	/^				object.matrixWorldNeedsUpdate = false;$/;"	r
matrixWorldNeedsUpdate	three.js	/^				object.matrixWorldNeedsUpdate = true;$/;"	r
matrixWorldNeedsUpdate	three.js	/^			obj.matrixWorldNeedsUpdate = true;$/;"	r
matrixWorldNeedsUpdate	three.js	/^			object.matrixWorldNeedsUpdate = true;$/;"	r
matrixWorldNeedsUpdate	three.js	/^			this.matrixWorldNeedsUpdate = false;$/;"	r
matrixWorldNeedsUpdate	three.js	/^		object.matrixWorldNeedsUpdate = this.matrixWorldNeedsUpdate;$/;"	r
matrixWorldNeedsUpdate	three.js	/^		this.matrixWorldNeedsUpdate = false;$/;"	r
matrixWorldNeedsUpdate	three.js	/^		this.matrixWorldNeedsUpdate = true;$/;"	r
matrixWorldNeedsUpdate	three.js	/^	this.matrixWorldNeedsUpdate = true;$/;"	r
max	three.js	/^			var max = Math.max( r, g, b );$/;"	r
max	three.js	/^		var max = Math.max( x0, Math.max( x1, x2 ) );$/;"	r
max	three.js	/^	max: function ( v ) {$/;"	r
max	three.js	/^	this.max = ( max !== undefined ) ? max : new THREE.Vector2( -Infinity, -Infinity );$/;"	r
max	three.js	/^	this.max = ( max !== undefined ) ? max : new THREE.Vector3( -Infinity, -Infinity, -Infinity );$/;"	r
max	three.js	/^	var max = geometry.boundingBox.max;$/;"	r
maxBones	three.js	/^				maxBones = Math.min( object.bones.length, maxBones );$/;"	r
maxBones	three.js	/^			maxBones: maxBones,$/;"	r
maxBones	three.js	/^			var maxBones = nVertexMatrices;$/;"	r
maxBones	three.js	/^		maxBones = allocateBones( object );$/;"	r
maxDimension	three.js	/^		var maxDimension = Math.max( image.width, image.height );$/;"	r
maxDirLights	three.js	/^			maxDirLights: maxLightCount.directional,$/;"	r
maxHemiLights	three.js	/^			maxHemiLights: maxLightCount.hemi,$/;"	r
maxLightCount	three.js	/^		maxLightCount = allocateLights( lights );$/;"	r
maxMorphNormals	three.js	/^			maxMorphNormals: this.maxMorphNormals,$/;"	r
maxMorphNormals	three.js	/^	this.maxMorphNormals = 4;$/;"	r
maxMorphTargets	three.js	/^			maxMorphTargets: this.maxMorphTargets,$/;"	r
maxMorphTargets	three.js	/^	this.maxMorphTargets = 8;$/;"	r
maxPointLights	three.js	/^			maxPointLights: maxLightCount.point,$/;"	r
maxRadiusSq	three.js	/^			maxRadiusSq = Math.max( maxRadiusSq, radiusSq );$/;"	r
maxRadiusSq	three.js	/^			var radiusSq, maxRadiusSq = 0;$/;"	r
maxRadiusSq	three.js	/^		var radiusSq, maxRadiusSq = 0;$/;"	r
maxShadows	three.js	/^			maxShadows: maxShadows,$/;"	r
maxShadows	three.js	/^		maxShadows = allocateShadows( lights );$/;"	r
maxShadows	three.js	/^		var maxShadows = 0;$/;"	r
maxSpotLights	three.js	/^			maxSpotLights: maxLightCount.spot,$/;"	r
maxX	three.js	/^		maxX: maxX,$/;"	r
maxX	three.js	/^	maxX = maxY = Number.NEGATIVE_INFINITY;$/;"	r
maxX	three.js	/^	var maxX, maxY, maxZ;$/;"	r
maxY	three.js	/^		maxY: maxY,$/;"	r
maxZ	three.js	/^		ret.maxZ = maxZ;$/;"	r
me	three.js	/^			var me = m.elements;$/;"	r
me	three.js	/^		var me = m.elements;$/;"	r
me	three.js	/^		var me = matrix.elements;$/;"	r
me0	three.js	/^		var me0 = me[0], me1 = me[1], me2 = me[2], me3 = me[3];$/;"	r
me12	three.js	/^		var me12 = me[12], me13 = me[13], me14 = me[14], me15 = me[15];$/;"	r
me4	three.js	/^		var me4 = me[4], me5 = me[5], me6 = me[6], me7 = me[7];$/;"	r
me8	three.js	/^		var me8 = me[8], me9 = me[9], me10 = me[10], me11 = me[11];$/;"	r
mediumpAvailable	three.js	/^	var mediumpAvailable = _vertexShaderPrecisionMediumpFloat.precision > 0 && _fragmentShaderPrecisionMediumpFloat.precision > 0;$/;"	r
memory	three.js	/^		memory: {$/;"	r
merge	three.js	/^	merge: function ( geometry1, object2 \/* mesh | geometry *\/, materialIndexOffset ) {$/;"	r
merge	three.js	/^	merge: function ( uniforms ) {$/;"	r
mergeVertices	three.js	/^	mergeVertices: function () {$/;"	r
merged	three.js	/^		var u, p, tmp, merged = {};$/;"	r
meshMaterial	three.js	/^		meshMaterial = object.material;$/;"	r
message	three.js	/^		var message = "Loaded ";$/;"	r
metadata	three.js	/^				modelJson.metadata = data.metadata;$/;"	r
metal	three.js	/^			metal: material.metal,$/;"	r
metal	three.js	/^	material.metal = this.metal;$/;"	r
metal	three.js	/^	this.metal = false;$/;"	r
mid	three.js	/^				var mid = start + Math.floor( ( end - start ) \/ 2 );$/;"	r
midpoint	three.js	/^	midpoint: function ( optionalTarget ) {$/;"	r
midpoints	three.js	/^	var midpoints = [], p = this.vertices;$/;"	r
min	three.js	/^			var min = Math.min( r, g, b );$/;"	r
min	three.js	/^		var min = Math.min( x0, Math.min( x1, x2 ) );$/;"	r
min	three.js	/^	min: function ( v ) {$/;"	r
min	three.js	/^	smootherstep: function ( x, min, max ) {$/;"	r
min	three.js	/^	smoothstep: function ( x, min, max ) {$/;"	r
min	three.js	/^	this.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );$/;"	r
min	three.js	/^	this.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );$/;"	r
min	three.js	/^	var min = geometry.boundingBox.min;$/;"	r
minFilter	three.js	/^					texture.minFilter = THREE[ textureJSON.minFilter ];$/;"	r
minFilter	three.js	/^			this.boneTexture.minFilter = THREE.NearestFilter;$/;"	r
minFilter	three.js	/^		texture.minFilter = this.minFilter;$/;"	r
minFilter	three.js	/^		tmp.minFilter = this.minFilter;$/;"	r
minFilter	three.js	/^	this.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;$/;"	r
minFilter	three.js	/^	this.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;$/;"	r
minX	three.js	/^		minX: minX,$/;"	r
minX	three.js	/^	minX = minY = Number.POSITIVE_INFINITY;$/;"	r
minX	three.js	/^	var minX, minY, minZ;$/;"	r
minY	three.js	/^		minY: minY,$/;"	r
minZ	three.js	/^		ret.minZ = minZ;$/;"	r
mipmap	three.js	/^							mipmap = mipmaps[ j ];$/;"	r
mipmap	three.js	/^						mipmap = mipmaps[ i ];$/;"	r
mipmap	three.js	/^						var mipmap, mipmaps = cubeImage[ i ].mipmaps;$/;"	r
mipmap	three.js	/^					mipmap = mipmaps[ i ];$/;"	r
mipmap	three.js	/^				var mipmap = { "data": byteArray, "width": width, "height": height };$/;"	r
mipmap	three.js	/^			var mipmap, mipmaps = texture.mipmaps;$/;"	r
mipmapCount	three.js	/^			dds.mipmapCount = Math.max( 1, header[ off_mipmapCount ] );$/;"	r
mipmapCount	three.js	/^		dds.mipmapCount = 1;$/;"	r
mipmaps	three.js	/^						var mipmap, mipmaps = cubeImage[ i ].mipmaps;$/;"	r
mipmaps	three.js	/^				img.mipmaps = dds.mipmaps;$/;"	r
mipmaps	three.js	/^			texture.mipmaps = dds.mipmaps;$/;"	r
mipmaps	three.js	/^			var mipmap, mipmaps = texture.mipmaps;$/;"	r
mipmaps	three.js	/^		texture.mipmaps = this.mipmaps.slice(0);$/;"	r
mipmaps	three.js	/^	this.mipmaps = [];$/;"	r
mipmaps	three.js	/^	this.mipmaps = mipmaps;$/;"	r
mirroredLoop	three.js	/^									object.mirroredLoop = objJSON.mirroredLoop;$/;"	r
mirroredLoop	three.js	/^		mirroredLoop: false$/;"	r
mirroredLoop	three.js	/^	object.mirroredLoop = this.mirroredLoop;$/;"	r
mirroredLoop	three.js	/^	this.mirroredLoop = false;$/;"	r
mix	three.js	/^		mix = 1 - mix;$/;"	r
mix	three.js	/^		var mix = ( animation.time % frameTime ) \/ frameTime;$/;"	r
mix	three.js	/^	var mix = ( this.time % frameTime ) \/ frameTime;$/;"	r
ml	three.js	/^					for ( var m = 0, ml = geometryGroup.numMorphNormals; m < ml; m ++ ) {$/;"	r
ml	three.js	/^					for ( var m = 0, ml = geometryGroup.numMorphTargets; m < ml; m ++ ) {$/;"	r
ml	three.js	/^			for ( m = 0, ml = geometryGroup.numMorphNormals; m < ml; m ++ ) {$/;"	r
ml	three.js	/^			for ( m = 0, ml = geometryGroup.numMorphTargets; m < ml; m ++ ) {$/;"	r
ml	three.js	/^		for ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {$/;"	r
model	three.js	/^					var model = jsonLoader.parse( modelJson, texture_path );$/;"	r
modelJson	three.js	/^				var modelJson = data.embeds[ geoJSON.id ],$/;"	r
modelViewMatrix	three.js	/^		_sprite.uniforms.modelViewMatrix      = _gl.getUniformLocation( _sprite.program, "modelViewMatrix" );$/;"	r
morph	three.js	/^		var morph = geometry.morphTargets[ i ];$/;"	r
morphColors	three.js	/^	this.morphColors = [];$/;"	r
morphNormals	three.js	/^			morphNormals: material.morphNormals,$/;"	r
morphNormals	three.js	/^			var morphNormals = this.morphNormals[ i ];$/;"	r
morphNormals	three.js	/^		morphNormals = geometry.morphNormals;$/;"	r
morphNormals	three.js	/^	material.morphNormals = this.morphNormals;$/;"	r
morphNormals	three.js	/^	this.morphNormals = [];$/;"	r
morphNormals	three.js	/^	this.morphNormals = false; \/\/ set to use morph normals$/;"	r
morphNormals	three.js	/^	this.morphNormals = false;$/;"	r
morphNormalsArrays	three.js	/^		morphNormalsArrays = geometryGroup.__morphNormalsArrays,$/;"	r
morphTargetBase	three.js	/^		this.morphTargetBase = -1;$/;"	r
morphTargetDictionary	three.js	/^		this.morphTargetDictionary = {};$/;"	r
morphTargetForcedOrder	three.js	/^		this.morphTargetForcedOrder = [];$/;"	r
morphTargetInfluences	three.js	/^		this.morphTargetInfluences = [];$/;"	r
morphTargetName	three.js	/^						var morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];$/;"	r
morphTargets	three.js	/^			morphTargets: material.morphTargets,$/;"	r
morphTargets	three.js	/^		_depthMaterialMorph = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, morphTargets: true } );$/;"	r
morphTargets	three.js	/^		_depthMaterialMorphSkin = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, morphTargets: true, skinning: true } );$/;"	r
morphTargets	three.js	/^		morphTargets = geometry.morphTargets,$/;"	r
morphTargets	three.js	/^	material.morphTargets = this.morphTargets;$/;"	r
morphTargets	three.js	/^	this.morphTargets = [];$/;"	r
morphTargets	three.js	/^	this.morphTargets = false; \/\/ set to use morph targets$/;"	r
morphTargets	three.js	/^	this.morphTargets = false;$/;"	r
morphTargetsArrays	three.js	/^		morphTargetsArrays = geometryGroup.__morphTargetsArrays,$/;"	r
morphTargetsNeedUpdate	three.js	/^						geometry.morphTargetsNeedUpdate = true;$/;"	r
morphTargetsNeedUpdate	three.js	/^			geometry.morphTargetsNeedUpdate = false;$/;"	r
morphnormal_vertex	three.js	/^	morphnormal_vertex: [$/;"	r
morphtarget_pars_vertex	three.js	/^	morphtarget_pars_vertex: [$/;"	r
morphtarget_vertex	three.js	/^	morphtarget_vertex: [$/;"	r
moveTo	three.js	/^THREE.Path.prototype.moveTo = function ( x, y ) {$/;"	r
mozDash	three.js	/^				_context.mozDash = values[ 0 ] !== null ? values : null;$/;"	r
mpars	three.js	/^		var mpars = { color: 0xeeeeee, opacity: 1.0, map: null, lightMap: null, normalMap: null, bumpMap: null, wireframe: false };$/;"	r
msg	three.js	/^			var msg = "Matrix3.getInverse(): can't invert matrix, determinant is 0";$/;"	r
msg	three.js	/^			var msg = "Matrix4.getInverse(): can't invert matrix, determinant is 0";$/;"	r
mtype	three.js	/^		var mtype = "MeshLambertMaterial";$/;"	r
multiply	three.js	/^	multiply: function ( color ) {$/;"	r
multiply	three.js	/^	multiply: function ( m, n ) {$/;"	r
multiply	three.js	/^	multiply: function ( q, p ) {$/;"	r
multiply	three.js	/^	multiply: function ( v, w ) {$/;"	r
multiplyMatrices	three.js	/^	multiplyMatrices: function ( a, b ) {$/;"	r
multiplyQuaternions	three.js	/^	multiplyQuaternions: function ( a, b ) {$/;"	r
multiplyScalar	three.js	/^	multiplyScalar: function ( s ) {$/;"	r
multiplyScalar	three.js	/^	multiplyScalar: function ( scalar ) {$/;"	r
multiplyToArray	three.js	/^	multiplyToArray: function ( a, b, r ) {$/;"	r
multiplyVector3	three.js	/^	multiplyVector3: function ( vector ) {$/;"	r
multiplyVector3Array	three.js	/^	multiplyVector3Array: function() {$/;"	r
multiplyVector4	three.js	/^	multiplyVector4: function ( vector ) {$/;"	r
multiplyVectors	three.js	/^	multiplyVectors: function ( a, b ) {$/;"	r
n	three.js	/^			n = 1.0 \/ Math.sqrt( x * x + y * y + z * z );$/;"	r
n	three.js	/^			n = new THREE.Vector3(), w;$/;"	r
n	three.js	/^			var n = divisions * args[ 0 ].length;$/;"	r
n	three.js	/^		var n = contour.length;$/;"	r
n	three.js	/^		var n = new THREE.Vector3(), n2 = new THREE.Vector3();$/;"	r
n	three.js	/^	var n = new THREE.Vector3( 0, 0, 1 );$/;"	r
n	three.js	/^	var n = new THREE.Vector3();$/;"	r
n1	three.js	/^							n1 = faceVertexNormals.a;$/;"	r
n1	three.js	/^							n1 = morphNormals[ vk ].faceNormals[ chf ];$/;"	r
n1	three.js	/^			var n1 = na.clone();$/;"	r
n1	three.js	/^			var n1 = new THREE.Vector3( 0, - 1, 0 );$/;"	r
n1	three.js	/^			var n1 = new THREE.Vector3( 0, 1, 0 );$/;"	r
n1	three.js	/^			var n1 = this.vertices[ v1 ].clone().normalize();$/;"	r
n11	three.js	/^		var n11 = me[0], n12 = me[4], n13 = me[8], n14 = me[12];$/;"	r
n11	three.js	/^		var n11 = te[0], n12 = te[4], n13 = te[8], n14 = te[12];$/;"	r
n12	three.js	/^	set: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {$/;"	r
n12	three.js	/^	set: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {$/;"	r
n12	three.js	/^THREE.Matrix3 = function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {$/;"	r
n12	three.js	/^THREE.Matrix4 = function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {$/;"	r
n2	three.js	/^							n2 = faceVertexNormals.b;$/;"	r
n2	three.js	/^							n2 = n1;$/;"	r
n2	three.js	/^			var n2 = na.clone();$/;"	r
n2	three.js	/^			var n2 = new THREE.Vector3( 0, - 1, 0 );$/;"	r
n2	three.js	/^			var n2 = new THREE.Vector3( 0, 1, 0 );$/;"	r
n2	three.js	/^			var n2 = this.vertices[ v2 ].clone().normalize();$/;"	r
n21	three.js	/^		var n21 = me[1], n22 = me[5], n23 = me[9], n24 = me[13];$/;"	r
n21	three.js	/^		var n21 = te[1], n22 = te[5], n23 = te[9], n24 = te[13];$/;"	r
n3	three.js	/^							n3 = faceVertexNormals.c;$/;"	r
n3	three.js	/^							n3 = n1;$/;"	r
n3	three.js	/^			var n3 = nb.clone();$/;"	r
n3	three.js	/^			var n3 = new THREE.Vector3( 0, - 1, 0 );$/;"	r
n3	three.js	/^			var n3 = new THREE.Vector3( 0, 1, 0 );$/;"	r
n3	three.js	/^			var n3 = this.vertices[ v3 ].clone().normalize();$/;"	r
n31	three.js	/^		var n31 = me[2], n32 = me[6], n33 = me[10], n34 = me[14];$/;"	r
n31	three.js	/^		var n31 = te[2], n32 = te[6], n33 = te[10], n34 = te[14];$/;"	r
n4	three.js	/^							n4 = faceVertexNormals.d;$/;"	r
n4	three.js	/^							n4 = n1;$/;"	r
n4	three.js	/^			var n4 = nb.clone();$/;"	r
n4	three.js	/^			var n4 = this.vertices[ v4 ].clone().normalize();$/;"	r
n41	three.js	/^		var n41 = me[3], n42 = me[7], n43 = me[11], n44 = me[15];$/;"	r
n41	three.js	/^		var n41 = te[3], n42 = te[7], n43 = te[11], n44 = te[15];$/;"	r
nBones	three.js	/^		var nBones = this.bones.length;$/;"	r
nFlares	three.js	/^			nFlares = flares.length;$/;"	r
nSamples	three.js	/^		nSamples = this.points.length * nSubDivisions;$/;"	r
nSprites	three.js	/^			nSprites = sprites.length;$/;"	r
nTangentElements	three.js	/^			var nTangentElements = 4 * nVertices;$/;"	r
nUvLayers	three.js	/^		nUvLayers = 0;$/;"	r
nVertexElements	three.js	/^			var nVertexElements = this.attributes[ "position" ].array.length;$/;"	r
nVertexMatrices	three.js	/^			var nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) \/ 4 );$/;"	r
nVertexUniforms	three.js	/^			var nVertexUniforms = _gl.getParameter( _gl.MAX_VERTEX_UNIFORM_VECTORS );$/;"	r
nVertices	three.js	/^				nVertices = 3;$/;"	r
nVertices	three.js	/^				nVertices = 4;$/;"	r
nVertices	three.js	/^		var nVertices = positions.length \/ 3;$/;"	r
na	three.js	/^			na = this.vertices[ vertices[ 0 ][ x ] ].clone();$/;"	r
na	three.js	/^			na = this.vertices[ vertices[ 1 ][ x ] ].clone();$/;"	r
na	three.js	/^	var na, nb;$/;"	r
name	three.js	/^							object.name = objID;$/;"	r
name	three.js	/^						camera.name = objID;$/;"	r
name	three.js	/^						light.name = objID;$/;"	r
name	three.js	/^						object.name = objID;$/;"	r
name	three.js	/^				geo.name = id;$/;"	r
name	three.js	/^				geometry.name = geoID;$/;"	r
name	three.js	/^			bone.name = gbone.name;$/;"	r
name	three.js	/^			material.name = matID;$/;"	r
name	three.js	/^			node.name = id;$/;"	r
name	three.js	/^			var name = chunks[ 1 ];$/;"	r
name	three.js	/^		function create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {$/;"	r
name	three.js	/^		material.name = this.name;$/;"	r
name	three.js	/^		object.name = this.name;$/;"	r
name	three.js	/^	this.name = '';$/;"	r
name	three.js	/^	var name = "__default";$/;"	r
name	three.js	/^THREE.Animation = function ( root, name, interpolationType ) {$/;"	r
nax	three.js	/^					nax  = normalArray[ i ];$/;"	r
nax	three.js	/^					nax, nbx, ncx, nay, nby, ncy, naz, nbz, ncz,$/;"	r
nay	three.js	/^					nay  = normalArray[ i + 1 ];$/;"	r
naz	three.js	/^					naz  = normalArray[ i + 2 ];$/;"	r
nb	three.js	/^			nb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();$/;"	r
nb	three.js	/^			nb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();$/;"	r
nbVertices	three.js	/^			var nbVertices = vertices.length;$/;"	r
nbx	three.js	/^					nbx  = normalArray[ i + 3 ];$/;"	r
nby	three.js	/^					nby  = normalArray[ i + 4 ];$/;"	r
nbz	three.js	/^					nbz  = normalArray[ i + 5 ];$/;"	r
ncx	three.js	/^					ncx  = normalArray[ i + 6 ];$/;"	r
ncy	three.js	/^					ncy  = normalArray[ i + 7 ];$/;"	r
ncz	three.js	/^					ncz  = normalArray[ i + 8 ];$/;"	r
near	three.js	/^			this.near,$/;"	r
near	three.js	/^		this.near = near || 0;$/;"	r
near	three.js	/^	this.cameraP = new THREE.PerspectiveCamera( fov, width \/ height, near, far );$/;"	r
near	three.js	/^	this.near = ( near !== undefined ) ? near : 0.1;$/;"	r
near	three.js	/^	this.near = ( near !== undefined ) ? near : 1;$/;"	r
near	three.js	/^	this.near = near !== undefined ? near : 0.1;$/;"	r
near	three.js	/^	this.near = this.cameraO.near;$/;"	r
near	three.js	/^	this.near = this.cameraP.near;$/;"	r
near	three.js	/^	var near = this.cameraP.near;$/;"	r
near	three.js	/^THREE.Fog = function ( hex, near, far ) {$/;"	r
nearZ	three.js	/^		var nearZ = light.shadowCascadeNearZ[ cascade ];$/;"	r
nearest_pow2	three.js	/^		function nearest_pow2( n ) {$/;"	r
needsSmoothNormals	three.js	/^		needsSmoothNormals = ( normalType === THREE.SmoothShading );$/;"	r
needsTangents	three.js	/^									needsTangents = needsTangents || ( material.materials[ i ] instanceof THREE.ShaderMaterial );$/;"	r
needsTangents	three.js	/^							needsTangents = material instanceof THREE.ShaderMaterial;$/;"	r
needsTangents	three.js	/^							var needsTangents = false;$/;"	r
needsTangents	three.js	/^	needsTangents: function ( materials ) {$/;"	r
needsUpdate	three.js	/^					attribute.needsUpdate = true;$/;"	r
needsUpdate	three.js	/^					originalAttribute.needsUpdate = true;$/;"	r
needsUpdate	three.js	/^					texture.needsUpdate = true;$/;"	r
needsUpdate	three.js	/^				attributeItem.needsUpdate = false;$/;"	r
needsUpdate	three.js	/^				texture.needsUpdate = false;$/;"	r
needsUpdate	three.js	/^				where.needsUpdate = true;$/;"	r
needsUpdate	three.js	/^			material.needsUpdate = false;$/;"	r
needsUpdate	three.js	/^			texture.needsUpdate = false;$/;"	r
needsUpdate	three.js	/^			texture.needsUpdate = true;$/;"	r
needsUpdate	three.js	/^			this.boneTexture.needsUpdate = true;$/;"	r
needsUpdate	three.js	/^		texture.needsUpdate = true;$/;"	r
needsUpdate	three.js	/^	this.needsUpdate = false;$/;"	r
needsUpdate	three.js	/^	this.needsUpdate = true;$/;"	r
negRadius	three.js	/^			var negRadius = - geometry.boundingSphere.radius * matrix.getMaxScaleOnAxis();$/;"	r
negRadius	three.js	/^		var negRadius = -sphere.radius;$/;"	r
negate	three.js	/^	negate: function () {$/;"	r
negate	three.js	/^	negate: function() {$/;"	r
negx	three.js	/^ *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),$/;"	r
newCoplanarPoint	three.js	/^			var newCoplanarPoint = this.coplanarPoint( v2 );$/;"	r
newFace	three.js	/^					var newFace = new THREE.Face3( indices[0], indices[1], indices[2], face.normal, face.color, face.materialIndex );$/;"	r
newFaces	three.js	/^		var face, newFaces = [];$/;"	r
newHeight	three.js	/^		var newHeight = Math.floor( image.height * maxSize \/ maxDimension );$/;"	r
newHole	three.js	/^			var newHole = []$/;"	r
newNormal	three.js	/^			var newNormal = v1.copy( this.normal ).applyMatrix3( optionalNormalMatrix );$/;"	r
newPrograms	three.js	/^			var newPrograms = [];$/;"	r
newTime	three.js	/^			var newTime = self.performance !== undefined && self.performance.now !== undefined$/;"	r
newValue	three.js	/^			var newValue = values[ key ];$/;"	r
newWidth	three.js	/^		var newWidth = Math.floor( image.width * maxSize \/ maxDimension );$/;"	r
newpoints	three.js	/^			newpoints = [],$/;"	r
next	three.js	/^					next = this.getNextKeyWith( sid, h, 0 );$/;"	r
nextKey	three.js	/^							nextKey = keys[ prevKey.index + 1 ];$/;"	r
nextKey	three.js	/^							nextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );$/;"	r
nextKey	three.js	/^						nextKey = keys[ 1 ];$/;"	r
nextKey	three.js	/^						nextKey = this.getNextKeyWith( type, h, 1 );$/;"	r
nextKey	three.js	/^						nextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );$/;"	r
nextKey	three.js	/^					animationCache.nextKey = nextKey;$/;"	r
nextKey	three.js	/^				node.animationCache.nextKey = keys[ 1 ];$/;"	r
nextKey	three.js	/^				node.animationCache.nextKey = null;$/;"	r
nextKey	three.js	/^				object.animationCache.nextKey = { pos: 0, rot: 0, scl: 0 };$/;"	r
nextKey	three.js	/^			nextKey = animationCache.nextKey;$/;"	r
nextKey	three.js	/^			nextKey = animationCache.nextKey[ type ];$/;"	r
nextKey	three.js	/^			var nextKey = object.animationCache.nextKey;$/;"	r
nextXYZ	three.js	/^				THREE.Quaternion.slerp( prevXYZ, nextXYZ, object.quaternion, scale );$/;"	r
nextXYZ	three.js	/^			nextXYZ = nextKey[ type ];$/;"	r
nka	three.js	/^						nka = morphNormalsArrays[ vk ];$/;"	r
nka	three.js	/^		nka, chf, faceVertexNormals,$/;"	r
nl	three.js	/^					for ( n = 0, nl = faceVertexNormals.length; n < nl; n ++ ) {$/;"	r
nl	three.js	/^		nl = normals.length,$/;"	r
nlines	three.js	/^			nlines    = faces3.length * 3 + faces4.length * 4,$/;"	r
node	three.js	/^			node = this.data.hierarchy[ h ];$/;"	r
node	three.js	/^			node;$/;"	r
node	three.js	/^		node = this.data.hierarchy[ h ];$/;"	r
node	three.js	/^		var node = this.data.hierarchy[ h ];$/;"	r
node	three.js	/^	var node;$/;"	r
normal	three.js	/^						"vReflect = refract( cameraToVertex, normal, uRefractionRatio );",$/;"	r
normal	three.js	/^					"reflectVec = refract( cameraToVertex, normal, refractionRatio );",$/;"	r
normal	three.js	/^					normal = new THREE.Vector3();$/;"	r
normal	three.js	/^				face.normal = normal;$/;"	r
normal	three.js	/^				normal = element.normalModelView;$/;"	r
normal	three.js	/^				normal = element.vertexNormalsModelView[ 0 ];$/;"	r
normal	three.js	/^				normal = element.vertexNormalsModelView[ 1 ];$/;"	r
normal	three.js	/^				normal = element.vertexNormalsModelView[ 2 ];$/;"	r
normal	three.js	/^				normal = element.vertexNormalsModelView[ 3 ];$/;"	r
normal	three.js	/^				normal = element.vertexNormalsModelView[ uv1 ];$/;"	r
normal	three.js	/^				normal = element.vertexNormalsModelView[ uv2 ];$/;"	r
normal	three.js	/^				normal = element.vertexNormalsModelView[ uv3 ];$/;"	r
normal	three.js	/^				normal = faceVertexNormals[ j ].clone();$/;"	r
normal	three.js	/^				normal = new THREE.Vector3();$/;"	r
normal	three.js	/^				normal = normals[ n ];$/;"	r
normal	three.js	/^				var normal = [ 0, 0, 0 ];$/;"	r
normal	three.js	/^				var normal = face.vertexNormals[ j ];$/;"	r
normal	three.js	/^			"normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );",$/;"	r
normal	three.js	/^			face.normal = face.__originalFaceNormal;$/;"	r
normal	three.js	/^			var normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();$/;"	r
normal	three.js	/^			var normal;$/;"	r
normal	three.js	/^		normal = new THREE.Vector3(),$/;"	r
normal	three.js	/^		normal = new THREE.Vector3();$/;"	r
normal	three.js	/^		normal = normals[ i ];$/;"	r
normal	three.js	/^		normal,$/;"	r
normal	three.js	/^		var normal = path.getNormalVector( xNorm ).multiplyScalar( oldY );$/;"	r
normal	three.js	/^	function calculateLight( position, normal, color ) {$/;"	r
normal	three.js	/^	normal: function ( optionalTarget ) {$/;"	r
normal	three.js	/^	this.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );$/;"	r
normal	three.js	/^	this.normal = new THREE.Vector3( 0, -1, 0 );$/;"	r
normal	three.js	/^	this.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();$/;"	r
normal	three.js	/^	var normal = new THREE.Vector3( 0, 0, 1 );$/;"	r
normal	three.js	/^THREE.Triangle.normal = function() {$/;"	r
normalArray	three.js	/^					normalArray = object.normalArray;$/;"	r
normalArray	three.js	/^					normalArray,$/;"	r
normalArray	three.js	/^			_gl.bufferData( _gl.ARRAY_BUFFER, normalArray, hint );$/;"	r
normalArray	three.js	/^		normalArray = geometry.__normalArray,$/;"	r
normalArray	three.js	/^		normalArray = geometryGroup.__normalArray,$/;"	r
normalArray	three.js	/^		var normalArray;$/;"	r
normalIndex	three.js	/^					normalIndex = faces[ offset ++ ] * 3;$/;"	r
normalIndex	three.js	/^				normalIndex = faces[ offset ++ ] * 3;$/;"	r
normalMap	three.js	/^			normalMap: !!material.normalMap,$/;"	r
normalMap	three.js	/^	material.normalMap = this.normalMap;$/;"	r
normalMap	three.js	/^	this.normalMap = null;$/;"	r
normalMatrix	three.js	/^			normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );$/;"	r
normalMatrix	three.js	/^			var normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );$/;"	r
normalMatrix	three.js	/^		var normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );$/;"	r
normalMatrix	three.js	/^	this.normalMatrix = new THREE.Matrix3();$/;"	r
normalModel	three.js	/^						var normalModel = _face.vertexNormalsModel[ n ];$/;"	r
normalModel	three.js	/^	this.normalModel = new THREE.Vector3();$/;"	r
normalModelView	three.js	/^						var normalModelView = _face.vertexNormalsModelView[ n ];$/;"	r
normalModelView	three.js	/^	this.normalModelView = new THREE.Vector3();$/;"	r
normalScale	three.js	/^	this.normalScale = new THREE.Vector2( 1, 1 );$/;"	r
normalType	three.js	/^			normalType = bufferGuessNormalType( material ),$/;"	r
normalType	three.js	/^		var normalType = bufferGuessNormalType( material ),$/;"	r
normalize	three.js	/^		var normalize = function ( a ) {$/;"	r
normalize	three.js	/^	normalize: function () {$/;"	r
normalizeNormals	three.js	/^	normalizeNormals: function () {$/;"	r
normalizeSkinWeights	three.js	/^THREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {$/;"	r
normalmap	three.js	/^	normalmap: {$/;"	r
normalmap_pars_fragment	three.js	/^	normalmap_pars_fragment: [$/;"	r
normals	three.js	/^				var normals = [];$/;"	r
normals	three.js	/^			var normals = this.attributes[ "normal" ].array;$/;"	r
normals	three.js	/^		normals = [],$/;"	r
normals	three.js	/^		normals = frames.normals,$/;"	r
normals	three.js	/^		normals = geometry.normals,$/;"	r
normals	three.js	/^		normals = json.normals,$/;"	r
normals	three.js	/^		var normals = this.attributes[ "normal" ].array;$/;"	r
normals	three.js	/^	this.normals = []; \/\/ one-to-one vertex normals, used in Ribbon$/;"	r
normals	three.js	/^	this.normals = normals;$/;"	r
normals	three.js	/^ *  frames: <THREE.TubeGeometry.FrenetFrames> \/\/ containing arrays of tangents, normals, binormals$/;"	r
normalsNeedUpdate	three.js	/^						geometry.normalsNeedUpdate = true;$/;"	r
normalsNeedUpdate	three.js	/^					geometry.normalsNeedUpdate = true;$/;"	r
normalsNeedUpdate	three.js	/^			geometry.normalsNeedUpdate = false;$/;"	r
normalsNeedUpdate	three.js	/^			this.normalsNeedUpdate = true;$/;"	r
normalsNeedUpdate	three.js	/^	this.normalsNeedUpdate = false;$/;"	r
np	three.js	/^	var np = points.length;$/;"	r
npts	three.js	/^	var npts = [ new THREE.Vector2( x0, y0 ) ];$/;"	r
ntris	three.js	/^			ntris     = faces3.length * 1 + faces4.length * 2,$/;"	r
null	three.js	/^	THREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );$/;"	r
num	three.js	/^			var num = chunks[ 2 ];$/;"	r
num	three.js	/^			var num = parts[ 2 ];$/;"	r
numFrames	three.js	/^	var numFrames = this.geometry.morphTargets.length;$/;"	r
numItems	three.js	/^				attribute.numItems = attribute.array.length;$/;"	r
numMorphNormals	three.js	/^		var numMorphNormals = geometry.morphNormals.length;$/;"	r
numMorphTargets	three.js	/^		var numMorphTargets = geometry.morphTargets.length;$/;"	r
numSupportedMorphNormals	three.js	/^			material.numSupportedMorphNormals = 0;$/;"	r
numSupportedMorphTargets	three.js	/^			material.numSupportedMorphTargets = 0;$/;"	r
num_points	three.js	/^				var num_points = points.length;$/;"	r
numericalSort	three.js	/^	function numericalSort ( a, b ) {$/;"	r
numpoints	three.js	/^		numpoints = segments + 1,$/;"	r
numpoints	three.js	/^		numpoints = this.segments + 1,$/;"	r
nv	three.js	/^		var nv = n;$/;"	r
nvertices	three.js	/^			nvertices = faces3.length * 3 + faces4.length * 4,$/;"	r
nvertices	three.js	/^		var nvertices = geometry.vertices.length;$/;"	r
nx	three.js	/^					nx = ( nax + nbx + ncx ) \/ 3;$/;"	r
nx	three.js	/^				var nx, ny, nz,$/;"	r
ny	three.js	/^					ny = ( nay + nby + ncy ) \/ 3;$/;"	r
nz	three.js	/^					nz = ( naz + nbz + ncz ) \/ 3;$/;"	r
o	three.js	/^		o, ol, v, vl, f, fl, n, nl, c, cl, u, ul, object,$/;"	r
obj	three.js	/^				obj = this.hierarchy[h];$/;"	r
obj	three.js	/^			obj = this.hierarchy[h];$/;"	r
obj	three.js	/^        var obj = this.hierarchy[ h ];$/;"	r
objJSON	three.js	/^				var objJSON = children[ objID ];$/;"	r
obj_colors	three.js	/^		obj_colors = geometry.colors,$/;"	r
obj_faces	three.js	/^		obj_faces = geometry.faces,$/;"	r
obj_skinIndices	three.js	/^		obj_skinIndices = geometry.skinIndices,$/;"	r
obj_skinWeights	three.js	/^		obj_skinWeights = geometry.skinWeights,$/;"	r
obj_uvs	three.js	/^		obj_uvs  = geometry.faceVertexUvs[ 0 ],$/;"	r
obj_uvs2	three.js	/^		obj_uvs2 = geometry.faceVertexUvs[ 1 ],$/;"	r
object	three.js	/^								object = new THREE.Mesh( geometry, material );$/;"	r
object	three.js	/^								object = new THREE.MorphAnimMesh( geometry, material );$/;"	r
object	three.js	/^								object = new THREE.SkinnedMesh( geometry, material );$/;"	r
object	three.js	/^							object: object$/;"	r
object	three.js	/^						object = new THREE.Object3D();$/;"	r
object	three.js	/^						object: object$/;"	r
object	three.js	/^					_particle.object = object;$/;"	r
object	three.js	/^					object = new THREE.AmbientLight( data.color );$/;"	r
object	three.js	/^					object = new THREE.DirectionalLight( data.color, data.intensity );$/;"	r
object	three.js	/^					object = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );$/;"	r
object	three.js	/^					object = new THREE.Mesh( geometry, material );$/;"	r
object	three.js	/^					object = new THREE.Object3D();$/;"	r
object	three.js	/^					object = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );$/;"	r
object	three.js	/^					object = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );$/;"	r
object	three.js	/^					object = new THREE.PointLight( data.color, data.intensity, data.distance );$/;"	r
object	three.js	/^					object = new THREE.Scene();$/;"	r
object	three.js	/^					object = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent );$/;"	r
object	three.js	/^					object = webglObject.object;$/;"	r
object	three.js	/^					setMeshBuffers( geometryGroup, object, _gl.DYNAMIC_DRAW, !geometry.dynamic, material );$/;"	r
object	three.js	/^				object = webglObject.object;$/;"	r
object	three.js	/^				object: object$/;"	r
object	three.js	/^				object: object,$/;"	r
object	three.js	/^				var object = result.objects[ objID ];$/;"	r
object	three.js	/^			object = _renderData.objects[ o ].object;$/;"	r
object	three.js	/^			object = _renderData.sprites[ o ].object;$/;"	r
object	three.js	/^			object = this.hierarchy[ h ];$/;"	r
object	three.js	/^			object = webglObject.object;$/;"	r
object	three.js	/^			object,$/;"	r
object	three.js	/^			object;$/;"	r
object	three.js	/^			var object = new THREE.RenderableObject();$/;"	r
object	three.js	/^			var object = scene.__webglObjects[ o ].object;$/;"	r
object	three.js	/^			var object;$/;"	r
object	three.js	/^		_object.object = object;$/;"	r
object	three.js	/^		object = new THREE.SkinnedMesh( this.geometry, this.material, this.useVertexTexture );$/;"	r
object	three.js	/^		object = this.hierarchy[ h ];$/;"	r
object	three.js	/^		var object = globject.object,$/;"	r
object	three.js	/^		var object = this.parseObject( json.object, geometries, materials );$/;"	r
object	three.js	/^	function setMeshBuffers( geometryGroup, object, hint, dispose, material ) {$/;"	r
object	three.js	/^	this.object = null;$/;"	r
object	three.js	/^	this.object = object;$/;"	r
object	three.js	/^	this.objects.splice( l, 0, { distance: distance, object: object } );$/;"	r
object	three.js	/^	var object;$/;"	r
objectMaterial	three.js	/^					objectMaterial = getObjectMaterial( object );$/;"	r
objectMaterial	three.js	/^				objectMaterial = getObjectMaterial( object );$/;"	r
objectMaterial	three.js	/^			var objectMaterial, useMorphing, useSkinning;$/;"	r
objectMaterial	three.js	/^		var objectMaterial, useMorphing, useSkinning;$/;"	r
objectMaterials	three.js	/^				objectMaterials = isFaceMaterial === true ? object.material : null;$/;"	r
objectMaterials	three.js	/^				var objectMaterials = isFaceMaterial === true ? object.material.materials : null;$/;"	r
objects	three.js	/^			objects: {},$/;"	r
objects	three.js	/^	this.objects = [];$/;"	r
occlusionMap	three.js	/^		_lensFlare.uniforms.occlusionMap   = _gl.getUniformLocation( _lensFlare.program, "occlusionMap" );$/;"	r
occlusionTexture	three.js	/^		_lensFlare.occlusionTexture = _gl.createTexture();$/;"	r
off_caps	three.js	/^		var off_caps = 27;$/;"	r
off_caps2	three.js	/^		var off_caps2 = 28;$/;"	r
off_caps3	three.js	/^		var off_caps3 = 29;$/;"	r
off_caps4	three.js	/^		var off_caps4 = 30;$/;"	r
off_flags	three.js	/^		var off_flags = 2;$/;"	r
off_height	three.js	/^		var off_height = 3;$/;"	r
off_magic	three.js	/^		var off_magic = 0;$/;"	r
off_mipmapCount	three.js	/^		var off_mipmapCount = 7;$/;"	r
off_pfFlags	three.js	/^		var off_pfFlags = 20;$/;"	r
off_pfFourCC	three.js	/^		var off_pfFourCC = 21;$/;"	r
off_size	three.js	/^		var off_size = 1;$/;"	r
off_width	three.js	/^		var off_width = 4;$/;"	r
offset	three.js	/^						offset = 0;$/;"	r
offset	three.js	/^					offset = 0;$/;"	r
offset	three.js	/^					offset = c * 3;$/;"	r
offset	three.js	/^					offset = i * 2;$/;"	r
offset	three.js	/^					offset = i * 3;$/;"	r
offset	three.js	/^					offset = i * 4;$/;"	r
offset	three.js	/^					offset = v * 3;$/;"	r
offset	three.js	/^				offset = c * 3;$/;"	r
offset	three.js	/^				offset = n * 3;$/;"	r
offset	three.js	/^				offset = v * 3;$/;"	r
offset	three.js	/^			offset = 0,$/;"	r
offset	three.js	/^			offset = vlen * layer;$/;"	r
offset	three.js	/^			var offset = uvScaleMap.offset;$/;"	r
offset	three.js	/^			var offset = vlen * layer;$/;"	r
offset	three.js	/^		offset = 0,$/;"	r
offset	three.js	/^		offset = 0;$/;"	r
offset	three.js	/^		offset = scope.vertices.length;$/;"	r
offset	three.js	/^		offset, zLength, nVertices,$/;"	r
offset	three.js	/^		return { paths : fontPaths, offset : width };$/;"	r
offset	three.js	/^		var offset = index * 4;$/;"	r
offset	three.js	/^		var offset = new THREE.Vector3();$/;"	r
offset	three.js	/^	function setColorGamma( array, offset, color, intensitySq ) {$/;"	r
offset	three.js	/^	function setColorLinear( array, offset, color, intensity ) {$/;"	r
offset	three.js	/^	this.offset = new THREE.Vector2( 0, 0 );$/;"	r
offsetHSL	three.js	/^	offsetHSL: function ( h, s, l ) {$/;"	r
offsetMatrix	three.js	/^	var offsetMatrix = new THREE.Matrix4();$/;"	r
offsetX	three.js	/^		offsetX = texture.offset.x \/ texture.repeat.x,$/;"	r
offsetY	three.js	/^		offsetY = texture.offset.y \/ texture.repeat.y,$/;"	r
offset_color	three.js	/^		offset_color = 0,$/;"	r
offset_custom	three.js	/^				offset_custom = 0;$/;"	r
offset_custom	three.js	/^		offset_custom = 0,$/;"	r
offset_customSrc	three.js	/^				offset_customSrc = 0;$/;"	r
offset_customSrc	three.js	/^		offset_customSrc = 0,$/;"	r
offset_face	three.js	/^		offset_face = 0,$/;"	r
offset_line	three.js	/^		offset_line = 0,$/;"	r
offset_morphTarget	three.js	/^				offset_morphTarget = 0;$/;"	r
offset_morphTarget	three.js	/^		offset_morphTarget = 0,$/;"	r
offset_normal	three.js	/^		offset_normal = 0,$/;"	r
offset_skin	three.js	/^		offset_skin = 0,$/;"	r
offset_tangent	three.js	/^		offset_tangent = 0,$/;"	r
offset_uv	three.js	/^		offset_uv = 0,$/;"	r
offset_uv2	three.js	/^		offset_uv2 = 0,$/;"	r
offsets	three.js	/^				var offsets = geometry.offsets;$/;"	r
offsets	three.js	/^				var offsets = this.offsets;$/;"	r
offsets	three.js	/^		var offsets = this.offsets;$/;"	r
offsets	three.js	/^	this.offsets = [];$/;"	r
ol	three.js	/^		for ( o = 0, ol = _renderData.objects.length; o < ol; o ++ ) {$/;"	r
ol	three.js	/^		for ( o = 0, ol = _renderData.sprites.length; o < ol; o++ ) {$/;"	r
ol	three.js	/^		for ( var o = 0, ol = scene.__webglObjects.length; o < ol; o ++ ) {$/;"	r
oldFogType	three.js	/^					oldFogType = fogType;$/;"	r
oldFogType	three.js	/^				oldFogType = 1;$/;"	r
oldFogType	three.js	/^				oldFogType = 2;$/;"	r
oldFogType	three.js	/^			oldFogType = 0;$/;"	r
oldFogType	three.js	/^		var oldFogType = 0;$/;"	r
oldIntPoint	three.js	/^				oldIntPoint = intPoint;$/;"	r
oldLength	three.js	/^		var oldLength = this.length();$/;"	r
oldPosition	three.js	/^			oldPosition = new THREE.Vector3(),$/;"	r
oldPts	three.js	/^		oldPts = this.getWrapPoints( oldPts, bends[ i ] );$/;"	r
oldPts	three.js	/^	var oldPts = this.getPoints( segments ); \/\/ getPoints getSpacedPoints$/;"	r
oldPts	three.js	/^	var oldPts = this.getSpacedPoints( segments );$/;"	r
oldShapeIndex	three.js	/^			var oldShapeIndex = shapeIndex, oldHoleIndex = holeIndex;$/;"	r
oldTime	three.js	/^			this.oldTime = newTime;$/;"	r
oldTime	three.js	/^		this.oldTime = this.startTime;$/;"	r
oldTime	three.js	/^	this.oldTime = 0;$/;"	r
oldX	three.js	/^		oldX = p.x;$/;"	r
oldY	three.js	/^		oldY = p.y;$/;"	r
onError	three.js	/^	this.onError = onError;$/;"	r
onGeometryDispose	three.js	/^	var onGeometryDispose = function ( event ) {$/;"	r
onLoad	three.js	/^			scope.parse( JSON.parse( text ), onLoad, url );$/;"	r
onLoad	three.js	/^	load: function ( url, onLoad, onProgress, onError ) {$/;"	r
onLoad	three.js	/^	this.onLoad = onLoad;$/;"	r
onLoadComplete	three.js	/^	this.onLoadComplete = function () {};$/;"	r
onLoadProgress	three.js	/^	this.onLoadProgress = function () {};$/;"	r
onLoadProgress	three.js	/^	this.onLoadProgress = function() {};$/;"	r
onLoadStart	three.js	/^	this.onLoadStart = function () {};$/;"	r
onMaterialDispose	three.js	/^	var onMaterialDispose = function ( event ) {$/;"	r
onProgress	three.js	/^	this.onProgress = onProgress;$/;"	r
onProgress	three.js	/^THREE.LoadingManager = function ( onLoad, onProgress, onError ) {$/;"	r
onRenderTargetDispose	three.js	/^	var onRenderTargetDispose = function ( event ) {$/;"	r
onTextureDispose	three.js	/^	var onTextureDispose = function ( event ) {$/;"	r
onUpdate	three.js	/^	this.onUpdate = null;$/;"	r
oneHoleMovements	three.js	/^			oneHoleMovements = holesMovements[ h ];$/;"	r
oneHoleMovements	three.js	/^		oneHoleMovements = [];$/;"	r
oneHoleMovements	three.js	/^	var holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();$/;"	r
onerror	three.js	/^				request.onerror = onError;$/;"	r
onerror	three.js	/^			cubeImage.onerror = onError;$/;"	r
onerror	three.js	/^			request.onerror = onError;$/;"	r
onerror	three.js	/^		request.onerror = onError;$/;"	r
onload	three.js	/^				request.onload = generateCubeFaceCallback( request, cubeImage );$/;"	r
onload	three.js	/^			cubeImage.onload = function () {$/;"	r
onload	three.js	/^			image.onload = function () {$/;"	r
onload	three.js	/^			request.onload = function( ) {$/;"	r
onload	three.js	/^		request.onload = function () {$/;"	r
onlyShadow	three.js	/^		virtualLight.onlyShadow = true;$/;"	r
onlyShadow	three.js	/^	light.onlyShadow = this.onlyShadow;$/;"	r
onlyShadow	three.js	/^	this.onlyShadow = false;$/;"	r
onreadystatechange	three.js	/^	xhr.onreadystatechange = function () {$/;"	r
opacity	three.js	/^					opacity: json.opacity,$/;"	r
opacity	three.js	/^			mpars.opacity = m.transparency;$/;"	r
opacity	three.js	/^		                    opacity: opacity,			\/\/ opacity$/;"	r
opacity	three.js	/^		_lensFlare.uniforms.opacity        = _gl.getUniformLocation( _lensFlare.program, "opacity" );$/;"	r
opacity	three.js	/^		_sprite.uniforms.opacity              = _gl.getUniformLocation( _sprite.program, "opacity" );$/;"	r
opacity	three.js	/^		material.opacity = this.opacity;$/;"	r
opacity	three.js	/^		var mpars = { color: 0xeeeeee, opacity: 1.0, map: null, lightMap: null, normalMap: null, bumpMap: null, wireframe: false };$/;"	r
opacity	three.js	/^	this.opacity = 1;$/;"	r
opacity	three.js	/^	var distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );$/;"	r
opaque	three.js	/^					globject.opaque = material;$/;"	r
opaque	three.js	/^					globject.opaque = null;$/;"	r
opaque	three.js	/^				globject.opaque = material;$/;"	r
opaque	three.js	/^				globject.opaque = null;$/;"	r
opaque	three.js	/^				opaque: null,$/;"	r
opaque	three.js	/^			globject.opaque = material;$/;"	r
opaque	three.js	/^			globject.opaque = null;$/;"	r
openEnded	three.js	/^							data.openEnded$/;"	r
openEnded	three.js	/^	this.openEnded = openEnded = openEnded !== undefined ? openEnded : false;$/;"	r
optionalNormalMatrix	three.js	/^			optionalNormalMatrix = optionalNormalMatrix || new THREE.Matrix3().getNormalMatrix( matrix );$/;"	r
options	three.js	/^	options = options || {};$/;"	r
order	three.js	/^			var order = object.morphTargetForcedOrder;$/;"	r
order	three.js	/^		order = order || this._order;$/;"	r
order	three.js	/^		this.rotation.order = value;$/;"	r
order	three.js	/^	setFromQuaternion: function ( q, order, update ) {$/;"	r
origin	three.js	/^				var origin = [ 0, 0, data[ ( y * width + x ) * 4 ] \/ 255 * depth ];$/;"	r
origin	three.js	/^	this.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();$/;"	r
origin	three.js	/^THREE.ArrowHelper = function ( dir, origin, length, hex ) {$/;"	r
original	three.js	/^			var original = node.animationCache.originalMatrix;$/;"	r
originalAttribute	three.js	/^				var originalAttribute = material.attributes[ a ];$/;"	r
originalCamera	three.js	/^						virtualLight.originalCamera = camera;$/;"	r
originalMatrix	three.js	/^				node.animationCache.originalMatrix = object instanceof THREE.Bone ? object.skinMatrix : object.matrix;$/;"	r
originalMatrix	three.js	/^				object.animationCache.originalMatrix = object instanceof THREE.Bone ? object.skinMatrix : object.matrix;$/;"	r
orthoNear	three.js	/^	this.cameraO = new THREE.OrthographicCamera( width \/ - 2, width \/ 2, height \/ 2, height \/ - 2, 	orthoNear, orthoFar );$/;"	r
orthoPoint	three.js	/^	orthoPoint: function ( point, optionalTarget ) {$/;"	r
outerRadius	three.js	/^	outerRadius = outerRadius || 50;$/;"	r
outerRadius	three.js	/^THREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {$/;"	r
outline	three.js	/^			outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );$/;"	r
outline	three.js	/^			outline, action, length,$/;"	r
output	three.js	/^		var output = imageData.data;$/;"	r
overdraw	three.js	/^		material.overdraw = this.overdraw;$/;"	r
overdraw	three.js	/^	this.overdraw = 0; \/\/ Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer$/;"	r
overrideMaterial	three.js	/^	this.overrideMaterial = null;$/;"	r
p	three.js	/^							data.p,$/;"	r
p	three.js	/^			p = THREE.ExtrudeGeometry.__v5,$/;"	r
p	three.js	/^			p = func( u, v );$/;"	r
p	three.js	/^			p = gbone.pos;$/;"	r
p	three.js	/^			p = this.points[ i ];$/;"	r
p	three.js	/^			p, pts1, pts2,$/;"	r
p	three.js	/^			this.b = hue2rgb( q, p, h - 1 \/ 3 );$/;"	r
p	three.js	/^			this.g = hue2rgb( q, p, h );$/;"	r
p	three.js	/^			this.r = hue2rgb( q, p, h + 1 \/ 3 );$/;"	r
p	three.js	/^			var p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );$/;"	r
p	three.js	/^			var p = obj.position;$/;"	r
p	three.js	/^			var p = pointsWorld[ i ];$/;"	r
p	three.js	/^			var p;$/;"	r
p	three.js	/^		p = oldPts[ i ];$/;"	r
p	three.js	/^		p = points[ i ];$/;"	r
p	three.js	/^		var p = far - near;$/;"	r
p	three.js	/^		var p, pl, d, program, code;$/;"	r
p	three.js	/^		var p;$/;"	r
p	three.js	/^	this.p = p || 2;$/;"	r
p	three.js	/^	var p, i, il, sum;$/;"	r
p	three.js	/^	var p, sum = 0;$/;"	r
p0	three.js	/^	b2: function ( t, p0, p1, p2 ) {$/;"	r
p0	three.js	/^	b3: function ( t, p0, p1, p2, p3 ) {$/;"	r
p0	three.js	/^	tangentCubicBezier: function (t, p0, p1, p2, p3 ) {$/;"	r
p0	three.js	/^	tangentQuadraticBezier: function ( t, p0, p1, p2 ) {$/;"	r
p0	three.js	/^	tangentSpline: function ( t, p0, p1, p2, p3 ) {$/;"	r
p1	three.js	/^		var p1 = getPos( u, this.q, this.p, this.radius, this.heightScale );$/;"	r
p1	three.js	/^		var p1 = new THREE.Vector3(),$/;"	r
p1	three.js	/^	function interpolate( p0, p1, p2, p3, t, t2, t3 ) {$/;"	r
p1	three.js	/^	interpolate: function( p0, p1, p2, p3, t ) {$/;"	r
p1	three.js	/^	set: function ( p0, p1, p2, p3, p4, p5 ) {$/;"	r
p1	three.js	/^THREE.Animation.prototype.interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {$/;"	r
p1	three.js	/^THREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {$/;"	r
p2	three.js	/^			p2 = new THREE.Vector3();$/;"	r
p2	three.js	/^		var p2 = getPos( u + 0.01, this.q, this.p, this.radius, this.heightScale );$/;"	r
pA	three.js	/^			pA = new THREE.Vector3(),$/;"	r
pB	three.js	/^			pB = new THREE.Vector3(),$/;"	r
pC	three.js	/^			pC = new THREE.Vector3(),$/;"	r
p_uniforms	three.js	/^			p_uniforms = program.uniforms,$/;"	r
pa	three.js	/^		pa = this.points[ c[ 0 ] ];$/;"	r
pa	three.js	/^	pa = points[ c[ 0 ] ];$/;"	r
pa	three.js	/^	pa, pb, pc, pd;$/;"	r
padding	three.js	/^		e.style.padding = "0.5em 0.5em 0.5em 0.5em";$/;"	r
painterSort	three.js	/^	function painterSort( a, b ) {$/;"	r
painterSortStable	three.js	/^	function painterSortStable ( a, b ) {$/;"	r
parID	three.js	/^		var parID;$/;"	r
paramThreeToGL	three.js	/^	function paramThreeToGL ( p ) {$/;"	r
parameter_src	three.js	/^				parameter_src = uniforms_src[ u ][ p ];$/;"	r
parameters	three.js	/^				var parameters = { fragmentShader: shader.fragmentShader, vertexShader: shader.vertexShader, uniforms: uniforms, lights: true, fog: true };$/;"	r
parameters	three.js	/^			var parameters = { fragmentShader: shader.fragmentShader, vertexShader: shader.vertexShader, uniforms: uniforms, lights: true, fog: true };$/;"	r
parameters	three.js	/^		parameters = {$/;"	r
parameters	three.js	/^	parameters = parameters || {};$/;"	r
parent	three.js	/^								loader.load( get_url( objJSON.url, data.urlBaseType ), create_callback_hierachy( objID, parent, material, objJSON ) );$/;"	r
parent	three.js	/^								loader.load( get_url( objJSON.url, data.urlBaseType ), create_callback_hierachy( objID, parent, material, objJSON ), loaderParameters );$/;"	r
parent	three.js	/^			object.parent = this;$/;"	r
parent	three.js	/^			object.parent = undefined;$/;"	r
parent	three.js	/^		function create_callback_hierachy( id, parent, material, obj ) {$/;"	r
parent	three.js	/^	detach : function ( child, parent, scene ) {$/;"	r
parent	three.js	/^	this.parent = undefined;$/;"	r
pars	three.js	/^				var pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };$/;"	r
parse	three.js	/^	parse: function ( json ) {$/;"	r
parse	three.js	/^	parse: function ( json, callbackFinished, url ) {$/;"	r
parse	three.js	/^	that.parse = function( root ) {$/;"	r
parse	three.js	/^THREE.JSONLoader.prototype.parse = function ( json, texturePath ) {$/;"	r
parseAnimations	three.js	/^THREE.MorphAnimMesh.prototype.parseAnimations = function () {$/;"	r
parseDDS	three.js	/^	parseDDS: function ( buffer, loadMipmaps ) {$/;"	r
parseGeometries	three.js	/^	parseGeometries: function ( json ) {$/;"	r
parseMaterials	three.js	/^	parseMaterials: function ( json ) {$/;"	r
parseModel	three.js	/^	function parseModel( scale ) {$/;"	r
parseMorphing	three.js	/^	function parseMorphing( scale ) {$/;"	r
parseObject	three.js	/^	parseObject: function () {$/;"	r
parseRecurseHierarchy	three.js	/^	var parseRecurseHierarchy = function( root, hierarchy ) {$/;"	r
parseSkin	three.js	/^	function parseSkin() {$/;"	r
particle	three.js	/^			var particle = new THREE.RenderableParticle();$/;"	r
particle	three.js	/^	particle: {$/;"	r
parts	three.js	/^		var parts = morph.name.match( pattern );$/;"	r
parts	three.js	/^		var parts = url.split( '\/' );$/;"	r
path	three.js	/^			var path = new THREE.Path();$/;"	r
path	three.js	/^		return { offset: glyph.ha*scale, path:path};$/;"	r
path	three.js	/^	this.path = path;$/;"	r
pathPt	three.js	/^		var pathPt = path.getPoint( xNorm );$/;"	r
paths	three.js	/^	var paths = data.paths;$/;"	r
pattern	three.js	/^	var pattern = \/([a-z]+)(\\d+)\/;$/;"	r
patternPath	three.js	/^	function patternPath( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture ) {$/;"	r
pause	three.js	/^THREE.Animation.prototype.pause = function() {$/;"	r
pause	three.js	/^THREE.KeyFrameAnimation.prototype.pause = function() {$/;"	r
pb	three.js	/^		pb = this.points[ c[ 1 ] ];$/;"	r
pb	three.js	/^	pb = points[ c[ 1 ] ];$/;"	r
pc	three.js	/^		pc = this.points[ c[ 2 ] ];$/;"	r
pc	three.js	/^	pc = points[ c[ 2 ] ];$/;"	r
pd	three.js	/^		pd = this.points[ c[ 3 ] ];$/;"	r
pd	three.js	/^	pd = points[ c[ 3 ] ];$/;"	r
perPixel	three.js	/^			perPixel: material.perPixel,$/;"	r
perPixel	three.js	/^	material.perPixel = this.perPixel;$/;"	r
perPixel	three.js	/^	this.perPixel = true;$/;"	r
perpendicularMagnitude	three.js	/^		var perpendicularMagnitude = this.distanceToPoint( point );$/;"	r
phi	three.js	/^		var phi = phiStart + i * inverseSegments * phiLength;$/;"	r
phiLength	three.js	/^							data.phiLength,$/;"	r
phiLength	three.js	/^	phiLength = phiLength || 2 * Math.PI;$/;"	r
phiLength	three.js	/^	this.phiLength = phiLength = phiLength !== undefined ? phiLength : Math.PI * 2;$/;"	r
phiSegments	three.js	/^	phiSegments = phiSegments !== undefined ? Math.max( 3, phiSegments ) : 8;$/;"	r
phiStart	three.js	/^							data.phiStart,$/;"	r
phiStart	three.js	/^	phiStart = phiStart || 0;$/;"	r
phiStart	three.js	/^	this.phiStart = phiStart = phiStart !== undefined ? phiStart : 0;$/;"	r
physicallyBasedShading	three.js	/^	this.physicallyBasedShading = false;$/;"	r
pickingRay	three.js	/^	this.pickingRay = function ( vector, camera ) {$/;"	r
pl	three.js	/^			for (p=0, pl = allpts.length; p<pl; p++) {$/;"	r
pl	three.js	/^		for ( p = 0, pl = _programs.length; p < pl; p ++ ) {$/;"	r
pl	three.js	/^	for ( var p = 0, pl = paths.length; p < pl; p ++ ) {$/;"	r
plane	three.js	/^				var plane = planes[i];$/;"	r
plane	three.js	/^	plane: function ( optionalTarget ) {$/;"	r
planeDistance	three.js	/^						var planeDistance = localRay.distanceToPlane( facePlane );$/;"	r
planeDistance	three.js	/^					var planeDistance = localRay.distanceToPlane( facePlane );$/;"	r
planeHeight	three.js	/^	var planeHeight = 2 * halfHeight;$/;"	r
planeSign	three.js	/^							var planeSign = localRay.direction.dot( facePlane.normal );$/;"	r
planeSign	three.js	/^						var planeSign = localRay.direction.dot( facePlane.normal );$/;"	r
planeWidth	three.js	/^	var planeWidth = planeHeight * aspect;$/;"	r
planes	three.js	/^			var planes = this.planes;$/;"	r
planes	three.js	/^		var planes = this.planes;$/;"	r
planes	three.js	/^	this.planes = [$/;"	r
play	three.js	/^THREE.Animation.prototype.play = function ( loop, startTimeMS ) {$/;"	r
play	three.js	/^THREE.KeyFrameAnimation.prototype.play = function( loop, startTimeMS ) {$/;"	r
playAnimation	three.js	/^THREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {$/;"	r
playAnimation	three.js	/^THREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {$/;"	r
playing	three.js	/^	var playing = [];$/;"	r
point	three.js	/^							point: interSegment.clone().applyMatrix4( object.matrixWorld ),$/;"	r
point	three.js	/^							point: raycaster.ray.at( planeDistance ),$/;"	r
point	three.js	/^						point: raycaster.ray.at( planeDistance ),$/;"	r
point	three.js	/^				point = points[ i ];$/;"	r
point	three.js	/^				point: object.position,$/;"	r
point	three.js	/^			point = ( this.points.length - 1 ) * index;$/;"	r
point	three.js	/^			point = 0, intPoint = 0, oldIntPoint = 0,$/;"	r
point	three.js	/^			var point = new THREE.Vector3();$/;"	r
point	three.js	/^			var point = points[ 0 ];$/;"	r
point	three.js	/^		point = ( points.length - 1 ) * t;$/;"	r
point	three.js	/^		point = ( this.points.length - 1 ) * k;$/;"	r
point	three.js	/^		point: { length: 0, colors: new Array(), positions: new Array(), distances: new Array() },$/;"	r
point	three.js	/^		var points = this.points, point, intPoint, weight;$/;"	r
point	three.js	/^	point = ( points.length - 1 ) * scale;$/;"	r
point	three.js	/^	point = ( points.length - 1 ) * t;$/;"	r
point	three.js	/^	point, intPoint, weight, w2, w3,$/;"	r
point	three.js	/^	var point = this.v2.clone().sub(this.v1);$/;"	r
point	three.js	/^	var points = this.points, point, intPoint, weight;$/;"	r
point	three.js	/^        point = ( points.length - 0 ) * t;$/;"	r
point	three.js	/^        var points = this.points, point, intPoint, weight;$/;"	r
point	three.js	/^\/\/ 		var points = this.points, point, intPoint, weight;$/;"	r
pointColors	three.js	/^		pointColors = zlights.point.colors,$/;"	r
pointCount	three.js	/^		pointCount = 0,$/;"	r
pointDistances	three.js	/^		pointDistances = zlights.point.distances,$/;"	r
pointLength	three.js	/^		pointLength = 0,$/;"	r
pointLightWeightingHalf	three.js	/^					"pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );",$/;"	r
pointLightWeightingHalfBack	three.js	/^						"pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );",$/;"	r
pointLights	three.js	/^		var pointLights = 0;$/;"	r
pointMap	three.js	/^	this.pointMap = pointMap;$/;"	r
pointMap	three.js	/^	var pointMap = {};$/;"	r
pointOffset	three.js	/^					setColorGamma( pointColors, pointOffset, color, intensity * intensity );$/;"	r
pointOffset	three.js	/^					setColorLinear( pointColors, pointOffset, color, intensity );$/;"	r
pointOffset	three.js	/^				pointOffset = pointLength * 3;$/;"	r
pointOffset	three.js	/^		pointOffset = 0,$/;"	r
pointPositions	three.js	/^		pointPositions = zlights.point.positions,$/;"	r
points	three.js	/^				var points = [];$/;"	r
points	three.js	/^			points: 0$/;"	r
points	three.js	/^			var points = scope.pointMap[ point ];$/;"	r
points	three.js	/^		_this.info.render.points = 0;$/;"	r
points	three.js	/^		this.points = (points == undefined) ? [] : points;$/;"	r
points	three.js	/^		this.points = [];$/;"	r
points	three.js	/^		this.points = newpoints;$/;"	r
points	three.js	/^		var points = [$/;"	r
points	three.js	/^		var points = this.points, point, intPoint, weight;$/;"	r
points	three.js	/^	this.points = (points == undefined) ? [] : points;$/;"	r
points	three.js	/^	this.points = [];$/;"	r
points	three.js	/^	this.points = points;$/;"	r
points	three.js	/^	var points = [];$/;"	r
points	three.js	/^	var points = this.getPoints();$/;"	r
points	three.js	/^	var points = this.points, point, intPoint, weight;$/;"	r
points	three.js	/^        var points = this.points, point, intPoint, weight;$/;"	r
pointsFrustum	three.js	/^			pointsFrustum = light.pointsFrustum,$/;"	r
pointsFrustum	three.js	/^			pointsFrustum = virtualLight.pointsFrustum;$/;"	r
pointsFrustum	three.js	/^		var pointsFrustum = virtualLight.pointsFrustum;$/;"	r
pointsFrustum	three.js	/^		virtualLight.pointsFrustum = [];$/;"	r
pointsWorld	three.js	/^			pointsWorld = light.pointsWorld;$/;"	r
pointsWorld	three.js	/^		var pointsWorld = virtualLight.pointsWorld,$/;"	r
pointsWorld	three.js	/^		virtualLight.pointsWorld = [];$/;"	r
polygonOffset	three.js	/^		material.polygonOffset = this.polygonOffset;$/;"	r
polygonOffset	three.js	/^	this.polygonOffset = false;$/;"	r
polygonOffsetFactor	three.js	/^		material.polygonOffsetFactor = this.polygonOffsetFactor;$/;"	r
polygonOffsetFactor	three.js	/^	this.polygonOffsetFactor = 0;$/;"	r
polygonOffsetUnits	three.js	/^		material.polygonOffsetUnits = this.polygonOffsetUnits;$/;"	r
polygonOffsetUnits	three.js	/^	this.polygonOffsetUnits = 0;$/;"	r
pos	three.js	/^							pos = objJSON.direction;$/;"	r
pos	three.js	/^							pos = objJSON.position;$/;"	r
pos	three.js	/^						pos = objJSON.position;$/;"	r
pos	three.js	/^			nextKey.pos = this.getNextKeyWith( "pos", h, 1 );$/;"	r
pos	three.js	/^			prevKey.pos = this.data.hierarchy[ h ].keys[ 0 ];$/;"	r
pos	three.js	/^			var pos = new THREE.Vector3();$/;"	r
pos	three.js	/^		pos = path.getPointAt( u );$/;"	r
pos	three.js	/^		pos, pos2 = new THREE.Vector3(),$/;"	r
pos2	three.js	/^		pos, pos2 = new THREE.Vector3(),$/;"	r
pose	three.js	/^THREE.SkinnedMesh.prototype.pose = function () {$/;"	r
position	three.js	/^						gyro.position = light.shadowCascadeOffset;$/;"	r
position	three.js	/^				position = this.getPoint( index );$/;"	r
position	three.js	/^				var position = geometry.attributes[ "position" ];$/;"	r
position	three.js	/^				var position = geometryAttributes[ "position" ];$/;"	r
position	three.js	/^			console.warn( "Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()" );$/;"	r
position	three.js	/^			position = this.getPoint( index );$/;"	r
position	three.js	/^			var position = data.transform.position,$/;"	r
position	three.js	/^		_sprite.attributes.position           = _gl.getAttribLocation ( _sprite.program, "position" );$/;"	r
position	three.js	/^		e.style.position = "absolute";$/;"	r
position	three.js	/^		position,$/;"	r
position	three.js	/^	this.position = new THREE.Vector3();$/;"	r
position	three.js	/^	this.position = origin;$/;"	r
position2	three.js	/^		position2 = new THREE.Vector3();$/;"	r
positionArray	three.js	/^		var positionArray;$/;"	r
positionScreen	three.js	/^					_v1.positionScreen,$/;"	r
positionScreen	three.js	/^					_v2.positionScreen$/;"	r
positionScreen	three.js	/^					_v2.positionScreen,$/;"	r
positionScreen	three.js	/^					_v3.positionScreen$/;"	r
positionScreen	three.js	/^					_v3.positionScreen,$/;"	r
positionScreen	three.js	/^					_v4.positionScreen$/;"	r
positionScreen	three.js	/^	this.positionScreen = new THREE.Vector3();$/;"	r
positionScreen	three.js	/^	this.positionScreen = new THREE.Vector4();$/;"	r
positionWorld	three.js	/^	this.positionWorld = new THREE.Vector3();$/;"	r
positions	three.js	/^			var positions = this.attributes[ "position" ].array;$/;"	r
positions	three.js	/^		var positions = this.attributes[ "position" ].array;$/;"	r
pp	three.js	/^						pp = [ "r", "g", "b" ];$/;"	r
pp	three.js	/^						pp = [ "x", "y", "z" ];$/;"	r
pp	three.js	/^					var pp;$/;"	r
precision	three.js	/^				var precision = raycaster.precision;$/;"	r
precision	three.js	/^			var precision = raycaster.linePrecision;$/;"	r
precision	three.js	/^		var precision = Math.pow( 10, precisionPoints );$/;"	r
precision	three.js	/^	THREE.Raycaster.prototype.precision = 0.0001;$/;"	r
precisionPoints	three.js	/^		var precisionPoints = 4; \/\/ number of decimal points, eg. 4 for epsilon of 0.0001$/;"	r
precisionSq	three.js	/^			var precisionSq = precision * precision;$/;"	r
prefix	three.js	/^		var prefix = "precision " + precision + " float;\\n";$/;"	r
prefix_fragment	three.js	/^		var prefix_fragment = [$/;"	r
prefix_vertex	three.js	/^		var prefix_vertex = [$/;"	r
premultipliedAlpha	three.js	/^			if ( ! ( _gl = _canvas.getContext( 'experimental-webgl', { alpha: _alpha, premultipliedAlpha: _premultipliedAlpha, antialias: _antialias, stencil: _stencil, preserveDrawingBuffer: _preserveDrawingBuffer } ) ) ) {$/;"	r
premultiplyAlpha	three.js	/^		texture.premultiplyAlpha = this.premultiplyAlpha;$/;"	r
premultiplyAlpha	three.js	/^	this.premultiplyAlpha = false;$/;"	r
prepare	three.js	/^	function prepare( vector ) {$/;"	r
prev	three.js	/^						prev = this.getPrevKeyWith( sid, h, end );$/;"	r
prevHoleVert	three.js	/^				prevHoleVert = ( holeIndex - 1 ) >= 0 ? holeIndex - 1 : hole.length - 1;$/;"	r
prevHoleVert	three.js	/^			prevHoleVert = ( holeIndex - 1 ) >= 0 ? holeIndex - 1 : hole.length - 1;$/;"	r
prevHoleVert	three.js	/^			prevHoleVert, nextHoleVert,$/;"	r
prevKey	three.js	/^							prevKey = nextKey;$/;"	r
prevKey	three.js	/^						prevKey = keys[ 0 ];$/;"	r
prevKey	three.js	/^						prevKey = nextKey;$/;"	r
prevKey	three.js	/^						prevKey = this.data.hierarchy[ h ].keys[ 0 ];$/;"	r
prevKey	three.js	/^					animationCache.prevKey = prevKey;$/;"	r
prevKey	three.js	/^				node.animationCache.prevKey = keys[ 0 ];$/;"	r
prevKey	three.js	/^				node.animationCache.prevKey = null;$/;"	r
prevKey	three.js	/^				object.animationCache.prevKey = { pos: 0, rot: 0, scl: 0 };$/;"	r
prevKey	three.js	/^			prevKey = animationCache.prevKey;$/;"	r
prevKey	three.js	/^			prevKey = animationCache.prevKey[ type ];$/;"	r
prevKey	three.js	/^			var prevKey = object.animationCache.prevKey;$/;"	r
prevKey	three.js	/^	var prevKey, nextKey;$/;"	r
prevShapeVert	three.js	/^				prevShapeVert = ( shapeIndex - 1 ) >= 0 ? shapeIndex - 1 : shape.length - 1;$/;"	r
prevShapeVert	three.js	/^			prevShapeVert = ( shapeIndex - 1 ) >= 0 ? shapeIndex - 1 : shape.length - 1;$/;"	r
prevShapeVert	three.js	/^		var prevShapeVert, nextShapeVert,$/;"	r
prevXYZ	three.js	/^			prevXYZ = prevKey[ type ];$/;"	r
prevXYZ	three.js	/^	var prevXYZ, nextXYZ;$/;"	r
primitives	three.js	/^				var primitives = ( object.type === THREE.LineStrip ) ? _gl.LINE_STRIP : _gl.LINES;$/;"	r
primitives	three.js	/^			var primitives = ( object.type === THREE.LineStrip ) ? _gl.LINE_STRIP : _gl.LINES;$/;"	r
process	three.js	/^	var process = function( contour, indices ) {$/;"	r
program	three.js	/^			_lensFlare.program = createProgram( THREE.ShaderFlares[ "lensFlare" ], _precision );$/;"	r
program	three.js	/^			_lensFlare.program = createProgram( THREE.ShaderFlares[ "lensFlareVertexTexture" ], _precision );$/;"	r
program	three.js	/^			object.render( function( object ) { _this.renderBufferImmediate( object, program, material ); } );$/;"	r
program	three.js	/^		_sprite.program = createProgram( THREE.ShaderSprite[ "sprite" ], _precision );$/;"	r
program	three.js	/^		material.program = buildProgram( shaderID, material.fragmentShader, material.vertexShader, material.uniforms, material.attributes, material.defines, parameters );$/;"	r
program	three.js	/^		material.program = undefined;$/;"	r
program	three.js	/^		program = _gl.createProgram();$/;"	r
program	three.js	/^		program, buffer, material,$/;"	r
program	three.js	/^		var program = _gl.createProgram();$/;"	r
program	three.js	/^		var program = material.program,$/;"	r
program	three.js	/^		var program = material.program;$/;"	r
program	three.js	/^		var program = setProgram( camera, lights, fog, material, object );$/;"	r
program	three.js	/^	material.program = this.program;$/;"	r
program	three.js	/^	this.program = function ( context, color ) {};$/;"	r
program	three.js	/^	this.renderBufferImmediate = function ( object, program, material ) {$/;"	r
programAttributes	three.js	/^		var programAttributes = program.attributes;$/;"	r
programInfo	three.js	/^				programInfo = _programs[ i ];$/;"	r
programInfo	three.js	/^			programInfo = _programs[ i ];$/;"	r
programInfo	three.js	/^			var programInfo = _programs[ p ];$/;"	r
programs	three.js	/^			programs: 0,$/;"	r
programs	three.js	/^		_this.info.memory.programs = _programs.length;$/;"	r
progress	three.js	/^			var progress = {$/;"	r
projectGraph	three.js	/^	var projectGraph = function ( root, sortObjects ) {$/;"	r
projectObject	three.js	/^	var projectObject = function ( object ) {$/;"	r
projectOnPlane	three.js	/^	projectOnPlane: function () {$/;"	r
projectOnVector	three.js	/^	projectOnVector: function () {$/;"	r
projectPoint	three.js	/^	projectPoint: function ( point, optionalTarget ) {$/;"	r
projectScene	three.js	/^	this.projectScene = function ( scene, camera, sortObjects, sortElements ) {$/;"	r
projectVector	three.js	/^	this.projectVector = function ( vector, camera ) {$/;"	r
projectionMatrix	three.js	/^		_sprite.uniforms.projectionMatrix     = _gl.getUniformLocation( _sprite.program, "projectionMatrix" );$/;"	r
projectionMatrix	three.js	/^	this.projectionMatrix = new THREE.Matrix4();$/;"	r
projectionMatrix	three.js	/^	this.projectionMatrix = this.cameraO.projectionMatrix;$/;"	r
projectionMatrix	three.js	/^	this.projectionMatrix = this.cameraP.projectionMatrix;$/;"	r
projectionMatrixInverse	three.js	/^	this.projectionMatrixInverse = new THREE.Matrix4();$/;"	r
projector	three.js	/^	var projector = new THREE.Projector();$/;"	r
prop	three.js	/^			Object.defineProperty( obj, prop, Object.getOwnPropertyDescriptor( source, prop ) );$/;"	r
prop	three.js	/^			var prop = keys[i];$/;"	r
prototype	three.js	/^	constructor.prototype = Object.create( THREE.Curve.prototype );$/;"	r
prototype	three.js	/^THREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );$/;"	r
prototype	three.js	/^THREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );$/;"	r
prototype	three.js	/^THREE.AreaLight.prototype = Object.create( THREE.Light.prototype );$/;"	r
prototype	three.js	/^THREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );$/;"	r
prototype	three.js	/^THREE.AxisHelper.prototype = Object.create( THREE.Line.prototype );$/;"	r
prototype	three.js	/^THREE.Bone.prototype = Object.create( THREE.Object3D.prototype );$/;"	r
prototype	three.js	/^THREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );$/;"	r
prototype	three.js	/^THREE.Box2.prototype = {$/;"	r
prototype	three.js	/^THREE.Box3.prototype = {$/;"	r
prototype	three.js	/^THREE.BoxHelper.prototype = Object.create( THREE.Line.prototype );$/;"	r
prototype	three.js	/^THREE.BufferGeometry.prototype = {$/;"	r
prototype	three.js	/^THREE.Camera.prototype = Object.create( THREE.Object3D.prototype );$/;"	r
prototype	three.js	/^THREE.CameraHelper.prototype = Object.create( THREE.Line.prototype );$/;"	r
prototype	three.js	/^THREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );$/;"	r
prototype	three.js	/^THREE.Clock.prototype = {$/;"	r
prototype	three.js	/^THREE.Color.prototype = {$/;"	r
prototype	three.js	/^THREE.CombinedCamera.prototype = Object.create( THREE.Camera.prototype );$/;"	r
prototype	three.js	/^THREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );$/;"	r
prototype	three.js	/^THREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );$/;"	r
prototype	three.js	/^THREE.CubeGeometry.prototype = Object.create( THREE.Geometry.prototype );$/;"	r
prototype	three.js	/^THREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );$/;"	r
prototype	three.js	/^THREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );$/;"	r
prototype	three.js	/^THREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );$/;"	r
prototype	three.js	/^THREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );$/;"	r
prototype	three.js	/^THREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );$/;"	r
prototype	three.js	/^THREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );$/;"	r
prototype	three.js	/^THREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );$/;"	r
prototype	three.js	/^THREE.Euler.prototype = {$/;"	r
prototype	three.js	/^THREE.EventDispatcher.prototype = {$/;"	r
prototype	three.js	/^THREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );$/;"	r
prototype	three.js	/^THREE.Face3.prototype = {$/;"	r
prototype	three.js	/^THREE.Face4.prototype = {$/;"	r
prototype	three.js	/^THREE.FaceNormalsHelper.prototype = Object.create( THREE.Line.prototype );$/;"	r
prototype	three.js	/^THREE.Frustum.prototype = {$/;"	r
prototype	three.js	/^THREE.Geometry.prototype = {$/;"	r
prototype	three.js	/^THREE.GeometryLoader.prototype = {$/;"	r
prototype	three.js	/^THREE.GridHelper.prototype = Object.create( THREE.Line.prototype );$/;"	r
prototype	three.js	/^THREE.Gyroscope.prototype = Object.create( THREE.Object3D.prototype );$/;"	r
prototype	three.js	/^THREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );$/;"	r
prototype	three.js	/^THREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );$/;"	r
prototype	three.js	/^THREE.IcosahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );$/;"	r
prototype	three.js	/^THREE.ImageLoader.prototype = {$/;"	r
prototype	three.js	/^THREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );$/;"	r
prototype	three.js	/^THREE.JSONLoader.prototype = Object.create( THREE.Loader.prototype );$/;"	r
prototype	three.js	/^THREE.LOD.prototype = Object.create( THREE.Object3D.prototype );$/;"	r
prototype	three.js	/^THREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );$/;"	r
prototype	three.js	/^THREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );$/;"	r
prototype	three.js	/^THREE.Light.prototype = Object.create( THREE.Object3D.prototype );$/;"	r
prototype	three.js	/^THREE.Line.prototype = Object.create( THREE.Object3D.prototype );$/;"	r
prototype	three.js	/^THREE.Line3.prototype = {$/;"	r
prototype	three.js	/^THREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );$/;"	r
prototype	three.js	/^THREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );$/;"	r
prototype	three.js	/^THREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );$/;"	r
prototype	three.js	/^THREE.Loader.prototype = {$/;"	r
prototype	three.js	/^THREE.Material.prototype = {$/;"	r
prototype	three.js	/^THREE.MaterialLoader.prototype = {$/;"	r
prototype	three.js	/^THREE.Matrix3.prototype = {$/;"	r
prototype	three.js	/^THREE.Matrix4.prototype = {$/;"	r
prototype	three.js	/^THREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );$/;"	r
prototype	three.js	/^THREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );$/;"	r
prototype	three.js	/^THREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );$/;"	r
prototype	three.js	/^THREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );$/;"	r
prototype	three.js	/^THREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );$/;"	r
prototype	three.js	/^THREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );$/;"	r
prototype	three.js	/^THREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );$/;"	r
prototype	three.js	/^THREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );$/;"	r
prototype	three.js	/^THREE.Object3D.prototype = {$/;"	r
prototype	three.js	/^THREE.ObjectLoader.prototype = {$/;"	r
prototype	three.js	/^THREE.OctahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );$/;"	r
prototype	three.js	/^THREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );$/;"	r
prototype	three.js	/^THREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );$/;"	r
prototype	three.js	/^THREE.Particle.prototype = Object.create( THREE.Object3D.prototype );$/;"	r
prototype	three.js	/^THREE.ParticleBasicMaterial.prototype = Object.create( THREE.Material.prototype );$/;"	r
prototype	three.js	/^THREE.ParticleCanvasMaterial.prototype = Object.create( THREE.Material.prototype );$/;"	r
prototype	three.js	/^THREE.ParticleSystem.prototype = Object.create( THREE.Object3D.prototype );$/;"	r
prototype	three.js	/^THREE.Path.prototype = Object.create( THREE.CurvePath.prototype );$/;"	r
prototype	three.js	/^THREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );$/;"	r
prototype	three.js	/^THREE.Plane.prototype = {$/;"	r
prototype	three.js	/^THREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );$/;"	r
prototype	three.js	/^THREE.PointLight.prototype = Object.create( THREE.Light.prototype );$/;"	r
prototype	three.js	/^THREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );$/;"	r
prototype	three.js	/^THREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );$/;"	r
prototype	three.js	/^THREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );$/;"	r
prototype	three.js	/^THREE.Quaternion.prototype = {$/;"	r
prototype	three.js	/^THREE.Ray.prototype = {$/;"	r
prototype	three.js	/^THREE.Ribbon.prototype = Object.create( THREE.Object3D.prototype );$/;"	r
prototype	three.js	/^THREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );$/;"	r
prototype	three.js	/^THREE.Scene.prototype = Object.create( THREE.Object3D.prototype );$/;"	r
prototype	three.js	/^THREE.SceneLoader.prototype = {$/;"	r
prototype	three.js	/^THREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );$/;"	r
prototype	three.js	/^THREE.Shape.prototype = Object.create( THREE.Path.prototype );$/;"	r
prototype	three.js	/^THREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );$/;"	r
prototype	three.js	/^THREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );$/;"	r
prototype	three.js	/^THREE.Sphere.prototype = {$/;"	r
prototype	three.js	/^THREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );$/;"	r
prototype	three.js	/^THREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );$/;"	r
prototype	three.js	/^THREE.SpotLight.prototype = Object.create( THREE.Light.prototype );$/;"	r
prototype	three.js	/^THREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );$/;"	r
prototype	three.js	/^THREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );$/;"	r
prototype	three.js	/^THREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );$/;"	r
prototype	three.js	/^THREE.TetrahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );$/;"	r
prototype	three.js	/^THREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );$/;"	r
prototype	three.js	/^THREE.Texture.prototype = {$/;"	r
prototype	three.js	/^THREE.TextureLoader.prototype = {$/;"	r
prototype	three.js	/^THREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );$/;"	r
prototype	three.js	/^THREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );$/;"	r
prototype	three.js	/^THREE.Triangle.prototype = {$/;"	r
prototype	three.js	/^THREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );$/;"	r
prototype	three.js	/^THREE.Vector2.prototype = {$/;"	r
prototype	three.js	/^THREE.Vector3.prototype = {$/;"	r
prototype	three.js	/^THREE.Vector4.prototype = {$/;"	r
prototype	three.js	/^THREE.VertexNormalsHelper.prototype = Object.create( THREE.Line.prototype );$/;"	r
prototype	three.js	/^THREE.VertexTangentsHelper.prototype = Object.create( THREE.Line.prototype );$/;"	r
prototype	three.js	/^THREE.WebGLRenderTarget.prototype = {$/;"	r
prototype	three.js	/^THREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );$/;"	r
prototype	three.js	/^THREE.WireframeHelper.prototype = Object.create( THREE.Line.prototype );$/;"	r
prototype	three.js	/^THREE.XHRLoader.prototype = {$/;"	r
pt	three.js	/^			var pt = points[ j ];$/;"	r
pt0	three.js	/^		var pt0 = points[ c[0] ],$/;"	r
pt1	three.js	/^			pt1 = points[ c[1] ],$/;"	r
pt1	three.js	/^	var pt1 = this.getPoint( t1 );$/;"	r
pt2	three.js	/^			pt2 = points[ c[2] ],$/;"	r
pt2	three.js	/^	var pt2 = this.getPoint( t2 );$/;"	r
pt3	three.js	/^			pt3 = points[ c[3] ];$/;"	r
pt_i	three.js	/^		var pt_i = contour[ i ];$/;"	r
pt_j	three.js	/^			return getBevelVec1( pt_i, pt_j, pt_k );$/;"	r
pt_j	three.js	/^		return getBevelVec2( pt_i, pt_j, pt_k );$/;"	r
pt_j	three.js	/^		var pt_j = contour[ j ];$/;"	r
pt_j	three.js	/^	function getBevelVec( pt_i, pt_j, pt_k ) {$/;"	r
pt_j	three.js	/^	function getBevelVec1( pt_i, pt_j, pt_k ) {$/;"	r
pt_j	three.js	/^	function getBevelVec2( pt_i, pt_j, pt_k ) {$/;"	r
pt_k	three.js	/^		var pt_k = contour[ k ];$/;"	r
pts	three.js	/^		var pts = [];$/;"	r
pts	three.js	/^	var d, pts = [];$/;"	r
pts	three.js	/^	var pts = this.getPoints( divisions, true );$/;"	r
pts	three.js	/^	var pts = this.getSpacedPoints( divisions, true );$/;"	r
pts1	three.js	/^				pts1 = hole[ h2 ];$/;"	r
pts2	three.js	/^					pts2 = shape[ p ];$/;"	r
px	three.js	/^			px = contour[ verts[ p ] ].x$/;"	r
py	three.js	/^			py = contour[ verts[ p ] ].y$/;"	r
q	three.js	/^							data.q,$/;"	r
q	three.js	/^			q = THREE.ExtrudeGeometry.__v6,$/;"	r
q	three.js	/^			q = gbone.rotq;$/;"	r
q	three.js	/^			var hue2rgb = function ( p, q, t ) {$/;"	r
q	three.js	/^			var q = ( 2 * l ) - p;$/;"	r
q	three.js	/^			var q = obj.quaternion;$/;"	r
q	three.js	/^		for( var p = n - 1, q = 0; q < n; p = q++ ) {$/;"	r
q	three.js	/^		var q = new THREE.Quaternion();$/;"	r
q	three.js	/^	this.q = q || 3;$/;"	r
q1	three.js	/^		var q1 = new THREE.Quaternion();$/;"	r
q_sub_p_dot_w_hat	three.js	/^		q_sub_p_dot_w_hat = q.sub( p ).dot( w_hat );$/;"	r
qax	three.js	/^		var qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;$/;"	r
qb	three.js	/^THREE.Quaternion.slerp = function ( qa, qb, qm, t ) {$/;"	r
qbx	three.js	/^		var qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;$/;"	r
quOverP	three.js	/^		var quOverP = in_q \/ in_p * u;$/;"	r
quadraticAttenuation	three.js	/^	this.quadraticAttenuation = 0.1;$/;"	r
quadraticCurveTo	three.js	/^THREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {$/;"	r
quat	three.js	/^							quat = objJSON.quaternion;$/;"	r
quat	three.js	/^						quat = objJSON.quaternion;$/;"	r
quat	three.js	/^					var quat = data.hierarchy[ h ].keys[ k ].rot;$/;"	r
quaternion	three.js	/^			var quaternion = q1.setFromAxisAngle( axis, angle );$/;"	r
quaternion	three.js	/^			var quaternion = q1.setFromEuler( rotation );$/;"	r
quaternion	three.js	/^		return function ( position, quaternion, scale ) {$/;"	r
quaternion	three.js	/^	compose: function ( position, quaternion, scale ) {$/;"	r
quaternion	three.js	/^	this.quaternion = new THREE.Quaternion();$/;"	r
quaternionObject	three.js	/^THREE.Gyroscope.prototype.quaternionObject = new THREE.Quaternion();$/;"	r
quaternionWorld	three.js	/^THREE.Gyroscope.prototype.quaternionWorld = new THREE.Quaternion();$/;"	r
qw	three.js	/^		var qw = q.w;$/;"	r
qx	three.js	/^		var qx = q.x;$/;"	r
qy	three.js	/^		var qy = q.y;$/;"	r
qz	three.js	/^		var qz = q.z;$/;"	r
r	three.js	/^					r = rnd & 0xf;$/;"	r
r	three.js	/^			_color1.r = _color1.g = _color1.b = 1 - smoothstep( v1.positionScreen.z * v1.positionScreen.w, _near, _far );$/;"	r
r	three.js	/^			_color2.r = _color2.g = _color2.b = 1 - smoothstep( v2.positionScreen.z * v2.positionScreen.w, _near, _far );$/;"	r
r	three.js	/^			_color3.r = _color3.g = _color3.b = 1 - smoothstep( v3.positionScreen.z * v3.positionScreen.w, _near, _far );$/;"	r
r	three.js	/^			_color3.r = _color3.g = _color3.b = 1 - smoothstep( v4.positionScreen.z * v4.positionScreen.w, _near, _far );$/;"	r
r	three.js	/^			_color4.r = _color4.g = _color4.b = 1 - smoothstep( v3.positionScreen.z * v3.positionScreen.w, _near, _far );$/;"	r
r	three.js	/^			r = 1.0 \/ ( s1 * t2 - s2 * t1 );$/;"	r
r	three.js	/^			r = THREE.Math.random16() * totalArea;$/;"	r
r	three.js	/^			this.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) \/ 100;$/;"	r
r	three.js	/^			this.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) \/ 255;$/;"	r
r	three.js	/^			this.r = hue2rgb( q, p, h + 1 \/ 3 );$/;"	r
r	three.js	/^			this.r = this.g = this.b = l;$/;"	r
r	three.js	/^			var r = THREE.Math.random16() * ( area1 + area2 );$/;"	r
r	three.js	/^			var r = obj.rotation;$/;"	r
r	three.js	/^			var r = this.r, g = this.g, b = this.b;$/;"	r
r	three.js	/^		r = 0, g = 0, b = 0,$/;"	r
r	three.js	/^		this.r = ( hex >> 16 & 255 ) \/ 255;$/;"	r
r	three.js	/^		this.r = Math.sqrt( color.r );$/;"	r
r	three.js	/^		this.r = Math.sqrt( this.r );$/;"	r
r	three.js	/^		this.r = color.r * color.r;$/;"	r
r	three.js	/^		this.r = color.r;$/;"	r
r	three.js	/^		this.r = color1.r + color2.r;$/;"	r
r	three.js	/^		this.r = r * r;$/;"	r
r	three.js	/^		this.r = r;$/;"	r
r	three.js	/^		var r = Math.floor( color.r * 255 );$/;"	r
r	three.js	/^		var r = new THREE.Vector3();$/;"	r
r	three.js	/^		var r = this.r, g = this.g, b = this.b;$/;"	r
r	three.js	/^		var r, index,$/;"	r
r	three.js	/^		var rnd = 0, r;$/;"	r
radToDeg	three.js	/^	radToDeg: function() {$/;"	r
radialSegments	three.js	/^							data.radialSegments,$/;"	r
radialSegments	three.js	/^	this.radialSegments = radialSegments = radialSegments || 8;$/;"	r
radialSegments	three.js	/^	this.radialSegments = radialSegments || 64;$/;"	r
radialSegments	three.js	/^	this.radialSegments = radialSegments || 8;$/;"	r
radianToDegreesFactor	three.js	/^		var radianToDegreesFactor = 180 \/ Math.PI;$/;"	r
radians	three.js	/^			radians = Math.acos( dir.y );$/;"	r
radians	three.js	/^	var radians;$/;"	r
radius	three.js	/^							data.radius,$/;"	r
radius	three.js	/^			result.radius = this.size( v1 ).length() * 0.5;$/;"	r
radius	three.js	/^			this.boundingSphere.radius = Math.sqrt( maxRadiusSq );$/;"	r
radius	three.js	/^		this.radius = Math.sqrt( maxRadiusSq );$/;"	r
radius	three.js	/^		this.radius = radius;$/;"	r
radius	three.js	/^		this.radius = sphere.radius;$/;"	r
radius	three.js	/^		this.radius = this.radius * matrix.getMaxScaleOnAxis();$/;"	r
radius	three.js	/^		var radius = v * ( radiusBottom - radiusTop ) + radiusTop;$/;"	r
radius	three.js	/^	radius = radius || 1;$/;"	r
radius	three.js	/^	radius = radius || 50;$/;"	r
radius	three.js	/^	this.radius = ( radius !== undefined ) ? radius : 0;$/;"	r
radius	three.js	/^	this.radius = radius = radius || 50;$/;"	r
radius	three.js	/^	this.radius = radius || 100;$/;"	r
radius	three.js	/^	this.radius = radius || 1;$/;"	r
radius	three.js	/^	this.radius = radius;$/;"	r
radiusBottom	three.js	/^							data.radiusBottom,$/;"	r
radiusBottom	three.js	/^	this.radiusBottom = radiusBottom = radiusBottom !== undefined ? radiusBottom : 20;$/;"	r
radiusBottom	three.js	/^THREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded ) {$/;"	r
radiusSegments	three.js	/^							data.radiusSegments,$/;"	r
radiusSq	three.js	/^				radiusSq =  x * x + y * y + z * z;$/;"	r
radiusSq	three.js	/^			radiusSq = points[ i ].lengthSq();$/;"	r
radiusSq	three.js	/^			var radiusSq, maxRadiusSq = 0;$/;"	r
radiusSq	three.js	/^		var radiusSq, maxRadiusSq = 0;$/;"	r
radiusSum	three.js	/^		var radiusSum = this.radius + sphere.radius;$/;"	r
radiusTop	three.js	/^							data.radiusTop,$/;"	r
radiusTop	three.js	/^	this.radiusTop = radiusTop = radiusTop !== undefined ? radiusTop : 20;$/;"	r
randFloat	three.js	/^	randFloat: function ( low, high ) {$/;"	r
randFloatSpread	three.js	/^	randFloatSpread: function ( range ) {$/;"	r
randInt	three.js	/^	randInt: function ( low, high ) {$/;"	r
random16	three.js	/^	random16: function () {$/;"	r
randomPointInFace	three.js	/^	randomPointInFace: function ( face, geometry, useCachedAreas ) {$/;"	r
randomPointInTriangle	three.js	/^	randomPointInTriangle: function () {$/;"	r
randomPointsInGeometry	three.js	/^	randomPointsInGeometry: function ( geometry, n ) {$/;"	r
range	three.js	/^			var range = frameRanges[ name ];$/;"	r
range	three.js	/^		var range = frameRanges[ name ];$/;"	r
ratioA	three.js	/^		var ratioA = Math.sin( ( 1 - t ) * halfTheta ) \/ sinHalfTheta,$/;"	r
ratioB	three.js	/^		ratioB = Math.sin( t * halfTheta ) \/ sinHalfTheta;$/;"	r
ray	three.js	/^		this.ray = new THREE.Ray( origin, direction );$/;"	r
raycaster	three.js	/^			intersectObject( descendants[ i ], raycaster, intersects );$/;"	r
raycaster	three.js	/^			intersectObject( object.getObjectForDistance( distance ), raycaster, intersects );$/;"	r
raycaster	three.js	/^	var intersectDescendants = function ( object, raycaster, intersects ) {$/;"	r
raycaster	three.js	/^	var intersectObject = function ( object, raycaster, intersects ) {$/;"	r
realDistance	three.js	/^			realDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];$/;"	r
recast	three.js	/^	recast: function () {$/;"	r
receiveShadow	three.js	/^							object.receiveShadow = objJSON.receiveShadow;$/;"	r
receiveShadow	three.js	/^		object.receiveShadow = this.receiveShadow;$/;"	r
receiveShadow	three.js	/^	this.receiveShadow = false;$/;"	r
reflect	three.js	/^	reflect: function () {$/;"	r
reflectivity	three.js	/^	material.reflectivity = this.reflectivity;$/;"	r
reflectivity	three.js	/^	this.reflectivity = 1;$/;"	r
refractionRatio	three.js	/^	material.refractionRatio = this.refractionRatio;$/;"	r
refractionRatio	three.js	/^	this.refractionRatio = 0.98;$/;"	r
refreshMaterial	three.js	/^			refreshMaterial = true;$/;"	r
refreshMaterial	three.js	/^		var refreshMaterial = false;$/;"	r
refreshUniformsCommon	three.js	/^	function refreshUniformsCommon ( uniforms, material ) {$/;"	r
refreshUniformsDash	three.js	/^	function refreshUniformsDash ( uniforms, material ) {$/;"	r
refreshUniformsFog	three.js	/^	function refreshUniformsFog ( uniforms, fog ) {$/;"	r
refreshUniformsLambert	three.js	/^	function refreshUniformsLambert ( uniforms, material ) {$/;"	r
refreshUniformsLights	three.js	/^	function refreshUniformsLights ( uniforms, lights ) {$/;"	r
refreshUniformsLine	three.js	/^	function refreshUniformsLine ( uniforms, material ) {$/;"	r
refreshUniformsParticle	three.js	/^	function refreshUniformsParticle ( uniforms, material ) {$/;"	r
refreshUniformsPhong	three.js	/^	function refreshUniformsPhong ( uniforms, material ) {$/;"	r
refreshUniformsShadow	three.js	/^	function refreshUniformsShadow ( uniforms, lights ) {$/;"	r
remove	three.js	/^	remove: function ( object ) {$/;"	r
removeEventListener	three.js	/^		object.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;$/;"	r
removeEventListener	three.js	/^	removeEventListener: function ( type, listener ) {$/;"	r
removeFromUpdate	three.js	/^	that.removeFromUpdate = function( animation ) {$/;"	r
removeHoles	three.js	/^	removeHoles: function ( contour, holes ) {$/;"	r
removeInstances	three.js	/^	function removeInstances( objlist, object ) {$/;"	r
removeInstancesDirect	three.js	/^	function removeInstancesDirect( objlist, object ) {$/;"	r
removeMaterials	three.js	/^	removeMaterials: function ( geometry, materialIndexArray ) {$/;"	r
removeObject	three.js	/^	function removeObject( object, scene ) {$/;"	r
render	three.js	/^						webglObject.render = true;$/;"	r
render	three.js	/^					webglObject.render = true;$/;"	r
render	three.js	/^				webglObject.render = false;$/;"	r
render	three.js	/^			webglObject.render = false;$/;"	r
render	three.js	/^		render: {$/;"	r
render	three.js	/^	this.render = function ( renderCallback ) { };$/;"	r
render	three.js	/^	this.render = function ( scene, camera ) {$/;"	r
render	three.js	/^	this.render = function ( scene, camera, renderTarget, forceClear ) {$/;"	r
render	three.js	/^	this.render = function ( scene, camera, viewportWidth, viewportHeight ) {$/;"	r
renderBuffer	three.js	/^	this.renderBuffer = function ( camera, lights, fog, material, geometryGroup, object ) {$/;"	r
renderBufferDirect	three.js	/^	this.renderBufferDirect = function ( camera, lights, fog, material, geometry, object ) {$/;"	r
renderBufferImmediate	three.js	/^	this.renderBufferImmediate = function ( object, program, material ) {$/;"	r
renderDepth	three.js	/^		object.renderDepth = this.renderDepth;$/;"	r
renderDepth	three.js	/^	this.renderDepth = null;$/;"	r
renderFace3	three.js	/^	function renderFace3( v1, v2, v3, uv1, uv2, uv3, element, material ) {$/;"	r
renderFace4	three.js	/^	function renderFace4( v1, v2, v3, v4, v5, v6, element, material ) {$/;"	r
renderImmediateObject	three.js	/^	this.renderImmediateObject = function ( camera, lights, fog, material, object ) {$/;"	r
renderLine	three.js	/^	function renderLine( v1, v2, element, material ) {$/;"	r
renderList	three.js	/^			renderList = scene.__webglObjects;$/;"	r
renderList	three.js	/^			renderList = scene.__webglObjectsImmediate;$/;"	r
renderList	three.js	/^		renderList = scene.__webglObjects;$/;"	r
renderList	three.js	/^		renderList = scene.__webglObjectsImmediate;$/;"	r
renderList	three.js	/^		renderList,$/;"	r
renderObjects	three.js	/^	function renderObjects ( renderList, reverse, materialType, camera, lights, fog, useBlending, overrideMaterial ) {$/;"	r
renderObjectsImmediate	three.js	/^	function renderObjectsImmediate ( renderList, materialType, camera, lights, fog, useBlending, overrideMaterial ) {$/;"	r
renderParticle	three.js	/^	function renderParticle( v1, element, material ) {$/;"	r
renderPlugins	three.js	/^	function renderPlugins( plugins, scene, camera ) {$/;"	r
renderPluginsPost	three.js	/^	this.renderPluginsPost = [];$/;"	r
renderPluginsPre	three.js	/^	this.renderPluginsPre = [];$/;"	r
renderTarget	three.js	/^					setupFrameBuffer( renderTarget.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );$/;"	r
renderTarget	three.js	/^				setTextureParameters( _gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo );$/;"	r
renderTarget	three.js	/^				setTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo );$/;"	r
renderTarget	three.js	/^				setupFrameBuffer( renderTarget.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );$/;"	r
renderTarget	three.js	/^		var renderTarget = event.target;$/;"	r
renderTarget	three.js	/^		var renderTarget = this.renderTarget;$/;"	r
renderTarget	three.js	/^	function setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {$/;"	r
renderTarget	three.js	/^	this.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );$/;"	r
renderTarget	three.js	/^	this.renderTarget = null;$/;"	r
renderType	three.js	/^		_lensFlare.uniforms.renderType     = _gl.getUniformLocation( _lensFlare.program, "renderType" );$/;"	r
reorder	three.js	/^	reorder: function () {$/;"	r
reparametrizeByArcLength	three.js	/^	this.reparametrizeByArcLength = function ( samplingCoef ) {$/;"	r
repeat	three.js	/^			var repeat = uvScaleMap.repeat;$/;"	r
repeat	three.js	/^	this.repeat = new THREE.Vector2( 1, 1 );$/;"	r
repeatX	three.js	/^				texture.image, repeatX === true && repeatY === true$/;"	r
repeatX	three.js	/^			var repeatX = texture.wrapS == THREE.RepeatWrapping;$/;"	r
repeatY	three.js	/^			var repeatY = texture.wrapT == THREE.RepeatWrapping;$/;"	r
request	three.js	/^				var request = new XMLHttpRequest();$/;"	r
request	three.js	/^			var request = new XMLHttpRequest();$/;"	r
request	three.js	/^		var request = new XMLHttpRequest();$/;"	r
requestAnimationFrame	three.js	/^		self.requestAnimationFrame = function ( callback ) {$/;"	r
requestAnimationFrame	three.js	/^		self.requestAnimationFrame = self[ vendors[ x ] + 'RequestAnimationFrame' ];$/;"	r
reservedTypes	three.js	/^							var reservedTypes = {$/;"	r
responseType	three.js	/^				request.responseType = "arraybuffer";$/;"	r
responseType	three.js	/^			request.responseType = "arraybuffer";$/;"	r
responseType	three.js	/^		request.responseType = "arraybuffer";$/;"	r
result	three.js	/^					result = event.content;$/;"	r
result	three.js	/^					result = event.scene;$/;"	r
result	three.js	/^					result = event;$/;"	r
result	three.js	/^					var result = context.parse( json, texturePath );$/;"	r
result	three.js	/^				var result;$/;"	r
result	three.js	/^			result = [];$/;"	r
result	three.js	/^			result;$/;"	r
result	three.js	/^			var result = binarySearch( 0, cumulativeAreas.length - 1 )$/;"	r
result	three.js	/^			var result = optionalTarget || new THREE.Sphere();$/;"	r
result	three.js	/^			var result = optionalTarget || new THREE.Vector3();$/;"	r
result	three.js	/^		result = {$/;"	r
result	three.js	/^		var result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );$/;"	r
result	three.js	/^		var result = [],$/;"	r
result	three.js	/^		var result = optionalTarget || new THREE.Plane();$/;"	r
result	three.js	/^		var result = optionalTarget || new THREE.Vector2();$/;"	r
result	three.js	/^		var result = optionalTarget || new THREE.Vector3();$/;"	r
resultLengthSq	three.js	/^		var resultLengthSq = result.lengthSq();$/;"	r
ret	three.js	/^			var ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );$/;"	r
ret	three.js	/^	var ret = {$/;"	r
return	three.js	/^						return;$/;"	r
return	three.js	/^					return;$/;"	r
return	three.js	/^				return;$/;"	r
return	three.js	/^			return;$/;"	r
return	three.js	/^		return;$/;"	r
reverse	three.js	/^		reverse = false; \/\/ If vertices are in order now, we shouldn't need to worry about them again (hopefully)!$/;"	r
reverse	three.js	/^		reverse = false;$/;"	r
reverse	three.js	/^	function renderObjects ( renderList, reverse, materialType, camera, lights, fog, useBlending, overrideMaterial ) {$/;"	r
reverse	three.js	/^	var reverse = !THREE.Shape.Utils.isClockWise( vertices ) ;$/;"	r
reverse	three.js	/^	var reverse = !THREE.Shape.Utils.isClockWise( vertices );$/;"	r
rgb2hex	three.js	/^		function rgb2hex( rgb ) {$/;"	r
right	three.js	/^		e.style.right = "0px";$/;"	r
right	three.js	/^		shadowCamera.right = _max.x;$/;"	r
right	three.js	/^		var right = aspect * top;$/;"	r
right	three.js	/^	makeFrustum: function ( left, right, bottom, top, near, far ) {$/;"	r
right	three.js	/^	makeOrthographic: function ( left, right, top, bottom, near, far ) {$/;"	r
right	three.js	/^	this.cameraO.right = halfWidth;$/;"	r
right	three.js	/^	this.right = new THREE.Vector3( 1, 0, 0 );$/;"	r
right	three.js	/^	this.right = right;$/;"	r
right	three.js	/^	this.right = width \/ 2$/;"	r
right	three.js	/^THREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {$/;"	r
rnd	three.js	/^					rnd = rnd >> 4;$/;"	r
rnd	three.js	/^		var rnd = 0, r;$/;"	r
root	three.js	/^	this.root = root;$/;"	r
rot	three.js	/^							rot = objJSON.rotation;$/;"	r
rot	three.js	/^						rot = objJSON.rotation;$/;"	r
rot	three.js	/^				object.animationCache.nextKey = { pos: 0, rot: 0, scl: 0 };$/;"	r
rot	three.js	/^				object.animationCache.prevKey = { pos: 0, rot: 0, scl: 0 };$/;"	r
rot	three.js	/^			nextKey.rot = this.getNextKeyWith( "rot", h, 1 );$/;"	r
rot	three.js	/^			prevKey.rot = this.data.hierarchy[ h ].keys[ 0 ];$/;"	r
rotateAxis	three.js	/^	rotateAxis: function ( v ) {$/;"	r
rotateByAxis	three.js	/^	rotateByAxis: function ( axis, angle ) {$/;"	r
rotateOnAxis	three.js	/^	rotateOnAxis: function() {$/;"	r
rotateX	three.js	/^	rotateX: function ( angle ) {$/;"	r
rotateX	three.js	/^	rotateX: function () {$/;"	r
rotateY	three.js	/^	rotateY: function ( angle ) {$/;"	r
rotateY	three.js	/^	rotateY: function () {$/;"	r
rotateZ	three.js	/^	rotateZ: function ( angle ) {$/;"	r
rotateZ	three.js	/^	rotateZ: function () {$/;"	r
rotation	three.js	/^					_particle.rotation = object.rotation.z;$/;"	r
rotation	three.js	/^				rotation = data.transform.rotation,$/;"	r
rotation	three.js	/^		                    rotation: 1, 				\/\/ rotation$/;"	r
rotation	three.js	/^		_lensFlare.uniforms.rotation       = _gl.getUniformLocation( _lensFlare.program, "rotation" );$/;"	r
rotation	three.js	/^		_sprite.uniforms.rotation             = _gl.getUniformLocation( _sprite.program, "rotation" );$/;"	r
rotation	three.js	/^	this.rotation = 0;$/;"	r
rotation	three.js	/^	this.rotation = new THREE.Euler();$/;"	r
rotation	three.js	/^	this.rotation = null;$/;"	r
rotation3d	three.js	/^	this.rotation3d = this.rotation;$/;"	r
rotationAutoUpdate	three.js	/^		object.rotationAutoUpdate = this.rotationAutoUpdate;$/;"	r
rotationAutoUpdate	three.js	/^	this.rotationAutoUpdate = false;$/;"	r
rotationAutoUpdate	three.js	/^	this.rotationAutoUpdate = true;$/;"	r
rows	three.js	/^			var rows = cols - i;$/;"	r
running	three.js	/^		this.running = false;$/;"	r
running	three.js	/^		this.running = true;$/;"	r
running	three.js	/^	this.running = false;$/;"	r
s	three.js	/^			\/\/ h,s,l ranges are in 0.0 - 1.0$/;"	r
s	three.js	/^			hsl.s = saturation;$/;"	r
s	three.js	/^			s = 0.5 \/ Math.sqrt( trace + 1.0 );$/;"	r
s	three.js	/^			s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );$/;"	r
s	three.js	/^			s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );$/;"	r
s	three.js	/^			s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );$/;"	r
s	three.js	/^			s = Math.sin( phi );$/;"	r
s	three.js	/^			s = gbone.scl;$/;"	r
s	three.js	/^			s,  c, 0, 0,$/;"	r
s	three.js	/^			s, intersection;$/;"	r
s	three.js	/^			s;$/;"	r
s	three.js	/^			var s = 0, sl = steps  + bevelSegments * 2;$/;"	r
s	three.js	/^			var s = obj.scale;$/;"	r
s	three.js	/^		\/\/ h,s,l ranges are in 0.0 - 1.0$/;"	r
s	three.js	/^		s = q_sub_p_dot_w_hat \/ v_dot_w_hat;$/;"	r
s	three.js	/^		var s = Math.sin( angle );$/;"	r
s	three.js	/^		var s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )$/;"	r
s	three.js	/^		var s = Math.sqrt( 1 - q.w * q.w );$/;"	r
s	three.js	/^	offsetHSL: function ( h, s, l ) {$/;"	r
s	three.js	/^	setHSL: function ( h, s, l ) {$/;"	r
s	three.js	/^	var s;$/;"	r
s0	three.js	/^						s0 = Math.max( 0, - ( a01 * s1 + b0) );$/;"	r
s0	three.js	/^					s0 = 0;$/;"	r
s0	three.js	/^					s0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );$/;"	r
s0	three.js	/^					s0 = Math.max( 0, - ( a01 * s1 + b0) );$/;"	r
s0	three.js	/^					s0 = Math.max( 0, - ( a01 * segExtent + b0 ) );$/;"	r
s0	three.js	/^			s0 = Math.max( 0, - ( a01 * s1 + b0 ) );$/;"	r
s0	three.js	/^			s0 = a01 * b1 - b0;$/;"	r
s0	three.js	/^		var s0, s1, sqrDist, extDet;$/;"	r
s1	three.js	/^						s1 = segExtent;$/;"	r
s1	three.js	/^					s1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );$/;"	r
s1	three.js	/^					s1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );$/;"	r
s1	three.js	/^					s1 = - segExtent;$/;"	r
s1	three.js	/^					s1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );$/;"	r
s1	three.js	/^			s1 = ( a01 > 0 ) ? - segExtent : segExtent;$/;"	r
s1	three.js	/^			s1 = a01 * b0 - b1;$/;"	r
s1	three.js	/^			s1 = uB - uA;$/;"	r
s1	three.js	/^			s1 = uvB.x - uvA.x;$/;"	r
s1	three.js	/^			s1, s2, t1, t2, r, t, test,$/;"	r
s1	three.js	/^			s1, s2, t1, t2, r;$/;"	r
s1	three.js	/^		var s1 = Math.sin( euler._x \/ 2 );$/;"	r
s2	three.js	/^			s2 = uC - uA;$/;"	r
s2	three.js	/^			s2 = uvC.x - uvA.x;$/;"	r
s2	three.js	/^		var s2 = Math.sin( euler._y \/ 2 );$/;"	r
s3	three.js	/^		var s3 = Math.sin( euler._z \/ 2 );$/;"	r
sa1	three.js	/^		sa1, sa2, sa3, sa4,$/;"	r
safeHasOwnProperty	three.js	/^		var safeHasOwnProperty = {}.hasOwnProperty;$/;"	r
sampling	three.js	/^			sampling = Math.ceil( samplingCoef * realDistance \/ sl.total );$/;"	r
sampling	three.js	/^			sampling, position,$/;"	r
saturation	three.js	/^				saturation = 0;$/;"	r
saturation	three.js	/^				saturation = lightness <= 0.5 ? delta \/ ( max + min ) : delta \/ ( 2 - max - min );$/;"	r
sb1	three.js	/^		sb1, sb2, sb3, sb4,$/;"	r
scale	three.js	/^					scale = scale * 0.33 + 0.33;$/;"	r
scale	three.js	/^				scale = data.transform.scale;$/;"	r
scale	three.js	/^				scale = scale < 0 ? 0 : 1;$/;"	r
scale	three.js	/^			scale = ( currentTime - prevKey.time ) \/ ( nextKey.time - prevKey.time );$/;"	r
scale	three.js	/^			scale = new THREE.Vector2( size * invAspect, size );$/;"	r
scale	three.js	/^			scale = this.size \/ face.resolution,$/;"	r
scale	three.js	/^			var scale = 1.0 \/ sw.lengthManhattan();$/;"	r
scale	three.js	/^		                    scale: 1, 					\/\/ scale$/;"	r
scale	three.js	/^		_lensFlare.uniforms.scale          = _gl.getUniformLocation( _lensFlare.program, "scale" );$/;"	r
scale	three.js	/^		_sprite.uniforms.scale                = _gl.getUniformLocation( _sprite.program, "scale" );$/;"	r
scale	three.js	/^		var i, sprite, material, screenPosition, size, fogType, scale = [];$/;"	r
scale	three.js	/^	material.scale = this.scale;$/;"	r
scale	three.js	/^	scale = ( json.scale !== undefined ) ? 1.0 \/ json.scale : 1.0;$/;"	r
scale	three.js	/^	scale: function ( v ) {$/;"	r
scale	three.js	/^	this.scale = 1;$/;"	r
scale	three.js	/^	this.scale = new THREE.Vector2();$/;"	r
scale	three.js	/^	this.scale = new THREE.Vector3( 1, 1, 1 );$/;"	r
scale	three.js	/^	var scale;$/;"	r
scaleByViewport	three.js	/^	material.scaleByViewport = this.scaleByViewport;$/;"	r
scaleByViewport	three.js	/^	this.scaleByViewport = !this.sizeAttenuation;$/;"	r
scaleObject	three.js	/^THREE.Gyroscope.prototype.scaleObject = new THREE.Vector3();$/;"	r
scalePt2	three.js	/^	function scalePt2 ( pt, vec, size ) {$/;"	r
scaleWorld	three.js	/^THREE.Gyroscope.prototype.scaleWorld = new THREE.Vector3();$/;"	r
scaleX	three.js	/^				scaleX = element.object.scale.x;$/;"	r
scaleX	three.js	/^				scaleX = element.scale.x * _canvasWidthHalf;$/;"	r
scaleX	three.js	/^			scaleX = scale;$/;"	r
scaleX	three.js	/^			scaleX, scaleY,$/;"	r
scaleX	three.js	/^			var scaleX = 1 \/ v1.set( me[0], me[1], me[2] ).length();$/;"	r
scaleXSq	three.js	/^		var scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];$/;"	r
scaleY	three.js	/^				scaleY = element.object.scale.y;$/;"	r
scaleY	three.js	/^				scaleY = element.scale.y * _canvasHeightHalf;$/;"	r
scaleY	three.js	/^			scaleY = scale;$/;"	r
scaleY	three.js	/^			var scaleY = 1 \/ v1.set( me[4], me[5], me[6] ).length();$/;"	r
scaleYSq	three.js	/^		var scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];$/;"	r
scaleZ	three.js	/^			var scaleZ = 1 \/ v1.set( me[8], me[9], me[10] ).length();$/;"	r
scaleZSq	three.js	/^		var scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];$/;"	r
scene	three.js	/^				scene = scene.parent;$/;"	r
scene	three.js	/^			scene: new THREE.Scene(),$/;"	r
scene	three.js	/^			var scene = this;$/;"	r
scene	three.js	/^		renderPlugins( this.renderPluginsPost, scene, camera );$/;"	r
scene	three.js	/^		renderPlugins( this.renderPluginsPre, scene, camera );$/;"	r
scene	three.js	/^	attach: function ( child, scene, parent ) {$/;"	r
scene	three.js	/^	function renderPlugins( plugins, scene, camera ) {$/;"	r
sceneFogType	three.js	/^				sceneFogType = 1;$/;"	r
sceneFogType	three.js	/^				sceneFogType = 2;$/;"	r
sceneFogType	three.js	/^			sceneFogType = 0;$/;"	r
sceneFogType	three.js	/^		var sceneFogType = 0;$/;"	r
scl	three.js	/^							scl = objJSON.scale;$/;"	r
scl	three.js	/^						scl = objJSON.scale;$/;"	r
scl	three.js	/^			nextKey.scl = this.getNextKeyWith( "scl", h, 1 );$/;"	r
scl	three.js	/^			prevKey.scl = this.data.hierarchy[ h ].keys[ 0 ];$/;"	r
scope	three.js	/^			var scope = this;$/;"	r
scope	three.js	/^		var scope = this;$/;"	r
scope	three.js	/^	var scope = this,$/;"	r
scope	three.js	/^	var scope = this;$/;"	r
screenPosition	three.js	/^						uniforms.screenPosition,$/;"	r
screenPosition	three.js	/^		_lensFlare.uniforms.screenPosition = _gl.getUniformLocation( _lensFlare.program, "screenPosition" );$/;"	r
screenPosition	three.js	/^		_sprite.uniforms.screenPosition    	  = _gl.getUniformLocation( _sprite.program, "screenPosition" );$/;"	r
screenPosition	three.js	/^		var screenPosition = new THREE.Vector3( 1, 1, 0 ),$/;"	r
screenPositionPixels	three.js	/^			screenPositionPixels = new THREE.Vector2( 1, 1 );$/;"	r
sdir	three.js	/^			sdir = new THREE.Vector3(), tdir = new THREE.Vector3(),$/;"	r
sdir	three.js	/^		var sdir = new THREE.Vector3(), tdir = new THREE.Vector3();$/;"	r
segCenter	three.js	/^		var segCenter = v0.clone().add( v1 ).multiplyScalar( 0.5 );$/;"	r
segDir	three.js	/^		var segDir = v1.clone().sub( v0 ).normalize();$/;"	r
segExtent	three.js	/^		var segExtent = v0.distanceTo( v1 ) * 0.5;$/;"	r
segment	three.js	/^			var segment = o + thetaSegment;$/;"	r
segment	three.js	/^			var segment = thetaStart + o \/ thetaSegments * thetaLength;$/;"	r
segment	three.js	/^		var segment = thetaStart + i \/ segments * thetaLength;$/;"	r
segmentFraction	three.js	/^    var segmentFraction = ( targetArcLength - lengthBefore ) \/ segmentLength;$/;"	r
segmentLength	three.js	/^    var segmentLength = lengthAfter - lengthBefore;$/;"	r
segment_height	three.js	/^		segment_height = height \/ gridY,$/;"	r
segment_height	three.js	/^	var segment_height = this.height \/ gridZ;$/;"	r
segment_width	three.js	/^		segment_width = width \/ gridX,$/;"	r
segment_width	three.js	/^	var segment_width = this.width \/ gridX;$/;"	r
segments	three.js	/^	segments = segments !== undefined ? Math.max( 3, segments ) : 8;$/;"	r
segments	three.js	/^	segments = segments || 12;$/;"	r
segments	three.js	/^	this.segments = segments || 64;$/;"	r
segments	three.js	/^THREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {$/;"	r
segments	three.js	/^THREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {$/;"	r
segments	three.js	/^THREE.TubeGeometry = function( path, segments, radius, radialSegments, closed ) {$/;"	r
segments	three.js	/^THREE.TubeGeometry.FrenetFrames = function(path, segments, closed) {$/;"	r
set	three.js	/^	THREE.Raycaster.prototype.set = function ( origin, direction ) {$/;"	r
set	three.js	/^	set: function ( a, b, c ) {$/;"	r
set	three.js	/^	set: function ( center, radius ) {$/;"	r
set	three.js	/^	set: function ( min, max ) {$/;"	r
set	three.js	/^	set: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {$/;"	r
set	three.js	/^	set: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {$/;"	r
set	three.js	/^	set: function ( normal, constant ) {$/;"	r
set	three.js	/^	set: function ( origin, direction ) {$/;"	r
set	three.js	/^	set: function ( p0, p1, p2, p3, p4, p5 ) {$/;"	r
set	three.js	/^	set: function ( start, end ) {$/;"	r
set	three.js	/^	set: function ( value ) {$/;"	r
set	three.js	/^	set: function ( x, y ) {$/;"	r
set	three.js	/^	set: function ( x, y, z ) {$/;"	r
set	three.js	/^	set: function ( x, y, z, order ) {$/;"	r
set	three.js	/^	set: function ( x, y, z, w ) {$/;"	r
setAnimationDirectionBackward	three.js	/^THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {$/;"	r
setAnimationDirectionForward	three.js	/^THREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {$/;"	r
setAnimationDuration	three.js	/^THREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {$/;"	r
setAnimationFPS	three.js	/^THREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {$/;"	r
setAnimationLabel	three.js	/^THREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {$/;"	r
setAnimationTime	three.js	/^THREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {$/;"	r
setAnimationWeight	three.js	/^THREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {$/;"	r
setAxisAngleFromQuaternion	three.js	/^	setAxisAngleFromQuaternion: function ( q ) {$/;"	r
setAxisAngleFromRotationMatrix	three.js	/^	setAxisAngleFromRotationMatrix: function ( m ) {$/;"	r
setBlending	three.js	/^	function setBlending( value ) {$/;"	r
setBlending	three.js	/^	this.setBlending = function ( blending, blendEquation, blendSrc, blendDst ) {$/;"	r
setClearColor	three.js	/^	this.setClearColor = function ( color, alpha ) {$/;"	r
setClearColorHex	three.js	/^	this.setClearColorHex = function ( hex, alpha ) {$/;"	r
setColor	three.js	/^THREE.ArrowHelper.prototype.setColor = function ( hex ) {$/;"	r
setColorGamma	three.js	/^	function setColorGamma( array, offset, color, intensitySq ) {$/;"	r
setColorLinear	three.js	/^	function setColorLinear( array, offset, color, intensity ) {$/;"	r
setColors	three.js	/^THREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {$/;"	r
setComponent	three.js	/^	setComponent: function ( index, value ) {$/;"	r
setComponents	three.js	/^	setComponents: function ( x, y, z, w ) {$/;"	r
setCrossOrigin	three.js	/^	setCrossOrigin: function ( value ) {$/;"	r
setCubeTexture	three.js	/^	function setCubeTexture ( texture, slot ) {$/;"	r
setCubeTextureDynamic	three.js	/^	function setCubeTextureDynamic ( texture, slot ) {$/;"	r
setDashAndGap	three.js	/^	function setDashAndGap( dashSizeValue, gapSizeValue ) {$/;"	r
setDefaultGLState	three.js	/^	function setDefaultGLState () {$/;"	r
setDepthTest	three.js	/^	this.setDepthTest = function ( depthTest ) {$/;"	r
setDepthWrite	three.js	/^	this.setDepthWrite = function ( depthWrite ) {$/;"	r
setDirectBuffers	three.js	/^	function setDirectBuffers ( geometry, hint, dispose ) {$/;"	r
setDirection	three.js	/^THREE.ArrowHelper.prototype.setDirection = function () {$/;"	r
setDirectionBackward	three.js	/^THREE.MorphAnimMesh.prototype.setDirectionBackward = function () {$/;"	r
setDirectionForward	three.js	/^THREE.MorphAnimMesh.prototype.setDirectionForward = function () {$/;"	r
setEulerFromQuaternion	three.js	/^	setEulerFromQuaternion: function ( q, order ) {$/;"	r
setEulerFromRotationMatrix	three.js	/^	setEulerFromRotationMatrix: function ( m, order ) {$/;"	r
setFaceCulling	three.js	/^	this.setFaceCulling = function ( cullFace, frontFaceDirection ) {$/;"	r
setFaceCulling	three.js	/^	this.setFaceCulling = function () {};$/;"	r
setFillStyle	three.js	/^	function setFillStyle( value ) {$/;"	r
setFov	three.js	/^THREE.CombinedCamera.prototype.setFov = function( fov ) {$/;"	r
setFrameRange	three.js	/^THREE.MorphAnimMesh.prototype.setFrameRange = function ( start, end ) {$/;"	r
setFromAxisAngle	three.js	/^	setFromAxisAngle: function ( axis, angle ) {$/;"	r
setFromCenterAndSize	three.js	/^	setFromCenterAndSize: function () {$/;"	r
setFromCenterAndSize	three.js	/^	setFromCenterAndSize: function() {$/;"	r
setFromCoplanarPoints	three.js	/^	setFromCoplanarPoints: function() {$/;"	r
setFromEuler	three.js	/^	setFromEuler: function ( euler, update ) {$/;"	r
setFromMatrix	three.js	/^	setFromMatrix: function ( m ) {$/;"	r
setFromNormalAndCoplanarPoint	three.js	/^	setFromNormalAndCoplanarPoint: function ( normal, point ) {$/;"	r
setFromObject	three.js	/^	setFromObject: function() {$/;"	r
setFromPoints	three.js	/^	setFromPoints: function ( points ) {$/;"	r
setFromPointsAndIndices	three.js	/^	setFromPointsAndIndices: function ( points, i0, i1, i2 ) {$/;"	r
setFromQuaternion	three.js	/^	setFromQuaternion: function ( q, order, update ) {$/;"	r
setFromRotationMatrix	three.js	/^	setFromRotationMatrix: function ( m ) {$/;"	r
setFromRotationMatrix	three.js	/^	setFromRotationMatrix: function ( m, order ) {$/;"	r
setHSL	three.js	/^	setHSL: function ( h, s, l ) {$/;"	r
setHex	three.js	/^	setHex: function ( hex ) {$/;"	r
setLength	three.js	/^	setLength: function ( l ) {$/;"	r
setLength	three.js	/^THREE.ArrowHelper.prototype.setLength = function ( length ) {$/;"	r
setLens	three.js	/^THREE.CombinedCamera.prototype.setLens = function ( focalLength, frameHeight ) {$/;"	r
setLens	three.js	/^THREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {$/;"	r
setLineBuffers	three.js	/^	function setLineBuffers ( geometry, hint ) {$/;"	r
setLineCap	three.js	/^	function setLineCap( value ) {$/;"	r
setLineDash	three.js	/^			_context.setLineDash = function ( values ) {$/;"	r
setLineDash	three.js	/^			_context.setLineDash = function () {}$/;"	r
setLineJoin	three.js	/^	function setLineJoin( value ) {$/;"	r
setLineWidth	three.js	/^	function setLineWidth ( width ) {$/;"	r
setLineWidth	three.js	/^	function setLineWidth( value ) {$/;"	r
setMaterialFaces	three.js	/^	this.setMaterialFaces = function ( material ) {$/;"	r
setMaterialIndex	three.js	/^	setMaterialIndex: function ( geometry, index, startFace, endFace ){$/;"	r
setMaterialShaders	three.js	/^	function setMaterialShaders( material, shaders ) {$/;"	r
setMeshBuffers	three.js	/^	function setMeshBuffers( geometryGroup, object, hint, dispose, material ) {$/;"	r
setOpacity	three.js	/^	function setOpacity( value ) {$/;"	r
setParticleBuffers	three.js	/^	function setParticleBuffers ( geometry, hint, object ) {$/;"	r
setPoint	three.js	/^		function setPoint( point, x, y, z ) {$/;"	r
setPolygonOffset	three.js	/^	function setPolygonOffset ( polygonoffset, factor, units ) {$/;"	r
setPosition	three.js	/^	setPosition: function ( v ) {$/;"	r
setProgram	three.js	/^	function setProgram( camera, lights, fog, material, object ) {$/;"	r
setRGB	three.js	/^	setRGB: function ( r, g, b ) {$/;"	r
setRenderTarget	three.js	/^	this.setRenderTarget = function ( renderTarget ) {$/;"	r
setRibbonBuffers	three.js	/^	function setRibbonBuffers ( geometry, hint ) {$/;"	r
setRotationFromAxisAngle	three.js	/^	setRotationFromAxisAngle: function ( axis, angle ) {$/;"	r
setRotationFromEuler	three.js	/^	setRotationFromEuler: function ( euler ) {$/;"	r
setRotationFromMatrix	three.js	/^	setRotationFromMatrix: function ( m ) {$/;"	r
setRotationFromQuaternion	three.js	/^	setRotationFromQuaternion: function ( q ) {$/;"	r
setScissor	three.js	/^	this.setScissor = function ( x, y, width, height ) {$/;"	r
setSize	three.js	/^	this.setSize = function ( width, height, updateStyle ) {$/;"	r
setSize	three.js	/^THREE.CombinedCamera.prototype.setSize = function( width, height ) {$/;"	r
setStrokeStyle	three.js	/^	function setStrokeStyle( value ) {$/;"	r
setStyle	three.js	/^	setStyle: function ( style ) {$/;"	r
setTexture	three.js	/^	this.setTexture = function ( texture, slot ) {$/;"	r
setTextureParameters	three.js	/^	function setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {$/;"	r
setValues	three.js	/^	setValues: function ( values ) {$/;"	r
setViewOffset	three.js	/^THREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {$/;"	r
setViewport	three.js	/^	this.setViewport = function ( x, y, width, height ) {$/;"	r
setW	three.js	/^	setW: function ( w ) {$/;"	r
setX	three.js	/^	setX: function ( x ) {$/;"	r
setY	three.js	/^	setY: function ( y ) {$/;"	r
setZ	three.js	/^	setZ: function ( z ) {$/;"	r
setZoom	three.js	/^THREE.CombinedCamera.prototype.setZoom = function( zoom ) {$/;"	r
setupFrameBuffer	three.js	/^	function setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {$/;"	r
setupLights	three.js	/^	function setupLights ( program, lights ) {$/;"	r
setupMatrices	three.js	/^	function setupMatrices ( object, camera ) {$/;"	r
setupMorphTargets	three.js	/^	function setupMorphTargets ( material, geometryGroup, object ) {$/;"	r
setupRenderBuffer	three.js	/^	function setupRenderBuffer ( renderbuffer, renderTarget  ) {$/;"	r
shader	three.js	/^				var shader = THREE.ShaderLib[ "normalmap" ];$/;"	r
shader	three.js	/^			shader = _gl.createShader( _gl.FRAGMENT_SHADER );$/;"	r
shader	three.js	/^			shader = _gl.createShader( _gl.VERTEX_SHADER );$/;"	r
shader	three.js	/^			var shader = THREE.ShaderLib[ "normalmap" ];$/;"	r
shader	three.js	/^		var shader;$/;"	r
shaderID	three.js	/^			shaderID = 'basic';$/;"	r
shaderID	three.js	/^			shaderID = 'dashed';$/;"	r
shaderID	three.js	/^			shaderID = 'depth';$/;"	r
shaderID	three.js	/^			shaderID = 'lambert';$/;"	r
shaderID	three.js	/^			shaderID = 'normal';$/;"	r
shaderID	three.js	/^			shaderID = 'particle_basic';$/;"	r
shaderID	three.js	/^			shaderID = 'phong';$/;"	r
shading	three.js	/^			var shading = m.shading.toLowerCase();$/;"	r
shading	three.js	/^	material.shading = this.shading;$/;"	r
shading	three.js	/^	this.shading = THREE.FlatShading;$/;"	r
shading	three.js	/^	this.shading = THREE.SmoothShading;$/;"	r
shadowBias	three.js	/^		virtualLight.shadowBias = light.shadowCascadeBias[ cascade ];$/;"	r
shadowBias	three.js	/^	this.shadowBias = 0;$/;"	r
shadowCamera	three.js	/^					light.shadowCamera = new THREE.OrthographicCamera( light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar );$/;"	r
shadowCamera	three.js	/^					light.shadowCamera = new THREE.PerspectiveCamera( light.shadowCameraFov, light.shadowMapWidth \/ light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar );$/;"	r
shadowCamera	three.js	/^			shadowCamera = light.shadowCamera;$/;"	r
shadowCamera	three.js	/^		var shadowCamera = light.shadowCamera,$/;"	r
shadowCamera	three.js	/^	this.shadowCamera = null;$/;"	r
shadowCameraBottom	three.js	/^		virtualLight.shadowCameraBottom = light.shadowCameraBottom;$/;"	r
shadowCameraBottom	three.js	/^	this.shadowCameraBottom = -500;$/;"	r
shadowCameraFar	three.js	/^		virtualLight.shadowCameraFar = light.shadowCameraFar;$/;"	r
shadowCameraFar	three.js	/^	this.shadowCameraFar = 5000;$/;"	r
shadowCameraFov	three.js	/^	this.shadowCameraFov = 50;$/;"	r
shadowCameraLeft	three.js	/^		virtualLight.shadowCameraLeft = light.shadowCameraLeft;$/;"	r
shadowCameraLeft	three.js	/^	this.shadowCameraLeft = -500;$/;"	r
shadowCameraNear	three.js	/^		virtualLight.shadowCameraNear = light.shadowCameraNear;$/;"	r
shadowCameraNear	three.js	/^	this.shadowCameraNear = 50;$/;"	r
shadowCameraRight	three.js	/^		virtualLight.shadowCameraRight = light.shadowCameraRight;$/;"	r
shadowCameraRight	three.js	/^	this.shadowCameraRight = 500;$/;"	r
shadowCameraTop	three.js	/^		virtualLight.shadowCameraTop = light.shadowCameraTop;$/;"	r
shadowCameraTop	three.js	/^	this.shadowCameraTop = 500;$/;"	r
shadowCameraVisible	three.js	/^		virtualLight.shadowCameraVisible = light.shadowCameraVisible;$/;"	r
shadowCameraVisible	three.js	/^	this.shadowCameraVisible = false;$/;"	r
shadowCascade	three.js	/^	this.shadowCascade = false;$/;"	r
shadowCascadeArray	three.js	/^	this.shadowCascadeArray = [];$/;"	r
shadowCascadeBias	three.js	/^	this.shadowCascadeBias = [ 0, 0, 0 ];$/;"	r
shadowCascadeCount	three.js	/^	this.shadowCascadeCount = 2;$/;"	r
shadowCascadeFarZ	three.js	/^	this.shadowCascadeFarZ  = [  0.990, 0.998, 1.000 ];$/;"	r
shadowCascadeHeight	three.js	/^	this.shadowCascadeHeight = [ 512, 512, 512 ];$/;"	r
shadowCascadeNearZ	three.js	/^	this.shadowCascadeNearZ = [ -1.000, 0.990, 0.998 ];$/;"	r
shadowCascadeOffset	three.js	/^	this.shadowCascadeOffset = new THREE.Vector3( 0, 0, -1000 );$/;"	r
shadowCascadeWidth	three.js	/^	this.shadowCascadeWidth = [ 512, 512, 512 ];$/;"	r
shadowDarkness	three.js	/^		virtualLight.shadowDarkness = light.shadowDarkness;$/;"	r
shadowDarkness	three.js	/^	this.shadowDarkness = 0.5;$/;"	r
shadowFilter	three.js	/^					shadowFilter = THREE.NearestFilter;$/;"	r
shadowFilter	three.js	/^				var shadowFilter = THREE.LinearFilter;$/;"	r
shadowMap	three.js	/^				light.shadowMap = new THREE.WebGLRenderTarget( light.shadowMapWidth, light.shadowMapHeight, pars );$/;"	r
shadowMap	three.js	/^			shadowMap = light.shadowMap;$/;"	r
shadowMap	three.js	/^		shadowMap, shadowMatrix, shadowCamera,$/;"	r
shadowMap	three.js	/^	this.shadowMap = null;$/;"	r
shadowMapAutoUpdate	three.js	/^	this.shadowMapAutoUpdate = true;$/;"	r
shadowMapCascade	three.js	/^			shadowMapCascade: this.shadowMapCascade,$/;"	r
shadowMapCascade	three.js	/^	this.shadowMapCascade = false;$/;"	r
shadowMapCullFace	three.js	/^	this.shadowMapCullFace = THREE.CullFaceFront;$/;"	r
shadowMapDebug	three.js	/^			shadowMapDebug: this.shadowMapDebug,$/;"	r
shadowMapDebug	three.js	/^	this.shadowMapDebug = false;$/;"	r
shadowMapEnabled	three.js	/^			shadowMapEnabled: this.shadowMapEnabled && object.receiveShadow,$/;"	r
shadowMapEnabled	three.js	/^	this.shadowMapEnabled = false;$/;"	r
shadowMapHeight	three.js	/^		virtualLight.shadowMapHeight = light.shadowCascadeHeight[ cascade ];$/;"	r
shadowMapHeight	three.js	/^	this.shadowMapHeight = 512;$/;"	r
shadowMapPlugin	three.js	/^	this.shadowMapPlugin = new THREE.ShadowMapPlugin();$/;"	r
shadowMapSize	three.js	/^				light.shadowMapSize = new THREE.Vector2( light.shadowMapWidth, light.shadowMapHeight );$/;"	r
shadowMapSize	three.js	/^	this.shadowMapSize = null;$/;"	r
shadowMapType	three.js	/^			shadowMapType: this.shadowMapType,$/;"	r
shadowMapType	three.js	/^	this.shadowMapType = THREE.PCFShadowMap;$/;"	r
shadowMapTypeDefine	three.js	/^			shadowMapTypeDefine = "SHADOWMAP_TYPE_PCF";$/;"	r
shadowMapTypeDefine	three.js	/^			shadowMapTypeDefine = "SHADOWMAP_TYPE_PCF_SOFT";$/;"	r
shadowMapTypeDefine	three.js	/^		var shadowMapTypeDefine = "SHADOWMAP_TYPE_BASIC";$/;"	r
shadowMapWidth	three.js	/^		virtualLight.shadowMapWidth = light.shadowCascadeWidth[ cascade ];$/;"	r
shadowMapWidth	three.js	/^	this.shadowMapWidth = 512;$/;"	r
shadowMatrix	three.js	/^				light.shadowMatrix = new THREE.Matrix4();$/;"	r
shadowMatrix	three.js	/^			shadowMatrix = light.shadowMatrix;$/;"	r
shadowMatrix	three.js	/^	this.shadowMatrix = null;$/;"	r
shadowmap	three.js	/^	shadowmap: {$/;"	r
shadowmap_fragment	three.js	/^	shadowmap_fragment: [$/;"	r
shadowmap_pars_fragment	three.js	/^	shadowmap_pars_fragment: [$/;"	r
shadowmap_pars_vertex	three.js	/^	shadowmap_pars_vertex: [$/;"	r
shadowmap_vertex	three.js	/^	shadowmap_vertex: [$/;"	r
shape	three.js	/^			shape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );$/;"	r
shape	three.js	/^			shape:shape, 		\/* shape with no holes *\/$/;"	r
shape	three.js	/^		shape: this.getTransformedPoints( divisions ),$/;"	r
shape	three.js	/^		shape: this.getTransformedSpacedPoints( divisions ),$/;"	r
shape	three.js	/^		this.faceVertexUvs[ 0 ].push( uvgen.generateBottomUV( this, shape, options, a, b, c ) );$/;"	r
shape	three.js	/^		var shape = [];$/;"	r
shape	three.js	/^		var shape = contour.concat(); \/\/ work on this shape$/;"	r
shape	three.js	/^		var shape = shapeWithoutHoles.shape,$/;"	r
shape	three.js	/^		var shape = shapes[ s ];$/;"	r
shape	three.js	/^		var uvs = isBottom ? uvgen.generateBottomUV( scope, shape, options, a, b, c ) : uvgen.generateTopUV( scope, shape, options, a, b, c );$/;"	r
shape	three.js	/^ 		var uvs = uvgen.generateSideWallUV( scope, shape, wallContour, options, a, b, c, d,$/;"	r
shapeId	three.js	/^			shapeId, shapeGroup,$/;"	r
shapeIndex	three.js	/^						shapeIndex = p;$/;"	r
shapeIndex	three.js	/^				shapeIndex = oldShapeIndex;$/;"	r
shapeOffset	three.js	/^			var shapeOffset = 1;$/;"	r
shapePoints	three.js	/^	var shapePoints = shape.extractPoints( curveSegments );$/;"	r
shapeWithoutHoles	three.js	/^		var shapeWithoutHoles = THREE.Shape.Utils.removeHoles( contour, holes );$/;"	r
shapebb	three.js	/^	this.shapebb = shapes[ shapes.length - 1 ].getBoundingBox();$/;"	r
shapebb	three.js	/^	var shapebb = this.shapebb;$/;"	r
shapes	three.js	/^		shapes = [];$/;"	r
shapes	three.js	/^	shapes = shapes instanceof Array ? shapes : [ shapes ];$/;"	r
shapes	three.js	/^	var shapes = [];$/;"	r
shapes	three.js	/^	var solid, tmpPath, tmpShape, shapes = [];$/;"	r
shapesOffset	three.js	/^	var shapesOffset = this.vertices.length;$/;"	r
shareDepthFrom	three.js	/^		tmp.shareDepthFrom = this.shareDepthFrom;$/;"	r
shareDepthFrom	three.js	/^	this.shareDepthFrom = null;$/;"	r
shininess	three.js	/^					shininess: json.shininess,$/;"	r
shininess	three.js	/^				var shininess = matJSON.parameters.shininess;$/;"	r
shininess	three.js	/^			mpars.shininess = m.specularCoef;$/;"	r
shininess	three.js	/^	material.shininess = this.shininess;$/;"	r
shininess	three.js	/^	this.shininess = 30;$/;"	r
shortest	three.js	/^						shortest = d;$/;"	r
shortest	three.js	/^			\/\/console.log("shortest", shortest, dist);$/;"	r
shortest	three.js	/^			shortest = Number.POSITIVE_INFINITY;$/;"	r
showStatus	three.js	/^	this.showStatus = showStatus;$/;"	r
si1	three.js	/^				si1 = obj_skinIndices[ face.a ];$/;"	r
si1	three.js	/^		si1, si2, si3, si4,$/;"	r
si2	three.js	/^				si2 = obj_skinIndices[ face.b ];$/;"	r
si3	three.js	/^				si3 = obj_skinIndices[ face.c ];$/;"	r
si4	three.js	/^				si4 = obj_skinIndices[ face.d ];$/;"	r
sid	three.js	/^					var sid = sids[ s ],$/;"	r
sid	three.js	/^				var sid = sids[ s ],$/;"	r
side	three.js	/^						side = material.side;$/;"	r
side	three.js	/^					side = material.side;$/;"	r
side	three.js	/^					var side = material.side;$/;"	r
side	three.js	/^				var side = object.material.side;$/;"	r
side	three.js	/^			mpars.side = THREE.BackSide;$/;"	r
side	three.js	/^			mpars.side = THREE.DoubleSide;$/;"	r
side	three.js	/^		material.side = this.side;$/;"	r
side	three.js	/^	this.side = THREE.FrontSide;$/;"	r
sidewalls	three.js	/^	function sidewalls( contour, layeroffset ) {$/;"	r
sids	three.js	/^				sids = this.data.hierarchy[h].sids,$/;"	r
sids	three.js	/^			sids = this.data.hierarchy[h].sids,$/;"	r
sign	three.js	/^	sign: function ( x ) {$/;"	r
sinHalfTheta	three.js	/^		var sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );$/;"	r
size	three.js	/^						size = sprite.size * sprite.scale \/ viewportHeight;$/;"	r
size	three.js	/^					attribute.size = size;$/;"	r
size	three.js	/^					var size = 1;		\/\/ "f" and "i"$/;"	r
size	three.js	/^				size = 1 \/ ( material.scaleByViewport ? viewportHeight : 1 );$/;"	r
size	three.js	/^				size = 16;$/;"	r
size	three.js	/^				size = 32;$/;"	r
size	three.js	/^				size = 64;$/;"	r
size	three.js	/^				size = 8;$/;"	r
size	three.js	/^			size = 16 \/ viewportHeight;$/;"	r
size	three.js	/^			var size;$/;"	r
size	three.js	/^		                    size: size, 				\/\/ size in pixels (-1 = use texture.width)$/;"	r
size	three.js	/^		new THREE.Vector3(), new THREE.Vector3( 0, size, 0 ),$/;"	r
size	three.js	/^		this.add( texture, size, distance, blending, color );$/;"	r
size	three.js	/^		var size = 16 \/ viewportHeight,$/;"	r
size	three.js	/^		var size = width * height;$/;"	r
size	three.js	/^	THREE.FontUtils.size = size;$/;"	r
size	three.js	/^	material.size = this.size;$/;"	r
size	three.js	/^	size : 150,$/;"	r
size	three.js	/^	size = size || 1;$/;"	r
size	three.js	/^	size: function ( optionalTarget ) {$/;"	r
size	three.js	/^	this.size = 1;$/;"	r
size	three.js	/^	this.size = size || 1;$/;"	r
size	three.js	/^	var size = parameters.size !== undefined ? parameters.size : 100;$/;"	r
size	three.js	/^THREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {$/;"	r
size	three.js	/^THREE.LensFlare = function ( texture, size, distance, blending, color ) {$/;"	r
size	three.js	/^THREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {$/;"	r
size	three.js	/^THREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {$/;"	r
size	three.js	/^THREE.VertexTangentsHelper = function ( object, size, hex, linewidth ) {$/;"	r
sizeAttenuation	three.js	/^			sizeAttenuation: material.sizeAttenuation,$/;"	r
sizeAttenuation	three.js	/^		_sprite.uniforms.sizeAttenuation   	  = _gl.getUniformLocation( _sprite.program, "sizeAttenuation" );$/;"	r
sizeAttenuation	three.js	/^	material.sizeAttenuation = this.sizeAttenuation;$/;"	r
sizeAttenuation	three.js	/^	this.sizeAttenuation = !this.useScreenCoordinates;$/;"	r
sizeAttenuation	three.js	/^	this.sizeAttenuation = true;$/;"	r
skin	three.js	/^	this.skin = belongsToSkin;$/;"	r
skinIndexArray	three.js	/^				_gl.bufferData( _gl.ARRAY_BUFFER, skinIndexArray, hint );$/;"	r
skinIndexArray	three.js	/^		skinIndexArray = geometryGroup.__skinIndexArray,$/;"	r
skinIndices	three.js	/^	this.skinIndices = [];$/;"	r
skinMatrix	three.js	/^					object.skinMatrix = animationCache.originalMatrix;$/;"	r
skinMatrix	three.js	/^				obj.skinMatrix = original;$/;"	r
skinMatrix	three.js	/^				object.skinMatrix = JIThierarchy[ h ][ frame ];$/;"	r
skinMatrix	three.js	/^	this.skinMatrix = new THREE.Matrix4();$/;"	r
skinWeightArray	three.js	/^				_gl.bufferData( _gl.ARRAY_BUFFER, skinWeightArray, hint );$/;"	r
skinWeightArray	three.js	/^		skinWeightArray = geometryGroup.__skinWeightArray,$/;"	r
skinWeights	three.js	/^	this.skinWeights = [];$/;"	r
skinbase_vertex	three.js	/^	skinbase_vertex: [$/;"	r
skinning	three.js	/^			skinning: material.skinning,$/;"	r
skinning	three.js	/^		_depthMaterialSkin = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, skinning: true } );$/;"	r
skinning	three.js	/^	material.skinning = this.skinning;$/;"	r
skinning	three.js	/^	this.skinning = false; \/\/ set to use skinning attribute streams$/;"	r
skinning	three.js	/^	this.skinning = false;$/;"	r
skinning_pars_vertex	three.js	/^	skinning_pars_vertex: [$/;"	r
skinning_vertex	three.js	/^	skinning_vertex: [$/;"	r
skinnormal_vertex	three.js	/^	skinnormal_vertex: [$/;"	r
skyColor	three.js	/^				skyColor = light.color;$/;"	r
sl	three.js	/^			sl = this.getLength();$/;"	r
sl	three.js	/^	var sl = shapes.length;$/;"	r
slen1	three.js	/^				var slen1 = vlen * s;$/;"	r
slen2	three.js	/^				var slen2 = vlen * ( s + 1 );$/;"	r
slerp	three.js	/^	slerp: function ( qb, t ) {$/;"	r
slerp	three.js	/^THREE.Quaternion.slerp = function ( qa, qb, qm, t ) {$/;"	r
sliceCount	three.js	/^	var sliceCount = slices + 1;$/;"	r
slices	three.js	/^THREE.ParametricGeometry = function ( func, slices, stacks, useTris ) {$/;"	r
smallest	three.js	/^			smallest = tx;$/;"	r
smallest	three.js	/^			smallest = ty;$/;"	r
smallest	three.js	/^		smallest = Number.MAX_VALUE;$/;"	r
smallest	three.js	/^		smallest,$/;"	r
smootherstep	three.js	/^	smootherstep: function ( x, min, max ) {$/;"	r
smoothstep	three.js	/^	smoothstep: function ( x, min, max ) {$/;"	r
smoothstep	three.js	/^	var smoothstep = THREE.Math.smoothstep;$/;"	r
snip	three.js	/^	var snip = function ( contour, u, v, w, n, verts ) {$/;"	r
solid	three.js	/^			solid = THREE.Shape.Utils.isClockWise( tmpPath.getPoints() );$/;"	r
solid	three.js	/^			solid = isCCW ? !solid : solid;$/;"	r
solid	three.js	/^	var solid, tmpPath, tmpShape, shapes = [];$/;"	r
sortArray	three.js	/^		sortArray = geometry.__sortArray,$/;"	r
sortElements	three.js	/^	this.sortElements = true;$/;"	r
sortFacesByMaterial	three.js	/^	function sortFacesByMaterial ( geometry, material ) {$/;"	r
sortFunction	three.js	/^	var sortFunction = function ( a, b ) { return a - b };$/;"	r
sortObjects	three.js	/^	this.sortObjects = true;$/;"	r
sortParticles	three.js	/^	object.sortParticles = this.sortParticles;$/;"	r
sortParticles	three.js	/^	this.sortParticles = false;$/;"	r
sourceFile	three.js	/^		texture.sourceFile = url;$/;"	r
specular	three.js	/^					specular: json.specular,$/;"	r
specular	three.js	/^				var specular = matJSON.parameters.specular;$/;"	r
specular	three.js	/^			mpars.specular = rgb2hex( m.colorSpecular );$/;"	r
specular	three.js	/^	this.specular = new THREE.Color( 0x111111 );$/;"	r
specularMap	three.js	/^			specularMap: !!material.specularMap,$/;"	r
specularMap	three.js	/^	material.specularMap = this.specularMap;$/;"	r
specularMap	three.js	/^	this.specularMap = null;$/;"	r
specularmap_fragment	three.js	/^	specularmap_fragment: [$/;"	r
specularmap_pars_fragment	three.js	/^	specularmap_pars_fragment: [$/;"	r
sphere	three.js	/^	var sphere = new THREE.Sphere();$/;"	r
sphereSize	three.js	/^THREE.HemisphereLightHelper = function ( light, sphereSize, arrowLength, domeSize ) {$/;"	r
spline	three.js	/^			var spline = new THREE.SplineCurve( spts );$/;"	r
splineThru	three.js	/^THREE.Path.prototype.splineThru = function( pts \/*Array of Vector*\/ ) {$/;"	r
splineTube	three.js	/^		splineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames(extrudePath, steps, false);$/;"	r
splineTube	three.js	/^	var splineTube, binormal, normal, position2;$/;"	r
spot	three.js	/^		spot: { length: 0, colors: new Array(), positions: new Array(), distances: new Array(), directions: new Array(), anglesCos: new Array(), exponents: new Array() },$/;"	r
spotAnglesCos	three.js	/^		spotAnglesCos = zlights.spot.anglesCos,$/;"	r
spotColors	three.js	/^		spotColors = zlights.spot.colors,$/;"	r
spotCount	three.js	/^		spotCount = 0,$/;"	r
spotDirections	three.js	/^		spotDirections = zlights.spot.directions,$/;"	r
spotDistances	three.js	/^		spotDistances = zlights.spot.distances,$/;"	r
spotExponents	three.js	/^		spotExponents = zlights.spot.exponents,$/;"	r
spotLength	three.js	/^		spotLength = 0,$/;"	r
spotLightWeightingHalf	three.js	/^						"spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );",$/;"	r
spotLightWeightingHalfBack	three.js	/^							"spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );",$/;"	r
spotLights	three.js	/^		var spotLights = 0;$/;"	r
spotOffset	three.js	/^					setColorGamma( spotColors, spotOffset, color, intensity * intensity );$/;"	r
spotOffset	three.js	/^					setColorLinear( spotColors, spotOffset, color, intensity );$/;"	r
spotOffset	three.js	/^				spotOffset = spotLength * 3;$/;"	r
spotOffset	three.js	/^		spotOffset = 0,$/;"	r
spotPositions	three.js	/^		spotPositions = zlights.spot.positions,$/;"	r
sprite	three.js	/^					sprite = flare.lensFlares[ j ];$/;"	r
sprite	three.js	/^			sprite = sprites[ i ];$/;"	r
sprites	three.js	/^		var sprites = scene.__webglSprites,$/;"	r
sprites	three.js	/^	_renderData = { objects: [], sprites: [], lights: [], elements: [] },$/;"	r
spts	three.js	/^			spts = spts.concat( args[ 0 ] );$/;"	r
spts	three.js	/^			var spts = [ last ];$/;"	r
sqrDist	three.js	/^						sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;$/;"	r
sqrDist	three.js	/^						sqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;$/;"	r
sqrDist	three.js	/^					sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;$/;"	r
sqrDist	three.js	/^					sqrDist = s1 * ( s1 + 2 * b1 ) + c;$/;"	r
sqrDist	three.js	/^			sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;$/;"	r
sqw	three.js	/^		var sqw = q.w * q.w;$/;"	r
sqx	three.js	/^		var sqx = q.x * q.x;$/;"	r
sqy	three.js	/^		var sqy = q.y * q.y;$/;"	r
sqz	three.js	/^		var sqz = q.z * q.z;$/;"	r
src	three.js	/^			cubeImage.src = array[ i ];$/;"	r
src	three.js	/^			image.src = url;$/;"	r
src	three.js	/^		image.src = url;$/;"	r
srcColors	three.js	/^				srcColors = json.morphColors [ i ].colors;$/;"	r
srcVertices	three.js	/^				srcVertices = json.morphTargets [ i ].vertices;$/;"	r
stackCount	three.js	/^	var stackCount = stacks + 1;$/;"	r
start	three.js	/^					var start = geometry.offsets[ oi ].start;$/;"	r
start	three.js	/^					var start = offsets[ j ].start;$/;"	r
start	three.js	/^			start = 0;$/;"	r
start	three.js	/^			start = renderList.length - 1;$/;"	r
start	three.js	/^			var start = offsets[ j ].start;$/;"	r
start	three.js	/^		var start = startFace || 0;$/;"	r
start	three.js	/^	start: function () {$/;"	r
start	three.js	/^	this.start = ( start !== undefined ) ? start : new THREE.Vector3();$/;"	r
start	three.js	/^THREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {$/;"	r
start	three.js	/^THREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {$/;"	r
startEnd	three.js	/^		var startEnd = new THREE.Vector3();$/;"	r
startEnd2	three.js	/^			var startEnd2 = startEnd.dot( startEnd );$/;"	r
startEnd_startP	three.js	/^			var startEnd_startP = startEnd.dot( startP );$/;"	r
startFrame	three.js	/^		startFrame: start,$/;"	r
startFrame	three.js	/^	this.createAnimation( name, startFrame, endFrame, fps );$/;"	r
startFrame	three.js	/^	var startFrame = 0;$/;"	r
startIndex	three.js	/^					var startIndex = offsets[ i ].index;$/;"	r
startKeyframe	three.js	/^	this.startKeyframe = start;$/;"	r
startP	three.js	/^		var startP = new THREE.Vector3();$/;"	r
startPoint	three.js	/^	var startPoint = this.curves[0].getPoint(0);$/;"	r
startSign	three.js	/^		var startSign = this.distanceToPoint( line.start );$/;"	r
startTime	three.js	/^				this.startTime = Math.min( keys[0].time, this.startTime );$/;"	r
startTime	three.js	/^		this.startTime = 10000000;$/;"	r
startTime	three.js	/^		this.startTime = self.performance !== undefined && self.performance.now !== undefined$/;"	r
startTime	three.js	/^	this.startTime = 0;$/;"	r
startTimeMs	three.js	/^		this.startTimeMs = startTimeMS;$/;"	r
stats	three.js	/^		var stats = {};$/;"	r
statusDomElement	three.js	/^	this.statusDomElement = showStatus ? THREE.Loader.prototype.addStatusElement() : null;$/;"	r
stencilBuffer	three.js	/^		tmp.stencilBuffer = this.stencilBuffer;$/;"	r
stencilBuffer	three.js	/^	this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;$/;"	r
step	three.js	/^				var step = object.type === THREE.LinePieces ? 2 : 1;$/;"	r
step	three.js	/^			var step = object.type === THREE.LineStrip ? 1 : 2;$/;"	r
stepIndex	three.js	/^ 		                                    stepIndex, stepsLength, contourIndex1, contourIndex2 );$/;"	r
steps	three.js	/^		\/\/ console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);$/;"	r
steps	three.js	/^		splineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames(extrudePath, steps, false);$/;"	r
steps	three.js	/^	var steps = options.steps !== undefined ? options.steps : 1;$/;"	r
stop	three.js	/^	stop: function () {$/;"	r
stop	three.js	/^THREE.Animation.prototype.stop = function() {$/;"	r
stop	three.js	/^THREE.KeyFrameAnimation.prototype.stop = function() {$/;"	r
stopAnimation	three.js	/^THREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {$/;"	r
strokePath	three.js	/^	function strokePath( color, linewidth, linecap, linejoin ) {$/;"	r
strokeStyle	three.js	/^			_context.strokeStyle = value;$/;"	r
style	three.js	/^	THREE.FontUtils.style = style;$/;"	r
style	three.js	/^	style : "normal",$/;"	r
style	three.js	/^	var style = parameters.style !== undefined ? parameters.style : "normal";$/;"	r
su	three.js	/^		var su = Math.sin( u );$/;"	r
sub	three.js	/^	sub: function ( v, w ) {$/;"	r
subPaths	three.js	/^	var subPaths = [], lastPath = new THREE.Path();$/;"	r
subVectors	three.js	/^	subVectors: function ( a, b ) {$/;"	r
subdivide	three.js	/^	function subdivide(face, detail ) {$/;"	r
subtract	three.js	/^		var subtract = function ( a, b ) {$/;"	r
sum	three.js	/^	return cache; \/\/ { sums: cache, sum:sum }; Sum is in the last element.$/;"	r
sum	three.js	/^	sum = v3 ? new THREE.Vector3() : new THREE.Vector2();$/;"	r
sum	three.js	/^	var p, sum = 0;$/;"	r
sums	three.js	/^	var lengths = [], sums = 0;$/;"	r
supportsCompressedTextureS3TC	three.js	/^	this.supportsCompressedTextureS3TC = function () {$/;"	r
supportsFloatTextures	three.js	/^	this.supportsFloatTextures = function () {$/;"	r
supportsStandardDerivatives	three.js	/^	this.supportsStandardDerivatives = function () {$/;"	r
supportsVertexTextures	three.js	/^	this.supportsVertexTextures = function () {$/;"	r
supportsVertexTextures	three.js	/^	this.supportsVertexTextures = function () {};$/;"	r
sw	three.js	/^			var sw = this.geometry.skinWeights[ i ];$/;"	r
sw1	three.js	/^				sw1 = obj_skinWeights[ face.a ];$/;"	r
sw1	three.js	/^		sw1, sw2, sw3, sw4,$/;"	r
sw2	three.js	/^				sw2 = obj_skinWeights[ face.b ];$/;"	r
sw3	three.js	/^				sw3 = obj_skinWeights[ face.c ];$/;"	r
sw4	three.js	/^				sw4 = obj_skinWeights[ face.d ];$/;"	r
swctx	three.js	/^		var swctx = new js.poly2tri.SweepContext(shape);$/;"	r
sx	three.js	/^			var sx = vector.set( te[0], te[1], te[2] ).length();$/;"	r
sx	three.js	/^		var sx = this.set( m.elements[0], m.elements[1], m.elements[2] ).length();$/;"	r
sy	three.js	/^			var sy = vector.set( te[4], te[5], te[6] ).length();$/;"	r
sy	three.js	/^		var sy = this.set( m.elements[4], m.elements[5], m.elements[6] ).length();$/;"	r
sz	three.js	/^			var sz = vector.set( te[8], te[9], te[10] ).length();$/;"	r
sz	three.js	/^		var sz = this.set( m.elements[8], m.elements[9], m.elements[10] ).length();$/;"	r
t	three.js	/^							var t = i2 \/ divisions;$/;"	r
t	three.js	/^					t = 1 - t;$/;"	r
t	three.js	/^				\/\/console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);$/;"	r
t	three.js	/^				for( s = v, t = v + 1; t < nv; s++, t++ ) {$/;"	r
t	three.js	/^				t = THREE.Math.clamp( t, 0, 1 );$/;"	r
t	three.js	/^				t = j \/ divisions;$/;"	r
t	three.js	/^				t = j \/ tdivisions;$/;"	r
t	three.js	/^				t = tan1[ vertexIndex ];$/;"	r
t	three.js	/^			t = tan1[ v ];$/;"	r
t	three.js	/^			var t = - ( line.start.dot( this.normal ) + this.constant ) \/ denominator;$/;"	r
t	three.js	/^			var t = startEnd_startP \/ startEnd2;$/;"	r
t	three.js	/^		[ -1,  t,  0 ], [  1, t, 0 ], [ -1, -t,  0 ], [  1, -t,  0 ],$/;"	r
t	three.js	/^		t = 1 - t;$/;"	r
t	three.js	/^		t = b \/ bevelSegments;$/;"	r
t	three.js	/^		t, tx, ty;$/;"	r
t	three.js	/^		var t = - ( this.origin.dot( plane.normal ) + plane.constant ) \/ denominator;$/;"	r
t	three.js	/^		var t = 1 - c;$/;"	r
t	three.js	/^		var t = i \/ ( il - 1 );$/;"	r
t	three.js	/^		var t = this.closestPointToPointParameter( point, clampToLine );$/;"	r
t	three.js	/^		var t = this.distanceToPlane( plane );$/;"	r
t	three.js	/^	var t = ( 1 + Math.sqrt( 5 ) ) \/ 2;$/;"	r
t	three.js	/^	var t = this.getUtoTmapping( u );$/;"	r
t	three.js	/^    var t = ( i + segmentFraction ) \/ ( il -1 );$/;"	r
t1	three.js	/^				t1 = vertexTangents[ 0 ];$/;"	r
t1	three.js	/^			t1 = uvB.y - uvA.y;$/;"	r
t1	three.js	/^			t1 = vB - vA;$/;"	r
t1	three.js	/^	var t1 = t - delta;$/;"	r
t2	three.js	/^				t2 = vertexTangents[ 1 ];$/;"	r
t2	three.js	/^			t2 = uvC.y - uvA.y;$/;"	r
t2	three.js	/^			t2 = vC - vA;$/;"	r
t2	three.js	/^		var t2 = path.getTangentAt( epsilon );$/;"	r
t2	three.js	/^		var t2 = t * t;$/;"	r
t2	three.js	/^	var t2 = t + delta;$/;"	r
t3	three.js	/^				t3 = vertexTangents[ 2 ];$/;"	r
t3	three.js	/^		var t3 = t * t2;$/;"	r
t4	three.js	/^				t4 = vertexTangents[ 3 ];$/;"	r
ta	three.js	/^				var ta = target_array[ i ];$/;"	r
tan1	three.js	/^			tan1 = [], tan2 = [],$/;"	r
tan1	three.js	/^		var tan1 = [], tan2 = [];$/;"	r
tanTheta	three.js	/^	var tanTheta = ( radiusBottom - radiusTop ) \/ height;$/;"	r
tang	three.js	/^	var tang = new THREE.Vector3();$/;"	r
tangent	three.js	/^				var tangent = face.vertexTangents[ j ];$/;"	r
tangent	three.js	/^		tangent = tangents[ i ];$/;"	r
tangent	three.js	/^		tangent,$/;"	r
tangent	three.js	/^	var	tangent = new THREE.Vector3(),$/;"	r
tangent	three.js	/^	var tangent = new THREE.Vector2( tx, ty );$/;"	r
tangent	three.js	/^	var tangent = this.v2.clone().sub(this.v1);$/;"	r
tangentArray	three.js	/^			_gl.bufferData( _gl.ARRAY_BUFFER, tangentArray, hint );$/;"	r
tangentArray	three.js	/^		tangentArray = geometryGroup.__tangentArray,$/;"	r
tangentCubicBezier	three.js	/^	tangentCubicBezier: function (t, p0, p1, p2, p3 ) {$/;"	r
tangentQuadraticBezier	three.js	/^	tangentQuadraticBezier: function ( t, p0, p1, p2 ) {$/;"	r
tangentSpline	three.js	/^	tangentSpline: function ( t, p0, p1, p2, p3 ) {$/;"	r
tangents	three.js	/^		tangents = [],$/;"	r
tangents	three.js	/^		tangents = frames.tangents,$/;"	r
tangents	three.js	/^		var tangents = this.attributes[ "tangent" ].array;$/;"	r
tangents	three.js	/^	this.tangents = tangents;$/;"	r
tangentsNeedUpdate	three.js	/^						geometry.tangentsNeedUpdate = true;$/;"	r
tangentsNeedUpdate	three.js	/^			geometry.tangentsNeedUpdate = false;$/;"	r
tangentsNeedUpdate	three.js	/^		this.tangentsNeedUpdate = true;$/;"	r
tangentsNeedUpdate	three.js	/^	this.tangentsNeedUpdate = false;$/;"	r
target	three.js	/^								light.target = null;$/;"	r
target	three.js	/^					ta.object.target = new THREE.Object3D();$/;"	r
target	three.js	/^					ta.object.target = target;$/;"	r
target	three.js	/^				var target = result.objects[ ta.targetName ];$/;"	r
target	three.js	/^			event.target = this;$/;"	r
target	three.js	/^		return function ( eye, target, up ) {$/;"	r
target	three.js	/^	light.target = this.target.clone();$/;"	r
target	three.js	/^	this.target = new THREE.Object3D();$/;"	r
target	three.js	/^	this.target = new THREE.Vector3();$/;"	r
targetArcLength	three.js	/^		targetArcLength = distance;$/;"	r
targetArcLength	three.js	/^		targetArcLength = u * arcLengths[ il - 1 ];$/;"	r
targetArcLength	three.js	/^	var targetArcLength; \/\/ The targeted u distance value to get$/;"	r
targetInverse	three.js	/^				ta.object.target.userData.targetInverse = ta.object;$/;"	r
targetLine	three.js	/^	this.targetLine = new THREE.Line( geometry, material );$/;"	r
target_array	three.js	/^		var target_array = [];$/;"	r
tdivisions	three.js	/^			var tdivisions = divisions * 2;$/;"	r
te	three.js	/^			te = m.elements,$/;"	r
te	three.js	/^			var te = this.elements;$/;"	r
te	three.js	/^		var te = m.elements,$/;"	r
te	three.js	/^		var te = m.elements;$/;"	r
te	three.js	/^		var te = this.elements;$/;"	r
te	three.js	/^	var te = this.elements;$/;"	r
tempPosition	three.js	/^		var tempPosition = new THREE.Vector3();$/;"	r
tempTexture	three.js	/^		_lensFlare.tempTexture      = _gl.createTexture();$/;"	r
test	three.js	/^				test = tmp2.dot( tan2[ vertexIndex ] );$/;"	r
test	three.js	/^			test = tmp2.dot( tan2[ v ] );$/;"	r
text3d	three.js	/^	var text3d = new ExtrudeGeometry( textShapes, options );$/;"	r
text3d	three.js	/^	var text3d = new TextGeometry( text, options );$/;"	r
textAlign	three.js	/^		e.style.textAlign = "left";$/;"	r
textShapes	three.js	/^	THREE.ExtrudeGeometry.call( this, textShapes, parameters );$/;"	r
textShapes	three.js	/^	var textShapes = THREE.FontUtils.generateShapes( text, options );$/;"	r
textShapes	three.js	/^	var textShapes = THREE.FontUtils.generateShapes( text, parameters );$/;"	r
texture	three.js	/^					texture = THREE.ImageUtils.loadCompressedTexture( fullUrl, textureJSON.mapping, textureCallback );$/;"	r
texture	three.js	/^					texture = THREE.ImageUtils.loadCompressedTextureCube( url_array, textureJSON.mapping, generateTextureCallback( count ) );$/;"	r
texture	three.js	/^					texture = THREE.ImageUtils.loadTexture( fullUrl, textureJSON.mapping, textureCallback );$/;"	r
texture	three.js	/^					texture = THREE.ImageUtils.loadTextureCube( url_array, textureJSON.mapping, generateTextureCallback( count ) );$/;"	r
texture	three.js	/^					texture = uniform.value[ i ];$/;"	r
texture	three.js	/^				setTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );$/;"	r
texture	three.js	/^				texture = value;$/;"	r
texture	three.js	/^				var texture = THREE.ImageUtils.loadCompressedTexture( fullPath );$/;"	r
texture	three.js	/^				var texture = document.createElement( 'canvas' );$/;"	r
texture	three.js	/^			setTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );$/;"	r
texture	three.js	/^			texture, images, color,$/;"	r
texture	three.js	/^			var texture = new THREE.Texture( image );$/;"	r
texture	three.js	/^		var texture = event.target;$/;"	r
texture	three.js	/^		var texture = new THREE.CompressedTexture();$/;"	r
texture	three.js	/^		var texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );$/;"	r
texture	three.js	/^		var texture = new THREE.Texture( image, mapping );$/;"	r
texture	three.js	/^		var texture = new THREE.Texture();$/;"	r
texture	three.js	/^	function setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {$/;"	r
texture	three.js	/^	var texture = new THREE.CompressedTexture();$/;"	r
texture	three.js	/^	var texture = new THREE.DataTexture();$/;"	r
textureCallback	three.js	/^				var textureCallback = generateTextureCallback( 1 );$/;"	r
textureID	three.js	/^		var textureID, textureJSON;$/;"	r
textureJSON	three.js	/^			textureJSON = data.textures[ textureID ];$/;"	r
texturePath	three.js	/^	texturePath = texturePath && ( typeof texturePath === "string" ) ? texturePath : this.extractUrlBase( url );$/;"	r
textureTarget	three.js	/^		_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, renderTarget.__webglTexture, 0 );$/;"	r
textureUnit	three.js	/^					textureUnit = uniform._array[ i ];$/;"	r
textureUnit	three.js	/^					var textureUnit = getTextureUnit();$/;"	r
textureUnit	three.js	/^				textureUnit = getTextureUnit();$/;"	r
textureUnit	three.js	/^		var textureUnit = _usedTextureUnits;$/;"	r
texture_path	three.js	/^					texture_path = "";$/;"	r
textures	three.js	/^			textures: 0$/;"	r
textures	three.js	/^			textures: {},$/;"	r
that	three.js	/^	var that    = {};$/;"	r
that	three.js	/^	var that = this;$/;"	r
then	three.js	/^	\/\/ or the next curve, then, this is not a real path$/;"	r
theta	three.js	/^			theta = -theta;$/;"	r
theta	three.js	/^			theta = Math.acos( THREE.Math.clamp( tangents[ i-1 ].dot( tangents[ i ] ), -1, 1 ) ); \/\/ clamp for floating pt errors$/;"	r
theta	three.js	/^		theta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints-1 ] ), -1, 1 ) );$/;"	r
theta	three.js	/^		theta,$/;"	r
theta	three.js	/^		var theta = this.dot( v ) \/ ( this.length() * v.length() );$/;"	r
thetaLength	three.js	/^							data.thetaLength$/;"	r
thetaLength	three.js	/^	thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;$/;"	r
thetaLength	three.js	/^	this.thetaLength = thetaLength = thetaLength !== undefined ? thetaLength : Math.PI;$/;"	r
thetaSegment	three.js	/^		var thetaSegment = i * thetaSegments;$/;"	r
thetaSegments	three.js	/^	thetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;$/;"	r
thetaStart	three.js	/^							data.thetaStart,$/;"	r
thetaStart	three.js	/^	thetaStart = thetaStart !== undefined ? thetaStart : 0;$/;"	r
thetaStart	three.js	/^	this.thetaStart = thetaStart = thetaStart !== undefined ? thetaStart : 0;$/;"	r
this	three.js	/^				intersectDescendants( objects[ i ], this, intersects );$/;"	r
this	three.js	/^			intersectDescendants( object, this, intersects );$/;"	r
this	three.js	/^			intersectObject( objects[ i ], this, intersects );$/;"	r
this	three.js	/^		intersectObject( object, this, intersects );$/;"	r
thus	three.js	/^						\/\/ we can't generate any valid Face3's, thus$/;"	r
time	three.js	/^									object.time = objJSON.time;$/;"	r
time	three.js	/^					animation.time = 0;$/;"	r
time	three.js	/^					animation.time = animation.duration;$/;"	r
time	three.js	/^				this.time = 0;$/;"	r
time	three.js	/^				this.time = this.duration;$/;"	r
time	three.js	/^			animation.time = animation.time % animation.duration;$/;"	r
time	three.js	/^		animation.time = 0;$/;"	r
time	three.js	/^		animation.time = time;$/;"	r
time	three.js	/^		this.time = 0;$/;"	r
time	three.js	/^		this.time = this.time % this.duration;$/;"	r
time	three.js	/^		time = animation.time;$/;"	r
time	three.js	/^		time: 0,$/;"	r
time	three.js	/^	object.time = this.time;$/;"	r
time	three.js	/^	this.time = 0;$/;"	r
time	three.js	/^	var time = 0;$/;"	r
timeScale	three.js	/^	this.timeScale = 0.001;$/;"	r
timeScale	three.js	/^	this.timeScale = 1;$/;"	r
tmp	three.js	/^			tmp = new THREE.Vector3(), tmp2 = new THREE.Vector3(),$/;"	r
tmp	three.js	/^			tmp = this.clone( uniforms[ u ] );$/;"	r
tmp	three.js	/^		tmp = m[1]; m[1] = m[3]; m[3] = tmp;$/;"	r
tmp	three.js	/^		tmp = m[2]; m[2] = m[6]; m[6] = tmp;$/;"	r
tmp	three.js	/^		tmp = m[5]; m[5] = m[7]; m[7] = tmp;$/;"	r
tmp	three.js	/^		tmp = te[11]; te[11] = te[14]; te[14] = tmp;$/;"	r
tmp	three.js	/^		tmp = te[1]; te[1] = te[4]; te[4] = tmp;$/;"	r
tmp	three.js	/^		tmp = te[2]; te[2] = te[8]; te[8] = tmp;$/;"	r
tmp	three.js	/^		tmp = te[3]; te[3] = te[12]; te[12] = tmp;$/;"	r
tmp	three.js	/^		tmp = te[6]; te[6] = te[9]; te[9] = tmp;$/;"	r
tmp	three.js	/^		tmp = te[7]; te[7] = te[13]; te[13] = tmp;$/;"	r
tmp	three.js	/^		var tmp = new THREE.Vector3(), tmp2 = new THREE.Vector3();$/;"	r
tmp	three.js	/^		var tmp = new THREE.WebGLRenderTarget( this.width, this.height );$/;"	r
tmp	three.js	/^		var tmp, m = this.elements;$/;"	r
tmp	three.js	/^		var tmp;$/;"	r
tmpGeo	three.js	/^		var tmpGeo = new THREE.Geometry();$/;"	r
tmpHole1	three.js	/^			tmpHole1 = hole.slice( holeIndex );$/;"	r
tmpHole1	three.js	/^			tmpHole1, tmpHole2,$/;"	r
tmpHole2	three.js	/^			tmpHole2 = hole.slice( 0, holeIndex );$/;"	r
tmpPath	three.js	/^			tmpPath = subPaths[ i ];$/;"	r
tmpPath	three.js	/^		tmpPath = subPaths[0];$/;"	r
tmpShape	three.js	/^				tmpShape = new THREE.Shape();$/;"	r
tmpShape	three.js	/^		tmpShape = new THREE.Shape();$/;"	r
tmpShape	three.js	/^		tmpShape = undefined;$/;"	r
tmpShape1	three.js	/^			tmpShape1 = shape.slice( 0, shapeIndex );$/;"	r
tmpShape1	three.js	/^			tmpShape1, tmpShape2,$/;"	r
tmpShape2	three.js	/^			tmpShape2 = shape.slice( shapeIndex );$/;"	r
tmpVec	three.js	/^			tmpVec = new THREE.Vector3(),$/;"	r
toArray	three.js	/^	toArray: function () {$/;"	r
toBackView	three.js	/^THREE.CombinedCamera.prototype.toBackView = function() {$/;"	r
toBottomView	three.js	/^THREE.CombinedCamera.prototype.toBottomView = function() {$/;"	r
toFrontView	three.js	/^THREE.CombinedCamera.prototype.toFrontView = function() {$/;"	r
toLeftView	three.js	/^THREE.CombinedCamera.prototype.toLeftView = function() {$/;"	r
toOrthographic	three.js	/^THREE.CombinedCamera.prototype.toOrthographic = function () {$/;"	r
toPerspective	three.js	/^THREE.CombinedCamera.prototype.toPerspective = function () {$/;"	r
toRightView	three.js	/^THREE.CombinedCamera.prototype.toRightView = function() {$/;"	r
toShapes	three.js	/^THREE.Path.prototype.toShapes = function( isCCW ) {$/;"	r
toTopView	three.js	/^THREE.CombinedCamera.prototype.toTopView = function() {$/;"	r
top	three.js	/^		e.style.top = "0px";$/;"	r
top	three.js	/^		shadowCamera.top = _max.y;$/;"	r
top	three.js	/^		var top = Math.tan( THREE.Math.degToRad( this.fov * 0.5 ) ) * this.near;$/;"	r
top	three.js	/^	this.cameraO.top = halfHeight;$/;"	r
top	three.js	/^	this.top = height \/ 2;$/;"	r
top	three.js	/^	this.top = top;$/;"	r
topCenter	three.js	/^THREE.SpriteAlignment.topCenter = new THREE.Vector2( 0, -1 );$/;"	r
topLeft	three.js	/^THREE.SpriteAlignment.topLeft = new THREE.Vector2( 1, -1 );$/;"	r
topRight	three.js	/^THREE.SpriteAlignment.topRight = new THREE.Vector2( -1, -1 );$/;"	r
total	three.js	/^		return { chunks: chunkLengths, total: totalLength };$/;"	r
totalArea	three.js	/^			totalArea = 0,$/;"	r
totalLength	three.js	/^			totalLength = 0;$/;"	r
totalModels	three.js	/^				totalModels : total_models,$/;"	r
totalTextures	three.js	/^				totalTextures : total_textures,$/;"	r
total_models	three.js	/^			total_models, total_textures,$/;"	r
total_models	three.js	/^		total_models = counter_models;$/;"	r
total_textures	three.js	/^		total_textures = counter_textures;$/;"	r
tr	three.js	/^			tr =  triangles[t];$/;"	r
tr	three.js	/^		var tr ;$/;"	r
trace	three.js	/^			trace = m11 + m22 + m33,$/;"	r
transformDirection	three.js	/^	transformDirection: function ( m ) {$/;"	r
translate	three.js	/^	translate: function ( distance, axis ) {$/;"	r
translate	three.js	/^	translate: function ( offset ) {$/;"	r
translate	three.js	/^	translate: function ( v ) {$/;"	r
translateOnAxis	three.js	/^	translateOnAxis: function () {$/;"	r
translateX	three.js	/^	translateX: function () {$/;"	r
translateY	three.js	/^	translateY: function () {$/;"	r
translateZ	three.js	/^	translateZ: function () {$/;"	r
translationObject	three.js	/^THREE.Gyroscope.prototype.translationObject = new THREE.Vector3();$/;"	r
translationWorld	three.js	/^THREE.Gyroscope.prototype.translationWorld = new THREE.Vector3();$/;"	r
transparent	three.js	/^					globject.transparent = material;$/;"	r
transparent	three.js	/^					globject.transparent = null;$/;"	r
transparent	three.js	/^					transparent: json.transparent,$/;"	r
transparent	three.js	/^				globject.transparent = material;$/;"	r
transparent	three.js	/^				globject.transparent = null;$/;"	r
transparent	three.js	/^				matJSON.parameters.transparent = true;$/;"	r
transparent	three.js	/^				material.transparent = true;$/;"	r
transparent	three.js	/^				transparent: null,$/;"	r
transparent	three.js	/^			globject.transparent = material;$/;"	r
transparent	three.js	/^			globject.transparent = null;$/;"	r
transparent	three.js	/^			mpars.transparent = m.transparent;$/;"	r
transparent	three.js	/^		material.transparent = this.transparent;$/;"	r
transparent	three.js	/^	this.transparent = false;$/;"	r
transpose	three.js	/^	transpose: function () {$/;"	r
transposeIntoArray	three.js	/^	transposeIntoArray: function ( r ) {$/;"	r
traverse	three.js	/^	traverse: function ( callback ) {$/;"	r
traverse_json_hierarchy	three.js	/^		function traverse_json_hierarchy( objJSON, callback ) {$/;"	r
triA	three.js	/^				var triA = new THREE.Face3();$/;"	r
triB	three.js	/^				var triB = new THREE.Face3();$/;"	r
triangleArea	three.js	/^	triangleArea: function () {$/;"	r
trianglea	three.js	/^			var trianglea = [$/;"	r
triangleb	three.js	/^			var triangleb = [$/;"	r
triangles	three.js	/^		\/\/console.log( "triangles",triangles, triangles.length );$/;"	r
triangles	three.js	/^		var triangles =  swctx.GetTriangles();$/;"	r
triangles	three.js	/^		var triangles = THREE.FontUtils.Triangulate( shape, false ); \/\/ True returns indices for points of spooled shape$/;"	r
triangulate2	three.js	/^	triangulate2 : function( pts, holes ) {$/;"	r
triangulateQuads	three.js	/^	triangulateQuads: function ( geometry ) {$/;"	r
triangulateShape	three.js	/^	triangulateShape: function ( contour, holes ) {$/;"	r
trim	three.js	/^String.prototype.trim = String.prototype.trim || function () {$/;"	r
true	three.js	/^			\/\/, true$/;"	r
true	three.js	/^			renderObjects( scene.__webglObjects, true, "opaque", camera, lights, fog, false, material );$/;"	r
tube	three.js	/^							data.tube,$/;"	r
tube	three.js	/^	this.tube = tube || 40;$/;"	r
tube	three.js	/^THREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {$/;"	r
tube	three.js	/^THREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {$/;"	r
tubularSegments	three.js	/^							data.tubularSegments,$/;"	r
tubularSegments	three.js	/^	this.tubularSegments = tubularSegments || 6;$/;"	r
tubularSegments	three.js	/^	this.tubularSegments = tubularSegments || 8;$/;"	r
tx	three.js	/^							var tx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );$/;"	r
tx	three.js	/^							var tx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );$/;"	r
tx	three.js	/^				tx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );$/;"	r
tx	three.js	/^				tx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );$/;"	r
tx	three.js	/^				tx = aX + aRadius * Math.cos( angle );$/;"	r
tx	three.js	/^				tx = aX + xRadius * Math.cos( angle );$/;"	r
tx	three.js	/^		tx = Math.abs( tangents[ 0 ].x );$/;"	r
tx	three.js	/^		tx = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );$/;"	r
tx	three.js	/^		tx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );$/;"	r
tx	three.js	/^		tx, ty, tz,$/;"	r
tx	three.js	/^		var tx = radius * ( 2 + cs ) * 0.5 * cu;$/;"	r
tx	three.js	/^		var tx = t * x, ty = t * y;$/;"	r
tx	three.js	/^		var tx, ty, tz;$/;"	r
tx	three.js	/^	tx = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );$/;"	r
tx	three.js	/^	tx = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x );$/;"	r
tx	three.js	/^	tx = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );$/;"	r
tx	three.js	/^	tx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );$/;"	r
tx	three.js	/^	var tx = this.aX + this.xRadius * Math.cos( angle );$/;"	r
tx	three.js	/^	var tx, ty;$/;"	r
ty	three.js	/^							var ty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );$/;"	r
ty	three.js	/^							var ty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );$/;"	r
ty	three.js	/^				ty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );$/;"	r
ty	three.js	/^				ty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );$/;"	r
ty	three.js	/^				ty = aY + aRadius * Math.sin( angle );$/;"	r
ty	three.js	/^				ty = aY + yRadius * Math.sin( angle );$/;"	r
ty	three.js	/^		return new THREE.Vector3( tx, ty, tz );$/;"	r
ty	three.js	/^		ty = Math.abs( tangents[ 0 ].y );$/;"	r
ty	three.js	/^		ty = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );$/;"	r
ty	three.js	/^		ty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );$/;"	r
ty	three.js	/^		var ty = radius * ( 2 + cs ) * su * 0.5;$/;"	r
ty	three.js	/^	ty = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );$/;"	r
ty	three.js	/^	ty = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y );$/;"	r
ty	three.js	/^	ty = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );$/;"	r
ty	three.js	/^	ty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );$/;"	r
ty	three.js	/^	var ty = this.aY + this.yRadius * Math.sin( angle );$/;"	r
type	three.js	/^				type = _gl.ARRAY_BUFFER;$/;"	r
type	three.js	/^				type = _gl.ELEMENT_ARRAY_BUFFER;$/;"	r
type	three.js	/^			\/\/console.log("type", type, "bits", isQuad, hasMaterial, hasFaceUv, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);$/;"	r
type	three.js	/^			type    = types[ t ];$/;"	r
type	three.js	/^			type = faces[ offset ++ ];$/;"	r
type	three.js	/^			type = uniform.type;$/;"	r
type	three.js	/^		texture.type = this.type;$/;"	r
type	three.js	/^		tmp.type = this.type;$/;"	r
type	three.js	/^		type,$/;"	r
type	three.js	/^	this.type = ( type !== undefined ) ? type : THREE.LineStrip;$/;"	r
type	three.js	/^	this.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;$/;"	r
type	three.js	/^	this.type = type !== undefined ? type : THREE.UnsignedByteType;$/;"	r
type	three.js	/^	var type;$/;"	r
typeface_js	three.js	/^THREE.typeface_js = self._typeface_js;$/;"	r
types	three.js	/^	var types = [ "pos", "rot", "scl" ];$/;"	r
tz	three.js	/^		tz = Math.abs( tangents[ 0 ].z );$/;"	r
tz	three.js	/^		tz = THREE.Shape.Utils.b2( t, this.v0.z, this.v1.z, this.v2.z );$/;"	r
tz	three.js	/^		tz = THREE.Shape.Utils.b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z );$/;"	r
tz	three.js	/^		var tz = heightScale * radius * Math.sin( quOverP ) * 0.5;$/;"	r
u	three.js	/^						u = this.faceVertexUvs[ j ][ i ];$/;"	r
u	three.js	/^						u = uvLayer[ uvIndex * 2 ];$/;"	r
u	three.js	/^					u = uvLayer[ uvIndex * 2 ];$/;"	r
u	three.js	/^			if ( snip( contour, u, v, w, nv, verts ) ) {$/;"	r
u	three.js	/^			u = j \/ slices;$/;"	r
u	three.js	/^			u = v; 	 	if ( nv <= u ) u = 0;     \/* previous *\/$/;"	r
u	three.js	/^			var u = 1 - diff \/ curve.getLength();$/;"	r
u	three.js	/^			var u = i \/ this.tubularSegments * this.arc;$/;"	r
u	three.js	/^			var u = x \/ radialSegments;$/;"	r
u	three.js	/^			var u = x \/ widthSegments;$/;"	r
u	three.js	/^		u = i \/ ( numpoints - 1 );$/;"	r
u	three.js	/^		u, v,$/;"	r
u	three.js	/^		var u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;$/;"	r
u	three.js	/^		var u = azimuth( vector ) \/ 2 \/ Math.PI + 0.5;$/;"	r
u	three.js	/^		var u = i \/ this.radialSegments * 2 * this.p * Math.PI;$/;"	r
u	three.js	/^		var u, a, identifiers, i, parameters, maxLightCount, maxBones, maxShadows, shaderID;$/;"	r
u	three.js	/^		var u, p, parameter, parameter_src, uniforms_dst = {};$/;"	r
u	three.js	/^		var u, p, tmp, merged = {};$/;"	r
u	three.js	/^		var u, v, w;$/;"	r
u	three.js	/^	var snip = function ( contour, u, v, w, n, verts ) {$/;"	r
u	three.js	/^	var u, v;$/;"	r
u0	three.js	/^			var u0 = i * inverseSegments;$/;"	r
u0	three.js	/^		u0 = ( u0 + offsetX ) * width;$/;"	r
u1	three.js	/^			var u1 = u0 + inverseSegments;$/;"	r
u1	three.js	/^		u1 = ( u1 + offsetX ) * width;$/;"	r
u2	three.js	/^		u2 = ( u2 + offsetX ) * width;$/;"	r
uA	three.js	/^			uA = uvs[ a * 2 ];$/;"	r
uA	three.js	/^			uA, vA,$/;"	r
uB	three.js	/^			uB = uvs[ b * 2 ];$/;"	r
uB	three.js	/^			uB, vB,$/;"	r
uC	three.js	/^			uC = uvs[ c * 2 ];$/;"	r
uC	three.js	/^			uC, vC,$/;"	r
uSegments	three.js	/^ * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements, useTris );$/;"	r
ul	three.js	/^						for ( u = 0, ul = uvs.length; u < ul; u ++ ) {$/;"	r
undefined	three.js	/^			this._euler.setFromQuaternion( this, undefined, false );$/;"	r
uniform	three.js	/^			uniform = uniforms[ j ][ 0 ];$/;"	r
uniform	three.js	/^		var uniform, value, type, location, texture, textureUnit, i, il, j, jl, offset;$/;"	r
uniforms	three.js	/^				var uniforms = THREE.UniformsUtils.clone( shader.uniforms );$/;"	r
uniforms	three.js	/^			uniforms = _sprite.uniforms;$/;"	r
uniforms	three.js	/^			var uniforms = THREE.UniformsUtils.clone( shader.uniforms );$/;"	r
uniforms	three.js	/^		_lensFlare.uniforms = {};$/;"	r
uniforms	three.js	/^		_sprite.uniforms = {};$/;"	r
uniforms	three.js	/^		material.uniforms = THREE.UniformsUtils.clone( shaders.uniforms );$/;"	r
uniforms	three.js	/^		program.uniforms = {};$/;"	r
uniforms	three.js	/^		uniforms:  THREE.UniformsUtils.merge( [$/;"	r
uniforms	three.js	/^		uniforms: THREE.UniformsUtils.merge( [$/;"	r
uniforms	three.js	/^		uniforms: { "tCube": { type: "t", value: null },$/;"	r
uniforms	three.js	/^		uniforms: {$/;"	r
uniforms	three.js	/^		uniforms: {},$/;"	r
uniforms	three.js	/^		var uniforms = _lensFlare.uniforms,$/;"	r
uniforms	three.js	/^	material.uniforms = THREE.UniformsUtils.clone( this.uniforms );$/;"	r
uniforms	three.js	/^	this.uniforms = {};$/;"	r
uniformsList	three.js	/^		material.uniformsList = [];$/;"	r
uniforms_dst	three.js	/^		var u, p, parameter, parameter_src, uniforms_dst = {};$/;"	r
union	three.js	/^	union: function ( box ) {$/;"	r
unique	three.js	/^		var unique = [], changes = [];$/;"	r
unloopedCurrentTime	three.js	/^	unloopedCurrentTime = this.currentTime;$/;"	r
unpackAlignment	three.js	/^		texture.unpackAlignment = this.unpackAlignment;$/;"	r
unpackAlignment	three.js	/^	this.unpackAlignment = 4; \/\/ valid values: 1, 2, 4, 8 (see http:\/\/www.khronos.org\/opengles\/sdk\/docs\/man\/xhtml\/glPixelStorei.xml)$/;"	r
unprojectVector	three.js	/^	this.unprojectVector = function ( vector, camera ) {$/;"	r
unrollBufferMaterial	three.js	/^	function unrollBufferMaterial ( globject ) {$/;"	r
unrollImmediateBufferMaterial	three.js	/^	function unrollImmediateBufferMaterial ( globject ) {$/;"	r
up	three.js	/^	this.up = new THREE.Vector3( 0, 1, 0 );$/;"	r
update	three.js	/^	that.update = function( deltaTimeMS ) {$/;"	r
update	three.js	/^	this.update = function ( scene, camera ) {$/;"	r
update	three.js	/^THREE.Animation.prototype.update = function ( deltaTimeMS ) {$/;"	r
update	three.js	/^THREE.Bone.prototype.update = function ( parentSkinMatrix, forceUpdate ) {$/;"	r
update	three.js	/^THREE.BoundingBoxHelper.prototype.update = function () {$/;"	r
update	three.js	/^THREE.BoxHelper.prototype.update = function ( object ) {$/;"	r
update	three.js	/^THREE.CameraHelper.prototype.update = function () {$/;"	r
update	three.js	/^THREE.DirectionalLightHelper.prototype.update = function () {$/;"	r
update	three.js	/^THREE.FaceNormalsHelper.prototype.update = ( function ( object ) {$/;"	r
update	three.js	/^THREE.HemisphereLightHelper.prototype.update = function () {$/;"	r
update	three.js	/^THREE.KeyFrameAnimation.prototype.update = function( deltaTimeMS ) {$/;"	r
update	three.js	/^THREE.LOD.prototype.update = function () {$/;"	r
update	three.js	/^THREE.MorphBlendMesh.prototype.update = function ( delta ) {$/;"	r
update	three.js	/^THREE.PointLightHelper.prototype.update = function () {$/;"	r
update	three.js	/^THREE.SpotLightHelper.prototype.update = function () {$/;"	r
update	three.js	/^THREE.VertexNormalsHelper.prototype.update = ( function ( object ) {$/;"	r
update	three.js	/^THREE.VertexTangentsHelper.prototype.update = ( function ( object ) {$/;"	r
updateAnimation	three.js	/^THREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {$/;"	r
updateArcLengths	three.js	/^THREE.Curve.prototype.updateArcLengths = function() {$/;"	r
updateBuffers	three.js	/^			updateBuffers = true;$/;"	r
updateBuffers	three.js	/^		var updateBuffers = false,$/;"	r
updateCubeMap	three.js	/^	this.updateCubeMap = function ( renderer, scene ) {$/;"	r
updateLensFlares	three.js	/^THREE.LensFlare.prototype.updateLensFlares = function () {$/;"	r
updateMatrix	three.js	/^	updateMatrix: function () {$/;"	r
updateMatrix	three.js	/^THREE.Sprite.prototype.updateMatrix = function () {$/;"	r
updateMatrixWorld	three.js	/^	updateMatrixWorld: function ( force ) {$/;"	r
updateMatrixWorld	three.js	/^THREE.Gyroscope.prototype.updateMatrixWorld = function ( force ) {$/;"	r
updateMatrixWorld	three.js	/^THREE.SkinnedMesh.prototype.updateMatrixWorld = function () {$/;"	r
updateMorphTargets	three.js	/^THREE.Mesh.prototype.updateMorphTargets = function () {$/;"	r
updateObject	three.js	/^	function updateObject( object ) {$/;"	r
updateProgress	three.js	/^	updateProgress: function ( progress ) {$/;"	r
updateProjectionMatrix	three.js	/^THREE.CombinedCamera.prototype.updateProjectionMatrix = function() {$/;"	r
updateProjectionMatrix	three.js	/^THREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {$/;"	r
updateProjectionMatrix	three.js	/^THREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {$/;"	r
updateRenderTargetMipmap	three.js	/^	function updateRenderTargetMipmap ( renderTarget ) {$/;"	r
updateShadowCamera	three.js	/^	function updateShadowCamera( camera, light ) {$/;"	r
updateShadowMap	three.js	/^	this.updateShadowMap = function ( scene, camera ) {$/;"	r
updateVirtualLight	three.js	/^	function updateVirtualLight( light, cascade ) {$/;"	r
url	three.js	/^				request.open( 'GET', url, true );$/;"	r
url	three.js	/^				var url = array[ i ];$/;"	r
url	three.js	/^			request.open( 'GET', url, true );$/;"	r
url	three.js	/^			var url = array;$/;"	r
url	three.js	/^		request.open( 'GET', url, true );$/;"	r
url	three.js	/^	this.loadAjaxJSON( this, url, callback, texturePath );$/;"	r
url	three.js	/^	xhr.open( "GET", url, true );$/;"	r
url	three.js	/^THREE.JSONLoader.prototype.loadAjaxJSON = function ( context, url, callback, texturePath, callbackProgress ) {$/;"	r
urlBase	three.js	/^		var urlBase = THREE.Loader.prototype.extractUrlBase( url );$/;"	r
url_array	three.js	/^				var url_array = [];$/;"	r
useFog	three.js	/^			useFog: material.fog,$/;"	r
useMorphing	three.js	/^					useMorphing = object.geometry.morphTargets.length > 0 && objectMaterial.morphTargets;$/;"	r
useMorphing	three.js	/^				useMorphing = object.geometry.morphTargets.length > 0 && objectMaterial.morphTargets;$/;"	r
useScreenCoordinates	three.js	/^		_sprite.uniforms.useScreenCoordinates = _gl.getUniformLocation( _sprite.program, "useScreenCoordinates" );$/;"	r
useScreenCoordinates	three.js	/^	material.useScreenCoordinates = this.useScreenCoordinates;$/;"	r
useScreenCoordinates	three.js	/^	this.useScreenCoordinates = true;$/;"	r
useSkinning	three.js	/^					useSkinning = object instanceof THREE.SkinnedMesh && objectMaterial.skinning;$/;"	r
useSkinning	three.js	/^				useSkinning = object instanceof THREE.SkinnedMesh && objectMaterial.skinning;$/;"	r
useTris	three.js	/^	useTris = (useTris === undefined) ? false : useTris;$/;"	r
useVertexTexture	three.js	/^			useVertexTexture: _supportsBoneTextures && object && object.useVertexTexture,$/;"	r
useVertexTexture	three.js	/^	this.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;$/;"	r
usedMorphTargets	three.js	/^				var usedMorphTargets = {};$/;"	r
usedTimes	three.js	/^		_programs.push( { program: program, code: code, usedTimes: 1 } );$/;"	r
userData	three.js	/^		object.userData = JSON.parse( JSON.stringify( this.userData ) );$/;"	r
userData	three.js	/^	this.userData = {};$/;"	r
usesFaceMaterial	three.js	/^		var usesFaceMaterial = material instanceof THREE.MeshFaceMaterial;$/;"	r
uuid	three.js	/^				geometry.uuid = data.uuid;$/;"	r
uuid	three.js	/^				material.uuid = data.uuid;$/;"	r
uuid	three.js	/^			object.uuid = data.uuid;$/;"	r
uuid	three.js	/^		var uuid = new Array(36);$/;"	r
uuid	three.js	/^	this.uuid = THREE.Math.generateUUID();$/;"	r
uv	three.js	/^				uv = obj_uvs[ fi ];$/;"	r
uv	three.js	/^			uv = this.faceVertexUvs[ 0 ][ f ]; \/\/ use UV layer 0 for tangents$/;"	r
uv	three.js	/^			var uv = uvs2[ i ], uvCopy = [];$/;"	r
uv	three.js	/^			var uv = uvs[ i ], uvCopy = [];$/;"	r
uv	three.js	/^		_lensFlare.attributes.uv           = _gl.getAttribLocation ( _lensFlare.program, "uv" );$/;"	r
uv	three.js	/^		_sprite.attributes.uv                 = _gl.getAttribLocation ( _sprite.program, "uv" );$/;"	r
uv	three.js	/^		uv, uv2, v1, v2, v3, v4, t1, t2, t3, t4, n1, n2, n3, n4,$/;"	r
uv	three.js	/^		vertex.uv = new THREE.Vector2( u, 1 - v );$/;"	r
uv1	three.js	/^			var uv1 = uvs[ 0 ][ x ].clone();$/;"	r
uv1	three.js	/^			var uv1 = uvs[ y ][ x + 1 ].clone();$/;"	r
uv1	three.js	/^			var uv1 = uvs[ y ][ x ].clone();$/;"	r
uv2	three.js	/^				this.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );$/;"	r
uv2	three.js	/^				this.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3, uv4 ] );$/;"	r
uv2	three.js	/^				uv2 = obj_uvs2[ fi ];$/;"	r
uv2	three.js	/^			this.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );$/;"	r
uv2	three.js	/^			this.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3, uv4 ] );$/;"	r
uv2	three.js	/^			var uv2 = uvs[ 0 ][ x + 1 ].clone();$/;"	r
uv2	three.js	/^			var uv2 = uvs[ y + 1 ][ x ].clone();$/;"	r
uv2	three.js	/^			var uv2 = uvs[ y ][ x ].clone();$/;"	r
uv2Array	three.js	/^				_gl.bufferData( _gl.ARRAY_BUFFER, uv2Array, hint );$/;"	r
uv2Array	three.js	/^		uv2Array = geometryGroup.__uv2Array,$/;"	r
uv2i	three.js	/^					uv2i = uv2[ i ];$/;"	r
uv3	three.js	/^				this.faceVertexUvs[ 0 ].push( [ uv1, uv3, uv4 ] );$/;"	r
uv3	three.js	/^			var uv3 = new THREE.Vector2( uv2.u, 0 );$/;"	r
uv3	three.js	/^			var uv3 = new THREE.Vector2( uv2.u, 1 );$/;"	r
uv3	three.js	/^			var uv3 = uvs[ y + 1 ][ x + 1 ].clone();$/;"	r
uv3	three.js	/^			var uv3 = uvs[ y + 1 ][ x ].clone();$/;"	r
uv4	three.js	/^			var uv4 = uvs[ y + 1 ][ x + 1 ].clone();$/;"	r
uv4	three.js	/^			var uv4 = uvs[ y ][ x + 1 ].clone();$/;"	r
uvA	three.js	/^						var uvA = uvs[ 0 ];$/;"	r
uvA	three.js	/^			uvA = uv[ ua ];$/;"	r
uvArray	three.js	/^				_gl.bufferData( _gl.ARRAY_BUFFER, uvArray, hint );$/;"	r
uvArray	three.js	/^		uvArray = geometryGroup.__uvArray,$/;"	r
uvB	three.js	/^						var uvB = uvs[ 1 ];$/;"	r
uvB	three.js	/^			uvB = uv[ ub ];$/;"	r
uvC	three.js	/^						var uvC = uvs[ 2 ];$/;"	r
uvC	three.js	/^			uvC = uv[ uc ];$/;"	r
uvCopy	three.js	/^			var uv = uvs2[ i ], uvCopy = [];$/;"	r
uvCopy	three.js	/^			var uv = uvs[ i ], uvCopy = [];$/;"	r
uvD	three.js	/^						var uvD = uvs[ 3 ];$/;"	r
uvIndex	three.js	/^						uvIndex = faces[ offset ++ ];$/;"	r
uvIndex	three.js	/^					uvIndex = faces[ offset ++ ];$/;"	r
uvLayer	three.js	/^					uvLayer = json.uvs[ i ];$/;"	r
uvLayer	three.js	/^		uvLayer, uvs, u, v,$/;"	r
uvOffset	three.js	/^		_sprite.uniforms.uvOffset             = _gl.getUniformLocation( _sprite.program, "uvOffset" );$/;"	r
uvOffset	three.js	/^	this.uvOffset = new THREE.Vector2( 0, 0 );$/;"	r
uvPosition	three.js	/^		uvPosition = geometry1.faceVertexUvs[ 0 ].length,$/;"	r
uvScale	three.js	/^		_sprite.uniforms.uvScale              = _gl.getUniformLocation( _sprite.program, "uvScale" );$/;"	r
uvScale	three.js	/^	this.uvScale  = new THREE.Vector2( 1, 1 );$/;"	r
uvScaleMap	three.js	/^			uvScaleMap = material.bumpMap;$/;"	r
uvScaleMap	three.js	/^			uvScaleMap = material.map;$/;"	r
uvScaleMap	three.js	/^			uvScaleMap = material.normalMap;$/;"	r
uvScaleMap	three.js	/^			uvScaleMap = material.specularMap;$/;"	r
uvScaleMap	three.js	/^		var uvScaleMap;$/;"	r
uvType	three.js	/^			uvType = bufferGuessUVType( material ),$/;"	r
uvType	three.js	/^		\/\/ console.log( "uvType", uvType, "normalType", normalType, "vertexColorType", vertexColorType, object, geometryGroup, material );$/;"	r
uvType	three.js	/^		uvType = bufferGuessUVType( material ),$/;"	r
uva	three.js	/^			uva = new THREE.Vector2( i \/ this.segments, j \/ this.radialSegments );$/;"	r
uva	three.js	/^			uva = new THREE.Vector2( j \/ slices, i \/ stacks );$/;"	r
uva	three.js	/^			var uva = new THREE.Vector2( i \/ this.radialSegments, j \/ this.tubularSegments );$/;"	r
uva	three.js	/^		uva, uvb, uvc, uvd;$/;"	r
uva	three.js	/^	var uva, uvb, uvc, uvd;$/;"	r
uvb	three.js	/^				uvs.push( [ uva, uvb, uvc ] );$/;"	r
uvb	three.js	/^				uvs.push( [ uva, uvb, uvd, uvc ] );$/;"	r
uvb	three.js	/^			this.faceVertexUvs[ 0 ].push( [ uva, uvb, uvc, uvd ] );$/;"	r
uvb	three.js	/^			this.faceVertexUvs[ 0 ].push( [ uva,uvb,uvc, uvd ] );$/;"	r
uvb	three.js	/^			uvb = new THREE.Vector2( ( i + 1 ) \/ this.segments, j \/ this.radialSegments );$/;"	r
uvb	three.js	/^			uvb = new THREE.Vector2( ( j + 1 ) \/ slices, i \/ stacks );$/;"	r
uvb	three.js	/^			var uvb = new THREE.Vector2( ( i + 1 ) \/ this.radialSegments, j \/ this.tubularSegments );$/;"	r
uvc	three.js	/^			uvc = new THREE.Vector2( ( i + 1 ) \/ this.segments, ( j + 1 ) \/ this.radialSegments );$/;"	r
uvc	three.js	/^			uvc = new THREE.Vector2( j \/ slices, ( i + 1 ) \/ stacks );$/;"	r
uvc	three.js	/^			var uvc = new THREE.Vector2( ( i + 1 ) \/ this.radialSegments, ( j + 1 ) \/ this.tubularSegments );$/;"	r
uvd	three.js	/^				uvs.push( [ uvb, uvd, uvc ] );$/;"	r
uvd	three.js	/^			uvd = new THREE.Vector2( ( j + 1 ) \/ slices, ( i + 1 ) \/ stacks );$/;"	r
uvd	three.js	/^			uvd = new THREE.Vector2( i \/ this.segments, ( j + 1 ) \/ this.radialSegments );$/;"	r
uvd	three.js	/^			var uvd = new THREE.Vector2( i \/ this.radialSegments, ( j + 1 ) \/ this.tubularSegments );$/;"	r
uvgen	three.js	/^	var uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;$/;"	r
uvgen	three.js	/^	var uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;$/;"	r
uvi	three.js	/^					uvi = uv[ i ];$/;"	r
uvs	three.js	/^						uvs = faceVertexUvs[ c ][ f ];$/;"	r
uvs	three.js	/^						var uvs = geometry.faceVertexUvs[ j ][ i ];$/;"	r
uvs	three.js	/^					uvs = [];$/;"	r
uvs	three.js	/^		var uvs = isBottom ? uvgen.generateBottomUV( scope, shape, options, a, b, c ) : uvgen.generateTopUV( scope, shape, options, a, b, c );$/;"	r
uvs	three.js	/^		var uvs = this.attributes[ "uv" ].array;$/;"	r
uvs	three.js	/^		var uvs = this.faceVertexUvs[ 0 ];$/;"	r
uvs	three.js	/^		var uvs = this.faceVertexUvs[ 0 ][ i ];$/;"	r
uvs	three.js	/^	this.uvs = [[]];$/;"	r
uvs	three.js	/^	var center = new THREE.Vector3(), uvs = [], normals = [];$/;"	r
uvs	three.js	/^	var i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) \/ phiSegments );$/;"	r
uvs	three.js	/^	var i, uvs = [],$/;"	r
uvs	three.js	/^	var uvs = this.faceVertexUvs[ 0 ];$/;"	r
uvs	three.js	/^ 		var uvs = uvgen.generateSideWallUV( scope, shape, wallContour, options, a, b, c, d,$/;"	r
uvs1	three.js	/^		uvs1 = geometry1.faceVertexUvs[ 0 ],$/;"	r
uvs2	three.js	/^		uvs2 = geometry2.faceVertexUvs[ 0 ];$/;"	r
uvsNeedUpdate	three.js	/^						geometry.uvsNeedUpdate = true;$/;"	r
uvsNeedUpdate	three.js	/^			geometry.uvsNeedUpdate = false;$/;"	r
uvsNeedUpdate	three.js	/^	this.uvsNeedUpdate = false;$/;"	r
uvsRow	three.js	/^		var uvsRow = [];$/;"	r
uvsTriA	three.js	/^						var uvsTriA = [ uvA.clone(), uvB.clone(), uvD.clone() ];$/;"	r
uvsTriB	three.js	/^						var uvsTriB = [ uvB.clone(), uvC.clone(), uvD.clone() ];$/;"	r
ux	three.js	/^				var ux = x + 1 > width - 1 ? width - 1 : x + 1;$/;"	r
uy	three.js	/^				var uy = y + 1 > height - 1 ? height - 1 : y + 1;$/;"	r
v	three.js	/^						v = uvLayer[ uvIndex * 2 + 1 ];$/;"	r
v	three.js	/^					v = uvLayer[ uvIndex * 2 + 1 ];$/;"	r
v	three.js	/^			\/* three consecutive vertices in current polygon, <u,v,w> *\/$/;"	r
v	three.js	/^			v = j \/ this.radialSegments * 2 * Math.PI;$/;"	r
v	three.js	/^			v = this.vertices[ i ];$/;"	r
v	three.js	/^			v = u + 1;  if ( nv <= v ) v = 0;     \/* new v    *\/$/;"	r
v	three.js	/^			v, w,$/;"	r
v	three.js	/^			var v = j \/ this.radialSegments * Math.PI * 2;$/;"	r
v	three.js	/^			var v = j \/ this.tubularSegments * 2 * Math.PI;$/;"	r
v	three.js	/^			var v = y \/ heightSegments;$/;"	r
v	three.js	/^		return result.set( 1 - u - v, v, u );$/;"	r
v	three.js	/^		v = a.normalize();$/;"	r
v	three.js	/^		v = i \/ stacks;$/;"	r
v	three.js	/^		var v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;$/;"	r
v	three.js	/^		var v = [];$/;"	r
v	three.js	/^		var v = inclination( vector ) \/ Math.PI + 0.5;$/;"	r
v	three.js	/^		var v = new THREE.Vector3();$/;"	r
v	three.js	/^		var v = y \/ heightSegments;$/;"	r
v	three.js	/^		var v, c, d, vertex, offset, color,$/;"	r
v	three.js	/^		var v, c, n, vertex, offset, color, normal,$/;"	r
v	three.js	/^		var v, c, vertex, offset, index, color,$/;"	r
v	three.js	/^		var v, key;$/;"	r
v	three.js	/^		var v, vl, f, fl, face, vertices;$/;"	r
v	three.js	/^	function buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {$/;"	r
v	three.js	/^	function v( x, y, z ) {$/;"	r
v	three.js	/^	var v = new THREE.Vector2();$/;"	r
v	three.js	/^        var v = new THREE.Vector3();$/;"	r
v0	three.js	/^			var v0 = j * inversePointLength;$/;"	r
v0	three.js	/^		this.v0 = v0;$/;"	r
v0	three.js	/^		v0 = ( 1.0 - v0 + offsetY ) * height;$/;"	r
v0	three.js	/^		var v0 = ( p2 - p0 ) * 0.5,$/;"	r
v0	three.js	/^		var v0 = ( p2 - p0 ) * 0.5;$/;"	r
v0	three.js	/^		var v0 = new THREE.Vector3();$/;"	r
v0	three.js	/^	this.v0 = v0;$/;"	r
v0	three.js	/^	var v0 = ( p2 - p0 ) * 0.5,$/;"	r
v0	three.js	/^	var v0 = new THREE.Vector3();$/;"	r
v1	three.js	/^							v1 = customAttribute.value[ face.a ];$/;"	r
v1	three.js	/^							v1 = value;$/;"	r
v1	three.js	/^							v1 = value[ 0 ];$/;"	r
v1	three.js	/^						v1 = _vertexPool[ face.a ];$/;"	r
v1	three.js	/^					v1 = getNextVertexInPool();$/;"	r
v1	three.js	/^					v1 = morphTargets[ vk ].vertices[ face.a ];$/;"	r
v1	three.js	/^					v1 = subtract( v1, origin );$/;"	r
v1	three.js	/^					var v1 = points[ i ];$/;"	r
v1	three.js	/^				v1 = getNextVertexInPool();$/;"	r
v1	three.js	/^				v1 = vertices[ face.a ];$/;"	r
v1	three.js	/^			correctUV( v1.uv, v1, azi ),$/;"	r
v1	three.js	/^			v1 = ( p3 - p1 ) * 0.5;$/;"	r
v1	three.js	/^			v1 = segment + i;$/;"	r
v1	three.js	/^			var v1 = segment + i;$/;"	r
v1	three.js	/^			var v1 = v0 + inversePointLength;$/;"	r
v1	three.js	/^			var v1 = vertices[ 0 ][ x ];$/;"	r
v1	three.js	/^			var v1 = vertices[ y ][ x + 1 ];$/;"	r
v1	three.js	/^			var v1 = vertices[ y ][ x ];$/;"	r
v1	three.js	/^		this.v1 = v1;$/;"	r
v1	three.js	/^		v1 = ( 1.0 - v1 + offsetY ) * height;$/;"	r
v1	three.js	/^		v1 = ( p3 - p1 ) * 0.5;$/;"	r
v1	three.js	/^		v1, v2, v3, v4, isFaceMaterial, objectMaterials;$/;"	r
v1	three.js	/^		var v1 = ( p3 - p1 ) * 0.5;$/;"	r
v1	three.js	/^		var v1 = i;$/;"	r
v1	three.js	/^		var v1 = new THREE.Vector2();$/;"	r
v1	three.js	/^		var v1 = new THREE.Vector3( 0, 0, 1 );$/;"	r
v1	three.js	/^		var v1 = new THREE.Vector3( 0, 1, 0 );$/;"	r
v1	three.js	/^		var v1 = new THREE.Vector3( 1, 0, 0 );$/;"	r
v1	three.js	/^		var v1 = new THREE.Vector3();$/;"	r
v1	three.js	/^		var v1 = p[ faces[ i ][ 0 ] ];$/;"	r
v1	three.js	/^	distanceSqToSegment: function( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {$/;"	r
v1	three.js	/^	function ( v0, v1, v2 ) {$/;"	r
v1	three.js	/^	function ( v0, v1, v2, v3 ) {$/;"	r
v1	three.js	/^	this.v1 = new THREE.RenderableVertex();$/;"	r
v1	three.js	/^	this.v1 = v1;$/;"	r
v1	three.js	/^	var v1 = new THREE.Vector3();$/;"	r
v1	three.js	/^THREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {$/;"	r
v1	three.js	/^THREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {$/;"	r
v2	three.js	/^							v2 = customAttribute.value[ face.b ];$/;"	r
v2	three.js	/^							v2 = value;$/;"	r
v2	three.js	/^							v2 = value[ 1 ];$/;"	r
v2	three.js	/^						v2 = _vertexPool[ face.b ];$/;"	r
v2	three.js	/^					"mat4 bone = mat4( v1, v2, v3, v4 );",$/;"	r
v2	three.js	/^					v2 = _vertexPool[ _vertexCount - 2 ];$/;"	r
v2	three.js	/^					v2 = morphTargets[ vk ].vertices[ face.b ];$/;"	r
v2	three.js	/^					v2 = subtract( v2, origin );$/;"	r
v2	three.js	/^					var v2 = points[ ( i + 1 ) % num_points ];$/;"	r
v2	three.js	/^				this.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );$/;"	r
v2	three.js	/^				this.faces.push( new THREE.Face4( v1, v2, v3, v4, [ n1, n2, n3, n4 ] ) );$/;"	r
v2	three.js	/^				v2 = vertices[ face.b ];$/;"	r
v2	three.js	/^			correctUV( v2.uv, v2, azi ),$/;"	r
v2	three.js	/^			renderFace3( v1, v2, v4, 0, 1, 3, element, material );$/;"	r
v2	three.js	/^			this.faces.push( new THREE.Face3( v1, v2, v3, [ n, n, n ] ) );$/;"	r
v2	three.js	/^			this.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );$/;"	r
v2	three.js	/^			this.faces.push( new THREE.Face4( v1, v2, v3, v4, [ n1, n2, n3, n4 ] ) );$/;"	r
v2	three.js	/^			v2 = segment + thetaSegments + 1 + i;$/;"	r
v2	three.js	/^			var v2 = segment + thetaSegments + i;$/;"	r
v2	three.js	/^			var v2 = vertices[ 0 ][ x + 1 ];$/;"	r
v2	three.js	/^			var v2 = vertices[ y + 1 ][ x ];$/;"	r
v2	three.js	/^			var v2 = vertices[ y ][ x ];$/;"	r
v2	three.js	/^		this.faces.push( new THREE.Face3( v1, v2, v3, [ n, n, n ] ) );$/;"	r
v2	three.js	/^		this.v2 = v2;$/;"	r
v2	three.js	/^		v2 = ( 1.0 - v2 + offsetY ) * height;$/;"	r
v2	three.js	/^		var v2 = i + 1 ;$/;"	r
v2	three.js	/^		var v2 = new THREE.Vector3();$/;"	r
v2	three.js	/^		var v2 = p[ faces[ i ][ 1 ] ];$/;"	r
v2	three.js	/^	function expand( v1, v2, pixels ) {$/;"	r
v2	three.js	/^	function make( v1, v2, v3 ) {$/;"	r
v2	three.js	/^	function renderFace3( v1, v2, v3, uv1, uv2, uv3, element, material ) {$/;"	r
v2	three.js	/^	function renderFace4( v1, v2, v3, v4, v5, v6, element, material ) {$/;"	r
v2	three.js	/^	function renderLine( v1, v2, element, material ) {$/;"	r
v2	three.js	/^	this.v2 = new THREE.RenderableVertex();$/;"	r
v2	three.js	/^	this.v2 = v2;$/;"	r
v2	three.js	/^	var v2 = new THREE.Vector3();$/;"	r
v3	three.js	/^							v3 = customAttribute.value[ face.c ];$/;"	r
v3	three.js	/^							v3 = value;$/;"	r
v3	three.js	/^							v3 = value[ 2 ];$/;"	r
v3	three.js	/^						v3 = _vertexPool[ face.c ];$/;"	r
v3	three.js	/^					v3 = morphTargets[ vk ].vertices[ face.c ];$/;"	r
v3	three.js	/^					var v3 = matJSON.parameters[ parID ];$/;"	r
v3	three.js	/^				this.faces.push( new THREE.Face3( v1, v3, v4, [ n1, n3, n4 ] ) );$/;"	r
v3	three.js	/^				v3 = vertices[ face.c ];$/;"	r
v3	three.js	/^			correctUV( v3.uv, v3, azi )$/;"	r
v3	three.js	/^			renderFace3( v5, v3, v6, 1, 2, 3, element, material );$/;"	r
v3	three.js	/^			v3 = segment + 1 + i;$/;"	r
v3	three.js	/^			var v3 = segment + thetaSegments + 1 + i;$/;"	r
v3	three.js	/^			var v3 = this.vertices.length - 1;$/;"	r
v3	three.js	/^			var v3 = vertices[ y + 1 ][ x + 1 ];$/;"	r
v3	three.js	/^			var v3 = vertices[ y + 1 ][ x ];$/;"	r
v3	three.js	/^		this.v3 = v3;$/;"	r
v3	three.js	/^		var v3 = 0;$/;"	r
v3	three.js	/^		var v3 = p[ faces[ i ][ 2 ] ];$/;"	r
v3	three.js	/^	this.v3 = new THREE.RenderableVertex();$/;"	r
v3	three.js	/^	this.v3 = v3;$/;"	r
v3	three.js	/^	var c = [], v3 = { x: 0, y: 0, z: 0 },$/;"	r
v3	three.js	/^	var v3 = points[0] instanceof THREE.Vector3;$/;"	r
v4	three.js	/^							v4 = customAttribute.value[ face.d ];$/;"	r
v4	three.js	/^							v4 = value;$/;"	r
v4	three.js	/^							v4 = value[ 3 ];$/;"	r
v4	three.js	/^						v4 = _vertexPool[ face.d ];$/;"	r
v4	three.js	/^					v4 = morphTargets[ vk ].vertices[ face.d ];$/;"	r
v4	three.js	/^				v4 = vertices[ face.d ];$/;"	r
v4	three.js	/^			var v4 = vertices[ y + 1 ][ x + 1 ];$/;"	r
v4	three.js	/^			var v4 = vertices[ y ][ x + 1 ];$/;"	r
v4	three.js	/^	this.v4 = new THREE.RenderableVertex();$/;"	r
vA	three.js	/^						if ( THREE.Triangle.containsPoint( intersectPoint, vA, vB, vC ) === false ) {$/;"	r
vA	three.js	/^						vA = index + indices[ i ];$/;"	r
vA	three.js	/^					vA = this.vertices[ face.a ];$/;"	r
vA	three.js	/^				vA = vertices[ face.a ];$/;"	r
vA	three.js	/^				var vA = new THREE.Vector3();$/;"	r
vA	three.js	/^			vA = context.vertices[ a ];$/;"	r
vA	three.js	/^			vA = geometry.vertices[ face.a ];$/;"	r
vA	three.js	/^			vA = uvs[ a * 2 + 1 ];$/;"	r
vA	three.js	/^			vA, vB, vC, vD;$/;"	r
vA	three.js	/^			var vA = this.vertices[ face.a ];$/;"	r
vA	three.js	/^			var vA, vB, vC, vD;$/;"	r
vA	three.js	/^			var vA, vB, vC, x, y, z,$/;"	r
vA	three.js	/^		var vA, vB, vC, vD;$/;"	r
vAB	three.js	/^				var vAB = new THREE.Vector3();$/;"	r
vB	three.js	/^						facePlane.setFromCoplanarPoints( vA, vB, vC );$/;"	r
vB	three.js	/^						vB = index + indices[ i + 1 ];$/;"	r
vB	three.js	/^					area1 = THREE.GeometryUtils.triangleArea( vA, vB, vD );$/;"	r
vB	three.js	/^					vB = this.vertices[ face.b ];$/;"	r
vB	three.js	/^				area1 = THREE.GeometryUtils.triangleArea( vA, vB, vD ),$/;"	r
vB	three.js	/^				face._area = THREE.GeometryUtils.triangleArea( vA, vB, vC );$/;"	r
vB	three.js	/^				face._area1 = THREE.GeometryUtils.triangleArea( vA, vB, vD );$/;"	r
vB	three.js	/^				return THREE.GeometryUtils.randomPointInTriangle( vA, vB, vD );$/;"	r
vB	three.js	/^				vB = vertices[ face.b ];$/;"	r
vB	three.js	/^				var vB = new THREE.Vector3();$/;"	r
vB	three.js	/^			return THREE.GeometryUtils.randomPointInTriangle( vA, vB, vC );$/;"	r
vB	three.js	/^			vB = context.vertices[ b ];$/;"	r
vB	three.js	/^			vB = geometry.vertices[ face.b ];$/;"	r
vB	three.js	/^			vB = uvs[ b * 2 + 1 ];$/;"	r
vB	three.js	/^			var vB = this.vertices[ face.b ];$/;"	r
vC	three.js	/^						vC = index + indices[ i + 2 ];$/;"	r
vC	three.js	/^					area2 = THREE.GeometryUtils.triangleArea( vB, vC, vD );$/;"	r
vC	three.js	/^					vC = this.vertices[ face.c ];$/;"	r
vC	three.js	/^				area2 = THREE.GeometryUtils.triangleArea( vB, vC, vD );$/;"	r
vC	three.js	/^				face._area2 = THREE.GeometryUtils.triangleArea( vB, vC, vD );$/;"	r
vC	three.js	/^				return THREE.GeometryUtils.randomPointInTriangle( vB, vC, vD );$/;"	r
vC	three.js	/^				vC = vertices[ face.c ];$/;"	r
vC	three.js	/^				var vC = new THREE.Vector3();$/;"	r
vC	three.js	/^			vC = context.vertices[ c ];$/;"	r
vC	three.js	/^			vC = geometry.vertices[ face.c ];$/;"	r
vC	three.js	/^			vC = uvs[ c * 2 + 1 ];$/;"	r
vC	three.js	/^			var vC = this.vertices[ face.c ];$/;"	r
vCB	three.js	/^				var vCB = new THREE.Vector3();$/;"	r
vD	three.js	/^					vD = this.vertices[ face.d ];$/;"	r
vD	three.js	/^				vD = vertices[ face.d ];$/;"	r
vD	three.js	/^			vD = geometry.vertices[ face.d ];$/;"	r
v_dot_w_hat	three.js	/^			v_dot_w_hat, q_sub_p_dot_w_hat,$/;"	r
v_dot_w_hat	three.js	/^		v_dot_w_hat = v.dot( w_hat );$/;"	r
v_hat	three.js	/^			v_hat = THREE.ExtrudeGeometry.__v3,$/;"	r
value	three.js	/^									value = customAttribute.value[ ca ];$/;"	r
value	three.js	/^								value = customAttribute.value[ ca ];$/;"	r
value	three.js	/^								value = customAttribute.value[ index ];$/;"	r
value	three.js	/^								var value = objJSON.userData[ key ];$/;"	r
value	three.js	/^							value = customAttribute.value[ ca ];$/;"	r
value	three.js	/^							value = customAttribute.value[ chunk_faces3[ f ] ];$/;"	r
value	three.js	/^							value = customAttribute.value[ chunk_faces4[ f ] ];$/;"	r
value	three.js	/^							value = customAttribute.value[ index ];$/;"	r
value	three.js	/^					"tFlip": { type: "f", value: -1 } },$/;"	r
value	three.js	/^				"ambient"  : { type: "c", value: new THREE.Color( 0xffffff ) },$/;"	r
value	three.js	/^				"dashSize":  { type: "f", value: 1 },$/;"	r
value	three.js	/^				"emissive" : { type: "c", value: new THREE.Color( 0x000000 ) },$/;"	r
value	three.js	/^				"scale":     { type: "f", value: 1 },$/;"	r
value	three.js	/^				"shininess": { type: "f", value: 30 },$/;"	r
value	three.js	/^				"specular" : { type: "c", value: new THREE.Color( 0x111111 ) },$/;"	r
value	three.js	/^				"totalSize": { type: "f", value: 2 }$/;"	r
value	three.js	/^				"wrapRGB"  : { type: "v3", value: new THREE.Vector3( 1, 1, 1 ) }$/;"	r
value	three.js	/^				m_uniforms.mFar.value = camera.far;$/;"	r
value	three.js	/^				m_uniforms.mNear.value = camera.near;$/;"	r
value	three.js	/^				m_uniforms.opacity.value = material.opacity;$/;"	r
value	three.js	/^			"enableAO"		  : { type: "i", value: 0 },$/;"	r
value	three.js	/^			"enableDiffuse"	  : { type: "i", value: 0 },$/;"	r
value	three.js	/^			"enableDisplacement": { type: "i", value: 0 },$/;"	r
value	three.js	/^			"enableReflection": { type: "i", value: 0 },$/;"	r
value	three.js	/^			"enableSpecular"  : { type: "i", value: 0 },$/;"	r
value	three.js	/^			"mFar" : { type: "f", value: 2000.0 },$/;"	r
value	three.js	/^			"mNear": { type: "f", value: 1.0 },$/;"	r
value	three.js	/^			"opacity" : { type: "f", value: 1.0 }$/;"	r
value	three.js	/^			"tAO"		   : { type: "t", value: null },$/;"	r
value	three.js	/^			"tCube"		   : { type: "t", value: null },$/;"	r
value	three.js	/^			"tDiffuse"	   : { type: "t", value: null },$/;"	r
value	three.js	/^			"tDisplacement": { type: "t", value: null }, \/\/ must go first as this is vertex texture$/;"	r
value	three.js	/^			"tNormal"	   : { type: "t", value: null },$/;"	r
value	three.js	/^			"tSpecular"	   : { type: "t", value: null },$/;"	r
value	three.js	/^			"uAmbientColor": { type: "c", value: new THREE.Color( 0xffffff ) },$/;"	r
value	three.js	/^			"uDiffuseColor": { type: "c", value: new THREE.Color( 0xffffff ) },$/;"	r
value	three.js	/^			"uDisplacementBias": { type: "f", value: 0.0 },$/;"	r
value	three.js	/^			"uDisplacementScale": { type: "f", value: 1.0 },$/;"	r
value	three.js	/^			"uNormalScale": { type: "v2", value: new THREE.Vector2( 1, 1 ) },$/;"	r
value	three.js	/^			"uOffset" : { type: "v2", value: new THREE.Vector2( 0, 0 ) },$/;"	r
value	three.js	/^			"uOpacity": { type: "f", value: 1 },$/;"	r
value	three.js	/^			"uReflectivity": { type: "f", value: 0.5 },$/;"	r
value	three.js	/^			"uRefractionRatio": { type: "f", value: 0.98 },$/;"	r
value	three.js	/^			"uRepeat" : { type: "v2", value: new THREE.Vector2( 1, 1 ) },$/;"	r
value	three.js	/^			"uShininess": { type: "f", value: 30 },$/;"	r
value	three.js	/^			"uSpecularColor": { type: "c", value: new THREE.Color( 0x111111 ) },$/;"	r
value	three.js	/^			"useRefract": { type: "i", value: 0 },$/;"	r
value	three.js	/^			"wrapRGB"  : { type: "v3", value: new THREE.Vector3( 1, 1, 1 ) }$/;"	r
value	three.js	/^			uniforms.ambient.value = material.ambient;$/;"	r
value	three.js	/^			uniforms.bumpMap.value = material.bumpMap;$/;"	r
value	three.js	/^			uniforms.bumpScale.value = material.bumpScale;$/;"	r
value	three.js	/^			uniforms.diffuse.value = material.color;$/;"	r
value	three.js	/^			uniforms.emissive.value = material.emissive;$/;"	r
value	three.js	/^			uniforms.fogDensity.value = fog.density;$/;"	r
value	three.js	/^			uniforms.fogFar.value = fog.far;$/;"	r
value	three.js	/^			uniforms.fogNear.value = fog.near;$/;"	r
value	three.js	/^			uniforms.normalMap.value = material.normalMap;$/;"	r
value	three.js	/^			uniforms.reflectivity.value = material.reflectivity;$/;"	r
value	three.js	/^			uniforms.specular.value = material.specular;$/;"	r
value	three.js	/^			value = defines[ d ];$/;"	r
value	three.js	/^			value = uniform.value;$/;"	r
value	three.js	/^		"ambientLightColor" : { type: "fv", value: [] },$/;"	r
value	three.js	/^		"bumpMap" : { type: "t", value: null },$/;"	r
value	three.js	/^		"bumpScale" : { type: "f", value: 1 }$/;"	r
value	three.js	/^		"combine" : { type: "i", value: 0 },$/;"	r
value	three.js	/^		"diffuse" : { type: "c", value: new THREE.Color( 0xeeeeee ) },$/;"	r
value	three.js	/^		"directionalLightColor" : { type: "fv", value: [] },$/;"	r
value	three.js	/^		"directionalLightDirection" : { type: "fv", value: [] },$/;"	r
value	three.js	/^		"envMap" : { type: "t", value: null },$/;"	r
value	three.js	/^		"flipEnvMap" : { type: "f", value: -1 },$/;"	r
value	three.js	/^		"fogColor" : { type: "c", value: new THREE.Color( 0xffffff ) }$/;"	r
value	three.js	/^		"fogDensity" : { type: "f", value: 0.00025 },$/;"	r
value	three.js	/^		"fogFar" : { type: "f", value: 2000 },$/;"	r
value	three.js	/^		"fogNear" : { type: "f", value: 1 },$/;"	r
value	three.js	/^		"hemisphereLightDirection" : { type: "fv", value: [] },$/;"	r
value	three.js	/^		"hemisphereLightGroundColor" : { type: "fv", value: [] },$/;"	r
value	three.js	/^		"hemisphereLightSkyColor" : { type: "fv", value: [] },$/;"	r
value	three.js	/^		"lightMap" : { type: "t", value: null },$/;"	r
value	three.js	/^		"map" : { type: "t", value: null },$/;"	r
value	three.js	/^		"morphTargetInfluences" : { type: "f", value: 0 }$/;"	r
value	three.js	/^		"normalMap" : { type: "t", value: null },$/;"	r
value	three.js	/^		"normalScale" : { type: "v2", value: new THREE.Vector2( 1, 1 ) }$/;"	r
value	three.js	/^		"offsetRepeat" : { type: "v4", value: new THREE.Vector4( 0, 0, 1, 1 ) },$/;"	r
value	three.js	/^		"opacity" : { type: "f", value: 1.0 },$/;"	r
value	three.js	/^		"pointLightColor" : { type: "fv", value: [] },$/;"	r
value	three.js	/^		"pointLightDistance" : { type: "fv1", value: [] },$/;"	r
value	three.js	/^		"pointLightPosition" : { type: "fv", value: [] },$/;"	r
value	three.js	/^		"psColor" : { type: "c", value: new THREE.Color( 0xeeeeee ) },$/;"	r
value	three.js	/^		"reflectivity" : { type: "f", value: 1.0 },$/;"	r
value	three.js	/^		"refractionRatio" : { type: "f", value: 0.98 },$/;"	r
value	three.js	/^		"scale" : { type: "f", value: 1.0 },$/;"	r
value	three.js	/^		"shadowBias" : { type: "fv1", value: [] },$/;"	r
value	three.js	/^		"shadowDarkness": { type: "fv1", value: [] },$/;"	r
value	three.js	/^		"shadowMap": { type: "tv", value: [] },$/;"	r
value	three.js	/^		"shadowMapSize": { type: "v2v", value: [] },$/;"	r
value	three.js	/^		"shadowMatrix" : { type: "m4v", value: [] }$/;"	r
value	three.js	/^		"size" : { type: "f", value: 1.0 },$/;"	r
value	three.js	/^		"specularMap" : { type: "t", value: null },$/;"	r
value	three.js	/^		"spotLightAngleCos" : { type: "fv1", value: [] },$/;"	r
value	three.js	/^		"spotLightColor" : { type: "fv", value: [] },$/;"	r
value	three.js	/^		"spotLightDirection" : { type: "fv", value: [] },$/;"	r
value	three.js	/^		"spotLightDistance" : { type: "fv1", value: [] },$/;"	r
value	three.js	/^		"spotLightExponent" : { type: "fv1", value: [] }$/;"	r
value	three.js	/^		"spotLightPosition" : { type: "fv", value: [] },$/;"	r
value	three.js	/^		"useRefract" : { type: "i", value: 0 },$/;"	r
value	three.js	/^		uniforms.ambientLightColor.value = lights.ambient;$/;"	r
value	three.js	/^		uniforms.combine.value = material.combine;$/;"	r
value	three.js	/^		uniforms.dashSize.value = material.dashSize;$/;"	r
value	three.js	/^		uniforms.diffuse.value = material.color;$/;"	r
value	three.js	/^		uniforms.directionalLightColor.value = lights.directional.colors;$/;"	r
value	three.js	/^		uniforms.directionalLightDirection.value = lights.directional.positions;$/;"	r
value	three.js	/^		uniforms.envMap.value = material.envMap;$/;"	r
value	three.js	/^		uniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : -1;$/;"	r
value	three.js	/^		uniforms.fogColor.value = fog.color;$/;"	r
value	three.js	/^		uniforms.hemisphereLightDirection.value = lights.hemi.positions;$/;"	r
value	three.js	/^		uniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;$/;"	r
value	three.js	/^		uniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;$/;"	r
value	three.js	/^		uniforms.lightMap.value = material.lightMap;$/;"	r
value	three.js	/^		uniforms.map.value = material.map;$/;"	r
value	three.js	/^		uniforms.opacity.value = material.opacity;$/;"	r
value	three.js	/^		uniforms.pointLightColor.value = lights.point.colors;$/;"	r
value	three.js	/^		uniforms.pointLightDistance.value = lights.point.distances;$/;"	r
value	three.js	/^		uniforms.pointLightPosition.value = lights.point.positions;$/;"	r
value	three.js	/^		uniforms.psColor.value = material.color;$/;"	r
value	three.js	/^		uniforms.refractionRatio.value = material.refractionRatio;$/;"	r
value	three.js	/^		uniforms.scale.value = _canvas.height \/ 2.0; \/\/ TODO: Cache this.$/;"	r
value	three.js	/^		uniforms.scale.value = material.scale;$/;"	r
value	three.js	/^		uniforms.shininess.value = material.shininess;$/;"	r
value	three.js	/^		uniforms.size.value = material.size;$/;"	r
value	three.js	/^		uniforms.specularMap.value = material.specularMap;$/;"	r
value	three.js	/^		uniforms.spotLightAngleCos.value = lights.spot.anglesCos;$/;"	r
value	three.js	/^		uniforms.spotLightColor.value = lights.spot.colors;$/;"	r
value	three.js	/^		uniforms.spotLightDirection.value = lights.spot.directions;$/;"	r
value	three.js	/^		uniforms.spotLightDistance.value = lights.spot.distances;$/;"	r
value	three.js	/^		uniforms.spotLightExponent.value = lights.spot.exponents;$/;"	r
value	three.js	/^		uniforms.spotLightPosition.value = lights.spot.positions;$/;"	r
value	three.js	/^		uniforms.totalSize.value = material.dashSize + material.gapSize;$/;"	r
value	three.js	/^		uniforms.useRefract.value = material.envMap && material.envMap.mapping instanceof THREE.CubeRefractionMapping;$/;"	r
value	three.js	/^		value,$/;"	r
value	three.js	/^		var value, chunk, chunks = [];$/;"	r
value	three.js	/^ *  uniforms: { "parameter1": { type: "f", value: 1.0 }, "parameter2": { type: "i" value2: 2 } },$/;"	r
vec	three.js	/^		var vec = new THREE.Vector2( x, y ); \/\/.normalize();$/;"	r
vec	three.js	/^		vec = new THREE.Vector3(),$/;"	r
vec	three.js	/^	function scalePt2 ( pt, vec, size ) {$/;"	r
vec	three.js	/^	var vec = pt2.clone().sub(pt1);$/;"	r
vecX	three.js	/^	var vecX = -this.positionScreen.x * 2;$/;"	r
vecY	three.js	/^	var vecY = -this.positionScreen.y * 2;$/;"	r
vector	three.js	/^				var vector = new THREE.Vector3();$/;"	r
vector	three.js	/^				vector = object.position;$/;"	r
vector	three.js	/^				vector = object.scale;$/;"	r
vector	three.js	/^		m1.lookAt( this.position, vector, this.up );$/;"	r
vector	three.js	/^		var vector = new THREE.Vector3();$/;"	r
vector	three.js	/^	function correctUV( uv, vector, azimuth ) {$/;"	r
vector	three.js	/^	var vector = new THREE.Vector3();$/;"	r
vector	three.js	/^	var vector;$/;"	r
vector1	three.js	/^		var vector1 = new THREE.Vector3();$/;"	r
vector2	three.js	/^		var vector2 = new THREE.Vector3();$/;"	r
vectorB	three.js	/^		return function ( vectorA, vectorB, vectorC ) {$/;"	r
vendors	three.js	/^	var vendors = [ 'ms', 'moz', 'webkit', 'o' ];$/;"	r
vert	three.js	/^				vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );$/;"	r
vert	three.js	/^			vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];$/;"	r
vert	three.js	/^			vert = scalePt2( contour[ i ], contourMovements[ i ], bs );$/;"	r
vert	three.js	/^		vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];$/;"	r
vert	three.js	/^		vert = vertices[ i ];$/;"	r
vert	three.js	/^		vert, vlen = vertices.length,$/;"	r
vert	three.js	/^	function vert( x, y, z ) {$/;"	r
vert	three.js	/^	var vert, vlen = vertices.length;$/;"	r
vertIndices	three.js	/^			vertIndices = [];$/;"	r
vertex	three.js	/^					var vertex = new THREE.Vector3();$/;"	r
vertex	three.js	/^					vertex = vertices[ v ];$/;"	r
vertex	three.js	/^				var vertex = verts[ vertexId ];$/;"	r
vertex	three.js	/^				vertex = vertices[ sortArray[v][1] ];$/;"	r
vertex	three.js	/^				vertex = vertices[ v ];$/;"	r
vertex	three.js	/^			var vertex = new THREE.RenderableVertex();$/;"	r
vertex	three.js	/^			var vertex = new THREE.Vector3();$/;"	r
vertex	three.js	/^			var vertex = this.vertices[ i ];$/;"	r
vertex	three.js	/^			var vertex = vertices2[ i ];$/;"	r
vertex	three.js	/^			vertex = new THREE.Vector3();$/;"	r
vertex	three.js	/^		_lensFlare.attributes.vertex       = _gl.getAttribLocation ( _lensFlare.program, "position" );$/;"	r
vertex	three.js	/^		var vertex = new THREE.Vector3();$/;"	r
vertex	three.js	/^		var vertex = vector.normalize().clone();$/;"	r
vertex	three.js	/^		vertex, face, color, normal,$/;"	r
vertexArray	three.js	/^			_gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );$/;"	r
vertexArray	three.js	/^		vertexArray = geometry.__vertexArray,$/;"	r
vertexArray	three.js	/^		vertexArray = geometryGroup.__vertexArray,$/;"	r
vertexBuffer	three.js	/^		_lensFlare.vertexBuffer     = _gl.createBuffer();$/;"	r
vertexBuffer	three.js	/^		_sprite.vertexBuffer  = _gl.createBuffer();$/;"	r
vertexColorType	three.js	/^			vertexColorType = bufferGuessVertexColorType( material );$/;"	r
vertexColorType	three.js	/^		vertexColorType = bufferGuessVertexColorType( material ),$/;"	r
vertexColors	three.js	/^						newFace.vertexColors = face.vertexColors;$/;"	r
vertexColors	three.js	/^				mpars.vertexColors = THREE.FaceColors;$/;"	r
vertexColors	three.js	/^				mpars.vertexColors = THREE.VertexColors;$/;"	r
vertexColors	three.js	/^				vertexColors = face.vertexColors;$/;"	r
vertexColors	three.js	/^			vertexColors: material.vertexColors,$/;"	r
vertexColors	three.js	/^		vertexColors, faceColor,$/;"	r
vertexColors	three.js	/^	material.vertexColors = this.vertexColors;$/;"	r
vertexColors	three.js	/^	this.vertexColors = THREE.NoColors; \/\/ set to use "color" attribute stream$/;"	r
vertexColors	three.js	/^	this.vertexColors = THREE.NoColors;$/;"	r
vertexColors	three.js	/^	this.vertexColors = [ new THREE.Color(), new THREE.Color() ];$/;"	r
vertexColors	three.js	/^	this.vertexColors = color instanceof Array ? color : [];$/;"	r
vertexColors	three.js	/^	this.vertexColors = false;$/;"	r
vertexColors	three.js	/^	var material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );$/;"	r
vertexCopy	three.js	/^			var vertexCopy = vertex.clone();$/;"	r
vertexId	three.js	/^				var vertexId = face[ keys[ j ] ];$/;"	r
vertexIndex	three.js	/^				vertexIndex = face[ faceIndex[ i ] ];$/;"	r
vertexIndex	three.js	/^		vertexIndex = 0,$/;"	r
vertexNormals	three.js	/^						newFace.vertexNormals = face.vertexNormals;$/;"	r
vertexNormals	three.js	/^						vertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };$/;"	r
vertexNormals	three.js	/^						vertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3(), d: new THREE.Vector3() };$/;"	r
vertexNormals	three.js	/^					face.vertexNormals = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];$/;"	r
vertexNormals	three.js	/^					face.vertexNormals = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];$/;"	r
vertexNormals	three.js	/^				vertexNormals = face.vertexNormals;$/;"	r
vertexNormals	three.js	/^				vertexNormals = morphNormals.vertexNormals[ f ];$/;"	r
vertexNormals	three.js	/^			face.vertexNormals = face.__originalVertexNormals;$/;"	r
vertexNormals	three.js	/^		vertexNormals, faceNormal, normal,$/;"	r
vertexNormals	three.js	/^	this.vertexNormals = normal instanceof Array ? normal : [ ];$/;"	r
vertexNormalsLength	three.js	/^					_face.vertexNormalsLength = faceVertexNormals.length;$/;"	r
vertexNormalsLength	three.js	/^	this.vertexNormalsLength = 0;$/;"	r
vertexNormalsModel	three.js	/^	this.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];$/;"	r
vertexNormalsModel	three.js	/^	this.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];$/;"	r
vertexNormalsModelView	three.js	/^	this.vertexNormalsModelView = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];$/;"	r
vertexNormalsModelView	three.js	/^	this.vertexNormalsModelView = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];$/;"	r
vertexOffset	three.js	/^		vertexOffset = geometry1.vertices.length,$/;"	r
vertexShader	three.js	/^				var parameters = { fragmentShader: shader.fragmentShader, vertexShader: shader.vertexShader, uniforms: uniforms, lights: true, fog: true };$/;"	r
vertexShader	three.js	/^			var parameters = { fragmentShader: shader.fragmentShader, vertexShader: shader.vertexShader, uniforms: uniforms, lights: true, fog: true };$/;"	r
vertexShader	three.js	/^		_depthMaterial = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms } );$/;"	r
vertexShader	three.js	/^		_depthMaterialMorph = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, morphTargets: true } );$/;"	r
vertexShader	three.js	/^		_depthMaterialMorphSkin = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, morphTargets: true, skinning: true } );$/;"	r
vertexShader	three.js	/^		_depthMaterialSkin = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, skinning: true } );$/;"	r
vertexShader	three.js	/^		material.vertexShader = shaders.vertexShader;$/;"	r
vertexShader	three.js	/^		var vertexShader = _gl.createShader( _gl.VERTEX_SHADER );$/;"	r
vertexShader	three.js	/^		vertexShader: [$/;"	r
vertexShader	three.js	/^	material.vertexShader = this.vertexShader;$/;"	r
vertexShader	three.js	/^	this.vertexShader = "void main() {}";$/;"	r
vertexTangents	three.js	/^				vertexTangents = face.vertexTangents;$/;"	r
vertexTangents	three.js	/^		vertexTangents,$/;"	r
vertexTangents	three.js	/^	this.vertexTangents = [];$/;"	r
vertices	three.js	/^					var vertices = node.geometry.vertices;$/;"	r
vertices	three.js	/^				vertices = geometry.vertices;$/;"	r
vertices	three.js	/^				vertices = object.geometry.vertices;$/;"	r
vertices	three.js	/^			tmpGeo.vertices = this.morphTargets[ i ].vertices;$/;"	r
vertices	three.js	/^			var vertices = geometry.vertices;$/;"	r
vertices	three.js	/^			vertices = face instanceof THREE.Face3 ? 3 : 4;$/;"	r
vertices	three.js	/^			vertices = geometry.vertices,$/;"	r
vertices	three.js	/^			vertices = this.__tmpVertices;$/;"	r
vertices	three.js	/^			vertices: 0,$/;"	r
vertices	three.js	/^		_lensFlare.vertices = new Float32Array( 8 + 8 );$/;"	r
vertices	three.js	/^		_sprite.vertices = new Float32Array( 8 + 8 );$/;"	r
vertices	three.js	/^		_this.info.render.vertices = 0;$/;"	r
vertices	three.js	/^		this.vertices = unique;$/;"	r
vertices	three.js	/^		var vertices = this.geometry.vertices;$/;"	r
vertices	three.js	/^		var vertices = this.vertices;$/;"	r
vertices	three.js	/^		vertices = geometry.vertices,$/;"	r
vertices	three.js	/^		vertices = json.vertices,$/;"	r
vertices	three.js	/^		vertices = vertices.concat( ahole );$/;"	r
vertices	three.js	/^		vertices = vertices.concat( hole );$/;"	r
vertices	three.js	/^		vertices = vertices.reverse();$/;"	r
vertices	three.js	/^	THREE.PolyhedronGeometry.call( this, vertices, faces, radius, detail );$/;"	r
vertices	three.js	/^	this.vertices = [];$/;"	r
vertices	three.js	/^	this.vertices = vertices;$/;"	r
vertices	three.js	/^	var vertices = [$/;"	r
vertices	three.js	/^	var vertices = object.geometry.vertices;$/;"	r
vertices	three.js	/^	var vertices = shapePoints.shape;$/;"	r
vertices	three.js	/^	var vertices = this.vertices;$/;"	r
vertices	three.js	/^	var x, y, vertices = [], uvs = [];$/;"	r
vertices1	three.js	/^		vertices1 = geometry1.vertices,$/;"	r
vertices2	three.js	/^		vertices2 = geometry2.vertices,$/;"	r
verticesMap	three.js	/^		var verticesMap = {}; \/\/ Hashmap for looking up vertice by position coordinates (and making sure they are unique)$/;"	r
verticesMovements	three.js	/^		verticesMovements = verticesMovements.concat( oneHoleMovements );$/;"	r
verticesNeedUpdate	three.js	/^						geometry.verticesNeedUpdate = true;$/;"	r
verticesNeedUpdate	three.js	/^					geometry.verticesNeedUpdate = true;$/;"	r
verticesNeedUpdate	three.js	/^			geometry.verticesNeedUpdate = false;$/;"	r
verticesNeedUpdate	three.js	/^			this.verticesNeedUpdate = true;$/;"	r
verticesNeedUpdate	three.js	/^		this.geometry.verticesNeedUpdate = true;$/;"	r
verticesNeedUpdate	three.js	/^		this.targetLine.geometry.verticesNeedUpdate = true;$/;"	r
verticesNeedUpdate	three.js	/^	this.geometry.verticesNeedUpdate = true;$/;"	r
verticesNeedUpdate	three.js	/^	this.verticesNeedUpdate = false;$/;"	r
verticesRow	three.js	/^		var verticesRow = [];$/;"	r
verts	three.js	/^			verts = [],$/;"	r
verts	three.js	/^			verts = [];$/;"	r
verts	three.js	/^		var verts = this.object.geometry.vertices;$/;"	r
verts	three.js	/^	var verts = this.vertices;$/;"	r
video	three.js	/^			} else { \/\/ regular Texture (image, video, canvas)$/;"	r
virtualLight	three.js	/^						virtualLight = createVirtualLight( light, n );$/;"	r
virtualLight	three.js	/^						virtualLight = light.shadowCascadeArray[ n ];$/;"	r
virtualLight	three.js	/^					var virtualLight;$/;"	r
virtualLight	three.js	/^		var virtualLight = light.shadowCascadeArray[ cascade ];$/;"	r
virtualLight	three.js	/^		var virtualLight = new THREE.DirectionalLight();$/;"	r
visible	three.js	/^							object.visible = objJSON.visible;$/;"	r
visible	three.js	/^							visible = ( ( v3.positionScreen.x - v1.positionScreen.x ) * ( v2.positionScreen.y - v1.positionScreen.y ) -$/;"	r
visible	three.js	/^							visible = ( v4.positionScreen.x - v1.positionScreen.x ) * ( v2.positionScreen.y - v1.positionScreen.y ) -$/;"	r
visible	three.js	/^						object.visible = ( objJSON.visible !== undefined ) ? objJSON.visible : false;$/;"	r
visible	three.js	/^					_vertex.visible = ! ( _vertex.positionScreen.x < -1 || _vertex.positionScreen.x > 1 ||$/;"	r
visible	three.js	/^				child.visible = visible;$/;"	r
visible	three.js	/^			mpars.visible = m.visible;$/;"	r
visible	three.js	/^			var visible = ( obj.visible !== undefined ) ? obj.visible : true;$/;"	r
visible	three.js	/^		material.visible = this.visible;$/;"	r
visible	three.js	/^		object.visible = this.visible;$/;"	r
visible	three.js	/^		this.lightDistance.visible = false;$/;"	r
visible	three.js	/^		this.lightDistance.visible = true;$/;"	r
visible	three.js	/^		var visible = false,$/;"	r
visible	three.js	/^	this.visible = true;$/;"	r
vk	three.js	/^		vk, vkl, vka,$/;"	r
vka	three.js	/^					vka = morphTargetsArrays[ vk ];$/;"	r
vkl	three.js	/^			for ( vk = 0, vkl = morphTargets.length; vk < vkl; vk ++ ) {$/;"	r
vl	three.js	/^				for ( v = 0, vl = vertices.length; v < vl; v ++ ) {$/;"	r
vl	three.js	/^				for ( v = 1, vl = vertices.length; v < vl; v ++ ) {$/;"	r
vl	three.js	/^				for( v = 0, vl = srcVertices.length; v < vl; v += 3 ) {$/;"	r
vl	three.js	/^			for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {$/;"	r
vl	three.js	/^		for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {$/;"	r
vl	three.js	/^		vl = vertices.length,$/;"	r
vlen	three.js	/^		vert, vlen = vertices.length,$/;"	r
vlen	three.js	/^	for ( var v = 1, vlen = vectors.length; v < vlen; v ++ ) {$/;"	r
vlen	three.js	/^	var vert, vlen = vertices.length;$/;"	r
vn	three.js	/^						vn = vertexNormals[ i ];$/;"	r
vn	three.js	/^		vn, uvi, uv2i,$/;"	r
vx	three.js	/^			vx = 0;$/;"	r
vx	three.js	/^			vx = _viewportX;$/;"	r
vy	three.js	/^			_gl.viewport( vx, vy, width, height );$/;"	r
vy	three.js	/^			vy = 0;$/;"	r
vy	three.js	/^			vy = _viewportY;$/;"	r
w	three.js	/^				w = (test < 0.0) ? -1.0 : 1.0;$/;"	r
w	three.js	/^				w = 0;$/;"	r
w	three.js	/^			n = new THREE.Vector3(), w;$/;"	r
w	three.js	/^			this.w = 1;$/;"	r
w	three.js	/^			this.w = max.w;$/;"	r
w	three.js	/^			this.w = min.w;$/;"	r
w	three.js	/^			this.w = v.w;$/;"	r
w	three.js	/^			w = 'x';$/;"	r
w	three.js	/^			w = 'y';$/;"	r
w	three.js	/^			w = 'z';$/;"	r
w	three.js	/^			w = ( test < 0.0 ) ? -1.0 : 1.0;$/;"	r
w	three.js	/^			w = v + 1;  if ( nv <= w ) w = 0;     \/* next     *\/$/;"	r
w	three.js	/^		setPoint( "cf2",  w,  0, 1 );$/;"	r
w	three.js	/^		setPoint( "cn2",  w,  0, -1 );$/;"	r
w	three.js	/^		setPoint( "f2",  w, -h, 1 );$/;"	r
w	three.js	/^		setPoint( "f4",  w,  h, 1 );$/;"	r
w	three.js	/^		setPoint( "n2",  w, -h, -1 );$/;"	r
w	three.js	/^		setPoint( "n4",  w,  h, -1 );$/;"	r
w	three.js	/^		this.w = ( v.w !== undefined ) ? v.w : 1;$/;"	r
w	three.js	/^		this.w = 2 * Math.acos( q.w );$/;"	r
w	three.js	/^		this.w = Math.acos( ( m11 + m22 + m33 - 1 ) \/ 2 );$/;"	r
w	three.js	/^		this.w = a.w + b.w;$/;"	r
w	three.js	/^		this.w = a.w - b.w;$/;"	r
w	three.js	/^		this.w = array[ 3 ];$/;"	r
w	three.js	/^		this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;$/;"	r
w	three.js	/^		this.w = w;$/;"	r
w	three.js	/^		var w = 1, h = 1;$/;"	r
w	three.js	/^		var w = right - left;$/;"	r
w	three.js	/^		var w = this.w;$/;"	r
w	three.js	/^		var w, ix, iy,$/;"	r
w	three.js	/^		var w, t, test;$/;"	r
w	three.js	/^		w = b.normalize();$/;"	r
w	three.js	/^	this.w = ( w !== undefined ) ? w : 1;$/;"	r
w2	three.js	/^		w2 = weight * weight;$/;"	r
w2	three.js	/^	w2 = weight * weight;$/;"	r
w3	three.js	/^		w3 = weight * w2;$/;"	r
w3	three.js	/^	w3 = weight * w2;$/;"	r
w_hat	three.js	/^			w_hat = THREE.ExtrudeGeometry.__v4,$/;"	r
wantedRotation	three.js	/^		flare.wantedRotation = flare.x * Math.PI * 0.25;$/;"	r
warn	three.js	/^	warn: function () {},$/;"	r
we	three.js	/^		\/\/ if faces are completely degenerate after merging vertices, we$/;"	r
webglObject	three.js	/^				webglObject = renderList[ j ];$/;"	r
webglObject	three.js	/^			webglObject = renderList[ i ];$/;"	r
webglObject	three.js	/^			webglObject = renderList[ j ];$/;"	r
webglObject	three.js	/^		var webglObject, object, buffer, material, start, end, delta;$/;"	r
webglObject	three.js	/^		var webglObject, object, material, program;$/;"	r
webglObject	three.js	/^		webglObject, object, light,$/;"	r
webglObject	three.js	/^		webglObject, object,$/;"	r
weight	three.js	/^		animation.weight = weight;$/;"	r
weight	three.js	/^		v3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );$/;"	r
weight	three.js	/^		v3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );$/;"	r
weight	three.js	/^		v3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );$/;"	r
weight	three.js	/^		var weight = animation.weight;$/;"	r
weight	three.js	/^		weight = point - intPoint;$/;"	r
weight	three.js	/^		weight: 1,$/;"	r
weight	three.js	/^	THREE.FontUtils.weight = weight;$/;"	r
weight	three.js	/^	v3[ 0 ] = this.interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );$/;"	r
weight	three.js	/^	v3[ 1 ] = this.interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );$/;"	r
weight	three.js	/^	v3[ 2 ] = this.interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );$/;"	r
weight	three.js	/^	var weight = parameters.weight !== undefined ? parameters.weight : "normal";$/;"	r
weight	three.js	/^	weight = point - intPoint;$/;"	r
weight	three.js	/^	weight: "normal",$/;"	r
weight	three.js	/^        weight = point - intPoint;$/;"	r
width	three.js	/^							data.width,$/;"	r
width	three.js	/^					var width = nearest_pow2( this.width );$/;"	r
width	three.js	/^					where.image.width = width;$/;"	r
width	three.js	/^				canvas.width = texture.image.width;$/;"	r
width	three.js	/^				img.width = dds.width;$/;"	r
width	three.js	/^				width = Math.max( width * 0.5, 1 );$/;"	r
width	three.js	/^				width = scaleX * bitmapWidth;$/;"	r
width	three.js	/^			_canvas.style.width = width + 'px';$/;"	r
width	three.js	/^			texture.image.width = dds.width;$/;"	r
width	three.js	/^			width = _viewportWidth;$/;"	r
width	three.js	/^			width = dds.width;$/;"	r
width	three.js	/^			width = element.scale.x * _canvasWidthHalf;$/;"	r
width	three.js	/^			width = renderTarget.width;$/;"	r
width	three.js	/^		_canvas.width = _canvasWidth;$/;"	r
width	three.js	/^		_canvas.width = width * this.devicePixelRatio;$/;"	r
width	three.js	/^		canvas.width = newWidth;$/;"	r
width	three.js	/^		canvas.width = width;$/;"	r
width	three.js	/^		dds.width = header[ off_width ];$/;"	r
width	three.js	/^		e.style.width = "120px";$/;"	r
width	three.js	/^		var dds = { mipmaps: [], width: 0, height: 0, format: null, mipmapCount: 1 };$/;"	r
width	three.js	/^		var texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );$/;"	r
width	three.js	/^		var width = Math.abs( right - left );$/;"	r
width	three.js	/^		var width = dds.width;$/;"	r
width	three.js	/^		var width = image.width;$/;"	r
width	three.js	/^		var width = offset \/ 2;$/;"	r
width	three.js	/^		var width, height, scaleX, scaleY,$/;"	r
width	three.js	/^		width = image.width - 1,$/;"	r
width	three.js	/^		width = texture.image.width * texture.repeat.x,$/;"	r
width	three.js	/^	THREE.WebGLRenderTarget.call( this, width, height, options );$/;"	r
width	three.js	/^	_gradientMap.width = _gradientMap.height = _gradientMapQuality;$/;"	r
width	three.js	/^	_pixelMap.width = _pixelMap.height = 2;$/;"	r
width	three.js	/^	this.image = { data: data, width: width, height: height };$/;"	r
width	three.js	/^	this.width = 1.0;$/;"	r
width	three.js	/^	this.width = width;$/;"	r
width	three.js	/^	var width = linewidth || 1;$/;"	r
width	three.js	/^THREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {$/;"	r
width	three.js	/^THREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {$/;"	r
widthSegments	three.js	/^							data.widthSegments,$/;"	r
widthSegments	three.js	/^	this.widthSegments = widthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );$/;"	r
widthSegments	three.js	/^	this.widthSegments = widthSegments || 1;$/;"	r
widthSegments	three.js	/^THREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {$/;"	r
width_half	three.js	/^		width_half = width \/ 2,$/;"	r
width_half	three.js	/^	buildPlane( 'z', 'y', - 1, - 1, this.depth, this.height, width_half, 0 ); \/\/ px$/;"	r
width_half	three.js	/^	var width_half = this.width \/ 2;$/;"	r
width_half	three.js	/^	var width_half = width \/ 2;$/;"	r
wireframe	three.js	/^					wireframe: json.wireframe$/;"	r
wireframe	three.js	/^				material.wireframe === true$/;"	r
wireframe	three.js	/^			material.wireframe === true$/;"	r
wireframe	three.js	/^			mpars.wireframe = m.wireframe;$/;"	r
wireframe	three.js	/^		var mpars = { color: 0xeeeeee, opacity: 1.0, map: null, lightMap: null, normalMap: null, bumpMap: null, wireframe: false };$/;"	r
wireframe	three.js	/^	THREE.Mesh.call( this, new THREE.CubeGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );$/;"	r
wireframe	three.js	/^	material.wireframe = this.wireframe;$/;"	r
wireframe	three.js	/^	this.wireframe = false;$/;"	r
wireframe	three.js	/^	var material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );$/;"	r
wireframeBit	three.js	/^			wireframeBit = material.wireframe ? 1 : 0,$/;"	r
wireframeLinecap	three.js	/^	material.wireframeLinecap = this.wireframeLinecap;$/;"	r
wireframeLinecap	three.js	/^	this.wireframeLinecap = 'round';$/;"	r
wireframeLinejoin	three.js	/^	material.wireframeLinejoin = this.wireframeLinejoin;$/;"	r
wireframeLinejoin	three.js	/^	this.wireframeLinejoin = 'round';$/;"	r
wireframeLinewidth	three.js	/^	material.wireframeLinewidth = this.wireframeLinewidth;$/;"	r
wireframeLinewidth	three.js	/^	this.wireframeLinewidth = 1;$/;"	r
withCredentials	three.js	/^	this.withCredentials = false;$/;"	r
withCredentials	three.js	/^	xhr.withCredentials = this.withCredentials;$/;"	r
worldMatrix	three.js	/^		var worldMatrix = this.object.matrixWorld;$/;"	r
worldNormal	three.js	/^				"vReflect = refract( cameraToVertex, worldNormal, refractionRatio );",$/;"	r
worldToLocal	three.js	/^	worldToLocal: function () {$/;"	r
worldpos_vertex	three.js	/^	worldpos_vertex : [$/;"	r
wrapAround	three.js	/^			wrapAround: material.wrapAround,$/;"	r
wrapAround	three.js	/^	material.wrapAround = this.wrapAround;$/;"	r
wrapAround	three.js	/^	this.wrapAround = false;$/;"	r
wrapMap	three.js	/^					var wrapMap = {$/;"	r
wrapMap	three.js	/^				var wrapMap = {$/;"	r
wrapRGB	three.js	/^	this.wrapRGB = new THREE.Vector3( 1, 1, 1 );$/;"	r
wrapS	three.js	/^		texture.wrapS = this.wrapS;$/;"	r
wrapS	three.js	/^		tmp.wrapS = this.wrapS;$/;"	r
wrapS	three.js	/^	this.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;$/;"	r
wrapS	three.js	/^	this.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;$/;"	r
wrapT	three.js	/^		texture.wrapT = this.wrapT;$/;"	r
wrapT	three.js	/^		tmp.wrapT = this.wrapT;$/;"	r
wrapT	three.js	/^	this.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;$/;"	r
wrapT	three.js	/^	this.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;$/;"	r
wx	three.js	/^		var wx = w * x2, wy = w * y2, wz = w * z2;$/;"	r
x	three.js	/^							v1.positionScreen.x,$/;"	r
x	three.js	/^							v2.positionScreen.x,$/;"	r
x	three.js	/^						scale.x = size * invAspect;$/;"	r
x	three.js	/^						screenPosition.x = sprite.x;$/;"	r
x	three.js	/^						x = positions[ vA * 3 ];$/;"	r
x	three.js	/^						x = positions[ vB * 3 ];$/;"	r
x	three.js	/^						x = positions[ vC * 3 ];$/;"	r
x	three.js	/^					_particle.scale.x = object.scale.x * Math.abs( _particle.x - ( _vector4.x + camera.projectionMatrix.elements[0] ) \/ ( _vector4.w + camera.projectionMatrix.elements[12] ) );$/;"	r
x	three.js	/^					_particle.x = _vector4.x * invW;$/;"	r
x	three.js	/^					bb.max.x = x;$/;"	r
x	three.js	/^					bb.min.x = x;$/;"	r
x	three.js	/^					normal.x = normals[ normalIndex ++ ];$/;"	r
x	three.js	/^					this.max.x = point.x;$/;"	r
x	three.js	/^					this.min.x = point.x;$/;"	r
x	three.js	/^					vector.x = currentPoint[ 0 ];$/;"	r
x	three.js	/^					vector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;$/;"	r
x	three.js	/^					vertex.x = srcVertices[ v ] * scale;$/;"	r
x	three.js	/^					x = 0.707106781;$/;"	r
x	three.js	/^					x = 0;$/;"	r
x	three.js	/^					x = Math.sqrt( xx );$/;"	r
x	three.js	/^					x = outline[ i++ ] * scaleX + offset;$/;"	r
x	three.js	/^					x = positions[ i + 3 ];$/;"	r
x	three.js	/^					x = positions[ i + 6 ];$/;"	r
x	three.js	/^					x = positions[ i ];$/;"	r
x	three.js	/^					x = xy \/ y;$/;"	r
x	three.js	/^					x = xz \/ z;$/;"	r
x	three.js	/^				bb.min.x = bb.max.x = positions[ 0 ];$/;"	r
x	three.js	/^				normal.x = normals[ normalIndex ++ ];$/;"	r
x	three.js	/^				p1.x = plane.normal.x > 0 ? box.min.x : box.max.x;$/;"	r
x	three.js	/^				p2.x = plane.normal.x > 0 ? box.max.x : box.min.x;$/;"	r
x	three.js	/^				v1.x = a[ i ];$/;"	r
x	three.js	/^				vector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;$/;"	r
x	three.js	/^				x = json.skinWeights[ i     ];$/;"	r
x	three.js	/^				x = positions[ i ];$/;"	r
x	three.js	/^			 this.x = 1;$/;"	r
x	three.js	/^			 this.x = q.x \/ s;$/;"	r
x	three.js	/^			center.x = this.radius * Math.cos( u );$/;"	r
x	three.js	/^			pos.x = p1.x + cx * n.x + cy * bitan.x;$/;"	r
x	three.js	/^			position.x = te[12];$/;"	r
x	three.js	/^			scale.x = sx;$/;"	r
x	three.js	/^			screenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;$/;"	r
x	three.js	/^			this.x = 0;$/;"	r
x	three.js	/^			this.x = max.x;$/;"	r
x	three.js	/^			this.x = min.x;$/;"	r
x	three.js	/^			this.x = v.x;$/;"	r
x	three.js	/^			var x = ix * segment_width - width_half;$/;"	r
x	three.js	/^			var x, y, z;$/;"	r
x	three.js	/^			vertex.x = ( this.radius + this.tube * Math.cos( v ) ) * Math.cos( u );$/;"	r
x	three.js	/^			vertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );$/;"	r
x	three.js	/^			vertex.x = c * pt.x - s * pt.y;$/;"	r
x	three.js	/^			vertex.x = radius * Math.cos( segment );$/;"	r
x	three.js	/^			vertex.x = radius * Math.sin( u * Math.PI * 2 );$/;"	r
x	three.js	/^			vertex.x = vertices[ offset ++ ] * scale;$/;"	r
x	three.js	/^			x = normals[ i ];$/;"	r
x	three.js	/^			x, 0, 0, 0,$/;"	r
x	three.js	/^			x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2,$/;"	r
x	three.js	/^		flare.x = this.positionScreen.x + vecX * flare.distance;$/;"	r
x	three.js	/^		function setPoint( point, x, y, z ) {$/;"	r
x	three.js	/^		this.max.x = this.max.y = -Infinity;$/;"	r
x	three.js	/^		this.max.x = this.max.y = this.max.z = -Infinity;$/;"	r
x	three.js	/^		this.min.x = this.min.y = Infinity;$/;"	r
x	three.js	/^		this.min.x = this.min.y = this.min.z = Infinity;$/;"	r
x	three.js	/^		this.x = ( e[0] * x + e[4] * y + e[8]  * z + e[12] ) * d;$/;"	r
x	three.js	/^		this.x = ( m32 - m23 ) \/ s;$/;"	r
x	three.js	/^		this.x = a.x * b.x;$/;"	r
x	three.js	/^		this.x = a.x + b.x;$/;"	r
x	three.js	/^		this.x = a.x - b.x;$/;"	r
x	three.js	/^		this.x = a.y * b.z - a.z * b.y;$/;"	r
x	three.js	/^		this.x = array[ 0 ];$/;"	r
x	three.js	/^		this.x = e[0] * x + e[3] * y + e[6] * z;$/;"	r
x	three.js	/^		this.x = e[0] * x + e[4] * y + e[8]  * z + e[12];$/;"	r
x	three.js	/^		this.x = e[0] * x + e[4] * y + e[8]  * z;$/;"	r
x	three.js	/^		this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;$/;"	r
x	three.js	/^		this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;$/;"	r
x	three.js	/^		this.x = m.elements[12];$/;"	r
x	three.js	/^		this.x = me[ offset ];$/;"	r
x	three.js	/^		this.x = sx;$/;"	r
x	three.js	/^		this.x = v.x;$/;"	r
x	three.js	/^		this.x = x;$/;"	r
x	three.js	/^		this.x = y * v.z - z * v.y;$/;"	r
x	three.js	/^		v3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );$/;"	r
x	three.js	/^		var x = ( right + left ) \/ w;$/;"	r
x	three.js	/^		var x = - Math.cos( anglec );$/;"	r
x	three.js	/^		var x = 2 * near \/ ( right - left );$/;"	r
x	three.js	/^		var x = axis.x, y = axis.y, z = axis.z;$/;"	r
x	three.js	/^		var x = euler.x, y = euler.y, z = euler.z;$/;"	r
x	three.js	/^		var x = new THREE.Vector3();$/;"	r
x	three.js	/^		var x = q.x, y = q.y, z = q.z, w = q.w;$/;"	r
x	three.js	/^		var x = this._x, y = this._y, z = this._z, w = this._w;$/;"	r
x	three.js	/^		var x = this.x, y = this.y, z = this.z;$/;"	r
x	three.js	/^		var x = this.x;$/;"	r
x	three.js	/^		var x = v.x, y = v.y, z = v.z;$/;"	r
x	three.js	/^		var x = v2.x - v1.x, y = v2.y - v1.y,$/;"	r
x	three.js	/^		var x, y, z, n;$/;"	r
x	three.js	/^		vertex.x = radius * Math.cos( segment );$/;"	r
x	three.js	/^		x = ( x - min )\/( max - min );$/;"	r
x	three.js	/^		x, y, z,$/;"	r
x	three.js	/^	this.rotation.x = - Math.PI \/ 2;$/;"	r
x	three.js	/^	this.rotation.x = 0;$/;"	r
x	three.js	/^	this.rotation.x = Math.PI \/ 2;$/;"	r
x	three.js	/^	this.x = 0;$/;"	r
x	three.js	/^	this.x = x || 0;$/;"	r
x	three.js	/^	this.x = x;$/;"	r
x	three.js	/^	var x, y, vertices = [], uvs = [];$/;"	r
x0	three.js	/^		var x0 = uvs[ 0 ].x;$/;"	r
x0	three.js	/^	var x0 = lastargs[ lastargs.length - 2 ];$/;"	r
x1	three.js	/^			x1 = vB.x - vA.x;$/;"	r
x1	three.js	/^			x1 = xB - xA;$/;"	r
x1	three.js	/^			x1, x2, y1, y2, z1, z2,$/;"	r
x1	three.js	/^		var x1 = uvs[ 1 ].x;$/;"	r
x2	three.js	/^			x2 = vC.x - vA.x;$/;"	r
x2	three.js	/^			x2 = xC - xA;$/;"	r
x2	three.js	/^		var x2 = uvs[ 2 ].x;$/;"	r
x2	three.js	/^		var x2 = x + x, y2 = y + y, z2 = z + z;$/;"	r
xA	three.js	/^			xA = positions[ a * 3 ];$/;"	r
xA	three.js	/^		var xA, yA, zA,$/;"	r
xB	three.js	/^			xB = positions[ b * 3 ];$/;"	r
xB	three.js	/^			xB, yB, zB,$/;"	r
xC	three.js	/^			xC = positions[ c * 3 ];$/;"	r
xC	three.js	/^			xC, yC, zC,$/;"	r
xNorm	three.js	/^		xNorm = oldX \/ bounds.maxX;$/;"	r
xNorm	three.js	/^		xNorm = path.getUtoTmapping( xNorm, oldX );$/;"	r
xRadius	three.js	/^				xRadius = args[ 2 ],$/;"	r
xRadius	three.js	/^	this.absellipse(aX + x0, aY + y0, xRadius, yRadius,$/;"	r
xRadius	three.js	/^	this.xRadius = xRadius;$/;"	r
xhr	three.js	/^	var xhr = new XMLHttpRequest();$/;"	r
xmax	three.js	/^		return this.makeFrustum( xmin, xmax, ymin, ymax, near, far );$/;"	r
xmax	three.js	/^		var xmax = ymax * aspect;$/;"	r
xmin	three.js	/^		var xmin = ymin * aspect;$/;"	r
xx	three.js	/^			var xx = ( m11 + 1 ) \/ 2;$/;"	r
xx	three.js	/^		var xx = x * x2, xy = x * y2, xz = x * z2;$/;"	r
xy	three.js	/^			var xy = ( m12 + m21 ) \/ 4;$/;"	r
xz	three.js	/^			var xz = ( m13 + m31 ) \/ 4;$/;"	r
y	three.js	/^							v1.positionScreen.y,$/;"	r
y	three.js	/^							v2.positionScreen.y$/;"	r
y	three.js	/^						pA.set( x, y, z );$/;"	r
y	three.js	/^						pB.set( x, y, z );$/;"	r
y	three.js	/^						pC.set( x, y, z );$/;"	r
y	three.js	/^						scale.y = size;$/;"	r
y	three.js	/^						screenPosition.y = sprite.y;$/;"	r
y	three.js	/^						this.target.y = 0;$/;"	r
y	three.js	/^						y = positions[ vA * 3 + 1 ];$/;"	r
y	three.js	/^						y = positions[ vB * 3 + 1 ];$/;"	r
y	three.js	/^						y = positions[ vC * 3 + 1 ];$/;"	r
y	three.js	/^					_particle.scale.y = object.scale.y * Math.abs( _particle.y - ( _vector4.y + camera.projectionMatrix.elements[5] ) \/ ( _vector4.w + camera.projectionMatrix.elements[13] ) );$/;"	r
y	three.js	/^					_particle.y = _vector4.y * invW;$/;"	r
y	three.js	/^					bb.max.y = y;$/;"	r
y	three.js	/^					bb.min.y = y;$/;"	r
y	three.js	/^					normal.y = normals[ normalIndex ++ ];$/;"	r
y	three.js	/^					pA.set( x, y, z );$/;"	r
y	three.js	/^					pB.set( x, y, z );$/;"	r
y	three.js	/^					pC.set( x, y, z );$/;"	r
y	three.js	/^					this.max.y = point.y;$/;"	r
y	three.js	/^					this.min.y = point.y;$/;"	r
y	three.js	/^					vector.y = currentPoint[ 1 ];$/;"	r
y	three.js	/^					vector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;$/;"	r
y	three.js	/^					vertex.y = srcVertices[ v + 1 ] * scale;$/;"	r
y	three.js	/^					y = 0.707106781;$/;"	r
y	three.js	/^					y = 0;$/;"	r
y	three.js	/^					y = Math.sqrt( yy );$/;"	r
y	three.js	/^					y = outline[ i++ ] * scaleY;$/;"	r
y	three.js	/^					y = positions[ i + 1 ];$/;"	r
y	three.js	/^					y = positions[ i + 4 ];$/;"	r
y	three.js	/^					y = positions[ i + 7 ];$/;"	r
y	three.js	/^					y = xy \/ x;$/;"	r
y	three.js	/^					y = yz \/ z;$/;"	r
y	three.js	/^				bb.min.y = bb.max.y = positions[ 1 ];$/;"	r
y	three.js	/^				geometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );$/;"	r
y	three.js	/^				normal.y = normals[ normalIndex ++ ];$/;"	r
y	three.js	/^				p1.y = plane.normal.y > 0 ? box.min.y : box.max.y;$/;"	r
y	three.js	/^				p2.y = plane.normal.y > 0 ? box.max.y : box.min.y;$/;"	r
y	three.js	/^				v1.y = a[ i + 1 ];$/;"	r
y	three.js	/^				vector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;$/;"	r
y	three.js	/^				y = json.skinWeights[ i + 1 ];$/;"	r
y	three.js	/^				y = positions[ i + 1 ];$/;"	r
y	three.js	/^			 this.y = 0;$/;"	r
y	three.js	/^			 this.y = q.y \/ s;$/;"	r
y	three.js	/^			center.y = this.radius * Math.sin( u );$/;"	r
y	three.js	/^			pos.y = p1.y + cx * n.y + cy * bitan.y;$/;"	r
y	three.js	/^			position.y = te[13];$/;"	r
y	three.js	/^			scale.y = sy;$/;"	r
y	three.js	/^			screenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;$/;"	r
y	three.js	/^			this.set( x, y, z, angle );$/;"	r
y	three.js	/^			this.y = 0;$/;"	r
y	three.js	/^			this.y = max.y;$/;"	r
y	three.js	/^			this.y = min.y;$/;"	r
y	three.js	/^			this.y = v.y;$/;"	r
y	three.js	/^			var y = iz * segment_height - height_half;$/;"	r
y	three.js	/^			vector.set( x, y, z );$/;"	r
y	three.js	/^			vertex.y = ( this.radius + this.tube * Math.cos( v ) ) * Math.sin( u );$/;"	r
y	three.js	/^			vertex.y = - v * height + heightHalf;$/;"	r
y	three.js	/^			vertex.y = radius * Math.cos( thetaStart + v * thetaLength );$/;"	r
y	three.js	/^			vertex.y = radius * Math.sin( segment );$/;"	r
y	three.js	/^			vertex.y = s * pt.x + c * pt.y;$/;"	r
y	three.js	/^			vertex.y = vertices[ offset ++ ] * scale;$/;"	r
y	three.js	/^			y = normals[ i + 1 ];$/;"	r
y	three.js	/^		_gl.scissor( x, y, width, height );$/;"	r
y	three.js	/^		flare.y = this.positionScreen.y + vecY * flare.distance;$/;"	r
y	three.js	/^		return scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;$/;"	r
y	three.js	/^		scope.vertices.push( new THREE.Vector3( x, y, z ) );$/;"	r
y	three.js	/^		this.normal.set( x, y, z );$/;"	r
y	three.js	/^		this.y = ( e[1] * x + e[5] * y + e[9]  * z + e[13] ) * d;$/;"	r
y	three.js	/^		this.y = ( m13 - m31 ) \/ s;$/;"	r
y	three.js	/^		this.y = a.y * b.y;$/;"	r
y	three.js	/^		this.y = a.y + b.y;$/;"	r
y	three.js	/^		this.y = a.y - b.y;$/;"	r
y	three.js	/^		this.y = a.z * b.x - a.x * b.z;$/;"	r
y	three.js	/^		this.y = array[ 1 ];$/;"	r
y	three.js	/^		this.y = e[1] * x + e[4] * y + e[7] * z;$/;"	r
y	three.js	/^		this.y = e[1] * x + e[5] * y + e[9]  * z + e[13];$/;"	r
y	three.js	/^		this.y = e[1] * x + e[5] * y + e[9]  * z;$/;"	r
y	three.js	/^		this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;$/;"	r
y	three.js	/^		this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;$/;"	r
y	three.js	/^		this.y = m.elements[13];$/;"	r
y	three.js	/^		this.y = me[ offset + 1 ];$/;"	r
y	three.js	/^		this.y = sy;$/;"	r
y	three.js	/^		this.y = v.y;$/;"	r
y	three.js	/^		this.y = y;$/;"	r
y	three.js	/^		this.y = z * v.x - x * v.z;$/;"	r
y	three.js	/^		v3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );$/;"	r
y	three.js	/^		var y = ( top + bottom ) \/ h;$/;"	r
y	three.js	/^		var y = - Math.sin( anglec );$/;"	r
y	three.js	/^		var y = 2 * near \/ ( top - bottom );$/;"	r
y	three.js	/^		var y = new THREE.Vector3();$/;"	r
y	three.js	/^		var y = this.y;$/;"	r
y	three.js	/^		vertex.y = radius * Math.sin( segment );$/;"	r
y	three.js	/^	function v( x, y, z ) {$/;"	r
y	three.js	/^	function vert( x, y, z ) {$/;"	r
y	three.js	/^	makeScale: function ( x, y, z ) {$/;"	r
y	three.js	/^	makeTranslation: function ( x, y, z ) {$/;"	r
y	three.js	/^	set: function ( x, y, z ) {$/;"	r
y	three.js	/^	set: function ( x, y, z, order ) {$/;"	r
y	three.js	/^	set: function ( x, y, z, w ) {$/;"	r
y	three.js	/^	setComponents: function ( x, y, z, w ) {$/;"	r
y	three.js	/^	this.rotation.y = - Math.PI \/ 2;$/;"	r
y	three.js	/^	this.rotation.y = 0;$/;"	r
y	three.js	/^	this.rotation.y = Math.PI \/ 2;$/;"	r
y	three.js	/^	this.rotation.y = Math.PI;$/;"	r
y	three.js	/^	this.setScissor = function ( x, y, width, height ) {$/;"	r
y	three.js	/^	this.setViewport = function ( x, y, width, height ) {$/;"	r
y	three.js	/^	this.y = 0;$/;"	r
y	three.js	/^	this.y = y || 0;$/;"	r
y	three.js	/^	this.y = y;$/;"	r
y	three.js	/^THREE.Euler = function ( x, y, z, order ) {$/;"	r
y	three.js	/^THREE.Quaternion = function ( x, y, z, w ) {$/;"	r
y	three.js	/^THREE.Vector3 = function ( x, y, z ) {$/;"	r
y	three.js	/^THREE.Vector4 = function ( x, y, z, w ) {$/;"	r
y0	three.js	/^	function clipImage( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image ) {$/;"	r
y0	three.js	/^	function drawQuad( x0, y0, x1, y1, x2, y2, x3, y3 ) {$/;"	r
y0	three.js	/^	function drawTriangle( x0, y0, x1, y1, x2, y2 ) {$/;"	r
y0	three.js	/^	function patternPath( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture ) {$/;"	r
y0	three.js	/^	var y0 = lastargs[ lastargs.length - 1 ];$/;"	r
y1	three.js	/^			y1 = vB.y - vA.y;$/;"	r
y1	three.js	/^			y1 = yB - yA;$/;"	r
y2	three.js	/^			y2 = vC.y - vA.y;$/;"	r
y2	three.js	/^			y2 = yC - yA;$/;"	r
yA	three.js	/^			yA = positions[ a * 3 + 1 ];$/;"	r
yB	three.js	/^			yB = positions[ b * 3 + 1 ];$/;"	r
yC	three.js	/^			yC = positions[ c * 3 + 1 ];$/;"	r
yRadius	three.js	/^				yRadius = args[ 3 ],$/;"	r
yRadius	three.js	/^	this.yRadius = yRadius;$/;"	r
ymax	three.js	/^		var ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );$/;"	r
ymin	three.js	/^		var ymin = - ymax;$/;"	r
yy	three.js	/^			var yy = ( m22 + 1 ) \/ 2;$/;"	r
yy	three.js	/^		var yy = y * y2, yz = y * z2, zz = z * z2;$/;"	r
yz	three.js	/^			var yz = ( m23 + m32 ) \/ 4;$/;"	r
z	three.js	/^							webglObject.z = _vector3.z;$/;"	r
z	three.js	/^							webglObject.z = object.renderDepth;$/;"	r
z	three.js	/^						_line.z = Math.max( _clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z );$/;"	r
z	three.js	/^						screenPosition.z = sprite.z;$/;"	r
z	three.js	/^						z = positions[ vA * 3 + 2 ];$/;"	r
z	three.js	/^						z = positions[ vB * 3 + 2 ];$/;"	r
z	three.js	/^						z = positions[ vC * 3 + 2 ];$/;"	r
z	three.js	/^					_face.z = _centroid.z;$/;"	r
z	three.js	/^					_particle.z = _vector4.z;$/;"	r
z	three.js	/^					bb.max.z = z;$/;"	r
z	three.js	/^					bb.min.z = z;$/;"	r
z	three.js	/^					normal.z = normals[ normalIndex ];$/;"	r
z	three.js	/^					this.max.z = point.z;$/;"	r
z	three.js	/^					this.min.z = point.z;$/;"	r
z	three.js	/^					vector.z = currentPoint[ 2 ];$/;"	r
z	three.js	/^					vector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;$/;"	r
z	three.js	/^					vertex.z = srcVertices[ v + 2 ] * scale;$/;"	r
z	three.js	/^					z = 0.707106781;$/;"	r
z	three.js	/^					z = 0;$/;"	r
z	three.js	/^					z = Math.sqrt( zz );$/;"	r
z	three.js	/^					z = positions[ i + 2 ];$/;"	r
z	three.js	/^					z = positions[ i + 5 ];$/;"	r
z	three.js	/^					z = positions[ i + 8 ];$/;"	r
z	three.js	/^					z = xz \/ x;$/;"	r
z	three.js	/^					z = yz \/ y;$/;"	r
z	three.js	/^				\/\/"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );",$/;"	r
z	three.js	/^				bb.min.z = bb.max.z = positions[ 2 ];$/;"	r
z	three.js	/^				normal.z = normals[ normalIndex ];$/;"	r
z	three.js	/^				p1.z = plane.normal.z > 0 ? box.min.z : box.max.z;$/;"	r
z	three.js	/^				p2.z = plane.normal.z > 0 ? box.max.z : box.min.z;$/;"	r
z	three.js	/^				sprite.z = - sprite._modelViewMatrix.elements[ 14 ];$/;"	r
z	three.js	/^				sprite.z = - sprite.position.z;$/;"	r
z	three.js	/^				v1.z = a[ i + 2 ];$/;"	r
z	three.js	/^				vector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;$/;"	r
z	three.js	/^				z = 0;$/;"	r
z	three.js	/^				z = positions[ i + 2 ];$/;"	r
z	three.js	/^			 this.z = 0;$/;"	r
z	three.js	/^			 this.z = q.z \/ s;$/;"	r
z	three.js	/^			_object.z = _vector3.z;$/;"	r
z	three.js	/^			_object.z = object.renderDepth;$/;"	r
z	three.js	/^			pos.z = p1.z + cx * n.z + cy * bitan.z;$/;"	r
z	three.js	/^			position.z = te[14];$/;"	r
z	three.js	/^			scale.z = sz;$/;"	r
z	three.js	/^			this.z = 0;$/;"	r
z	three.js	/^			this.z = max.z;$/;"	r
z	three.js	/^			this.z = min.z;$/;"	r
z	three.js	/^			this.z = v.z;$/;"	r
z	three.js	/^			vertex.z = pt.z;$/;"	r
z	three.js	/^			vertex.z = radius * Math.cos( u * Math.PI * 2 );$/;"	r
z	three.js	/^			vertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );$/;"	r
z	three.js	/^			vertex.z = this.tube * Math.sin( v );$/;"	r
z	three.js	/^			vertex.z = vertices[ offset ++ ] * scale;$/;"	r
z	three.js	/^			z = normals[ i + 2 ];$/;"	r
z	three.js	/^		this.z = ( e[2] * x + e[6] * y + e[10] * z + e[14] ) * d;$/;"	r
z	three.js	/^		this.z = ( m21 - m12 ) \/ s;$/;"	r
z	three.js	/^		this.z = a.x * b.y - a.y * b.x;$/;"	r
z	three.js	/^		this.z = a.z * b.z;$/;"	r
z	three.js	/^		this.z = a.z + b.z;$/;"	r
z	three.js	/^		this.z = a.z - b.z;$/;"	r
z	three.js	/^		this.z = array[ 2 ];$/;"	r
z	three.js	/^		this.z = e[2] * x + e[5] * y + e[8] * z;$/;"	r
z	three.js	/^		this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;$/;"	r
z	three.js	/^		this.z = e[2] * x + e[6] * y + e[10] * z + e[14];$/;"	r
z	three.js	/^		this.z = e[2] * x + e[6] * y + e[10] * z;$/;"	r
z	three.js	/^		this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;$/;"	r
z	three.js	/^		this.z = m.elements[14];$/;"	r
z	three.js	/^		this.z = me[ offset + 2 ];$/;"	r
z	three.js	/^		this.z = sz;$/;"	r
z	three.js	/^		this.z = v.z;$/;"	r
z	three.js	/^		this.z = x * v.y - y * v.x;$/;"	r
z	three.js	/^		this.z = z;$/;"	r
z	three.js	/^		v3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );$/;"	r
z	three.js	/^		var z = ( far + near ) \/ p;$/;"	r
z	three.js	/^		var z = new THREE.Vector3();$/;"	r
z	three.js	/^		var z = this.z;$/;"	r
z	three.js	/^		vector.z = -1.0;$/;"	r
z	three.js	/^		z = bevelThickness * ( 1 - t );$/;"	r
z	three.js	/^	this.rotation.z = 0;$/;"	r
z	three.js	/^	this.z = 0;$/;"	r
z	three.js	/^	this.z = z || 0;$/;"	r
z1	three.js	/^			z1 = vB.z - vA.z;$/;"	r
z1	three.js	/^			z1 = zB - zA;$/;"	r
z2	three.js	/^			z2 = vC.z - vA.z;$/;"	r
z2	three.js	/^			z2 = zC - zA;$/;"	r
zA	three.js	/^			zA = positions[ a * 3 + 2 ];$/;"	r
zB	three.js	/^			zB = positions[ b * 3 + 2 ];$/;"	r
zC	three.js	/^			zC = positions[ c * 3 + 2 ];$/;"	r
zIndex	three.js	/^		e.style.zIndex = 1000;$/;"	r
zLength	three.js	/^		zLength = faces.length;$/;"	r
zLength	three.js	/^		zLength = vertices.length;$/;"	r
zlights	three.js	/^		zlights = _lights,$/;"	r
zoom	three.js	/^	this.zoom = 1;$/;"	r
zoom	three.js	/^	this.zoom = zoom;$/;"	r
zz	three.js	/^			var zz = ( m33 + 1 ) \/ 2;$/;"	r
40	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	ctx.arc( canvas.width\/2, canvas.width\/2, 40, 0, Math.PI*2, true); $/;"	r
60	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	ctx.arc( canvas.width\/2, canvas.width\/2, 60, 0, Math.PI*2, true); $/;"	r
VirtualJoystick	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^var VirtualJoystick	= function(opts)$/;"	r
_$onMouseDown	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^		this._$onMouseDown	= __bind(this._onMouseDown	, this);$/;"	r
_$onMouseMove	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^		this._$onMouseMove	= __bind(this._onMouseMove	, this);$/;"	r
_$onMouseUp	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^		this._$onMouseUp	= __bind(this._onMouseUp	, this);$/;"	r
_$onTouchEnd	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._$onTouchEnd	= __bind(this._onTouchEnd	, this);$/;"	r
_$onTouchMove	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._$onTouchMove	= __bind(this._onTouchMove	, this);$/;"	r
_$onTouchStart	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._$onTouchStart	= __bind(this._onTouchStart	, this);$/;"	r
__bind	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var __bind	= function(fn, me){ return function(){ return fn.apply(me, arguments); }; };$/;"	r
_baseEl	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._baseEl		= opts.baseElement	|| this._buildJoystickBase();$/;"	r
_baseX	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._baseX	= 0;$/;"	r
_baseX	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._baseX	= this._baseY	= 0;$/;"	r
_baseX	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._baseX	= x;$/;"	r
_baseY	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._baseY	= 0;$/;"	r
_baseY	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._baseY	= y;$/;"	r
_buildJoystickBase	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype._buildJoystickBase	= function()$/;"	r
_buildJoystickStick	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype._buildJoystickStick	= function()$/;"	r
_container	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._container		= opts.container	|| document.body;$/;"	r
_mouseSupport	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._mouseSupport	= opts.mouseSupport !== undefined ? opts.mouseSupport : false;$/;"	r
_onDown	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype._onDown	= function(x, y)$/;"	r
_onMouseDown	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype._onMouseDown	= function(event)$/;"	r
_onMouseMove	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype._onMouseMove	= function(event)$/;"	r
_onMouseUp	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype._onMouseUp	= function(event)$/;"	r
_onMove	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype._onMove	= function(x, y)$/;"	r
_onTouchEnd	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype._onTouchEnd	= function(event)$/;"	r
_onTouchMove	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype._onTouchMove	= function(event)$/;"	r
_onTouchStart	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype._onTouchStart	= function(event)$/;"	r
_onUp	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype._onUp	= function()$/;"	r
_pressed	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._pressed	= false; $/;"	r
_pressed	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._pressed	= false;$/;"	r
_pressed	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._pressed	= true; $/;"	r
_stickEl	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._stickEl		= opts.stickElement	|| this._buildJoystickStick();$/;"	r
_stickX	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^		this._stickX	= x;$/;"	r
_stickX	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._stickX	= 0;$/;"	r
_stickX	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._stickX	= this._stickY	= 0;$/;"	r
_stickX	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._stickX	= x;$/;"	r
_stickY	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^		this._stickY	= y;$/;"	r
_stickY	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._stickY	= 0;$/;"	r
_stickY	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._stickY	= y;$/;"	r
_strokeStyle	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._strokeStyle	= opts.strokeStyle	|| 'cyan';$/;"	r
_touchIdx	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._touchIdx	= null;$/;"	r
_touchIdx	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._touchIdx	= touch.identifier;$/;"	r
addEventListener	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	destObj.addEventListener	= function(event, fct){$/;"	r
canvas	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var canvas	= document.createElement( 'canvas' );$/;"	r
ctx	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var ctx		= canvas.getContext('2d');$/;"	r
deltaX	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var deltaX	= this.deltaX();$/;"	r
deltaX	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype.deltaX	= function(){ return this._stickX - this._baseX;	}$/;"	r
deltaY	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var deltaY	= this.deltaY();$/;"	r
deltaY	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype.deltaY	= function(){ return this._stickY - this._baseY;	}$/;"	r
destroy	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype.destroy	= function()$/;"	r
dispatchEvent	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	destObj.dispatchEvent		= function(event \/* , args... *\/){$/;"	r
display	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._baseEl.style.display	= "";$/;"	r
display	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._baseEl.style.display	= "none";$/;"	r
display	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._stickEl.style.display	= "";$/;"	r
display	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._stickEl.style.display	= "none";$/;"	r
down	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype.down	= function(){$/;"	r
height	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	canvas.height	= 126;$/;"	r
height	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	canvas.height	= 86;$/;"	r
isValid	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var isValid	= this.dispatchEvent('touchStartValidation', event);$/;"	r
left	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^		this._stickEl.style.left	= (x - this._stickEl.width \/2)+"px";$/;"	r
left	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._baseEl.style.left		= (x - this._baseEl.width \/2)+"px";$/;"	r
left	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._stickEl.style.left	= (x - this._stickEl.width \/2)+"px";$/;"	r
left	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype.left	= function(){$/;"	r
lineWidth	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	ctx.lineWidth	= 2; $/;"	r
lineWidth	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	ctx.lineWidth	= 6; $/;"	r
opts	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	opts			= opts			|| {};$/;"	r
position	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._baseEl.style.position	= "absolute"$/;"	r
position	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._container.style.position	= "relative";$/;"	r
position	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._stickEl.style.position	= "absolute"$/;"	r
removeEventListener	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	destObj.removeEventListener	= function(event, fct){$/;"	r
result	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^			var result	= tmpArray[i].apply(this, Array.prototype.slice.call(arguments, 1))$/;"	r
right	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype.right	= function(){$/;"	r
strokeStyle	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	ctx.strokeStyle	= this._strokeStyle; $/;"	r
strokeStyle	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	ctx.strokeStyle = this._strokeStyle; $/;"	r
tmpArray	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^		var tmpArray	= this._events[event].slice(); $/;"	r
top	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^		this._stickEl.style.top		= (y - this._stickEl.height\/2)+"px";$/;"	r
top	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._baseEl.style.top		= (y - this._baseEl.height\/2)+"px";$/;"	r
top	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	this._stickEl.style.top		= (y - this._stickEl.height\/2)+"px";$/;"	r
touch	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var touch	= event.changedTouches[0];$/;"	r
touch	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var touch	= touchList[i];$/;"	r
touchList	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var touchList	= event.changedTouches;$/;"	r
touchScreenAvailable	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.touchScreenAvailable	= function()$/;"	r
up	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^VirtualJoystick.prototype.up	= function(){$/;"	r
width	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	canvas.width	= 126;$/;"	r
width	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	canvas.width	= 86;$/;"	r
x	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var x		= touch.pageX;$/;"	r
x	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var x	= event.clientX;$/;"	r
y	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var y		= touch.pageY;$/;"	r
y	virtual_joystick/bower_components/virtualjoystick.js/virtualjoystick.js	/^	var y	= event.clientY;$/;"	r
